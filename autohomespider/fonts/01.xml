<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="3.34">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name="uniEDEF"/>
    <GlyphID id="2" name="uniED3B"/>
    <GlyphID id="3" name="uniED8D"/>
    <GlyphID id="4" name="uniECDA"/>
    <GlyphID id="5" name="uniED2B"/>
    <GlyphID id="6" name="uniEC78"/>
    <GlyphID id="7" name="uniEDB9"/>
    <GlyphID id="8" name="uniEE0A"/>
    <GlyphID id="9" name="uniED57"/>
    <GlyphID id="10" name="uniECA4"/>
    <GlyphID id="11" name="uniECF5"/>
    <GlyphID id="12" name="uniEC42"/>
    <GlyphID id="13" name="uniEC94"/>
    <GlyphID id="14" name="uniEDD4"/>
    <GlyphID id="15" name="uniED21"/>
    <GlyphID id="16" name="uniED73"/>
    <GlyphID id="17" name="uniECBF"/>
    <GlyphID id="18" name="uniEE00"/>
    <GlyphID id="19" name="uniEC5E"/>
    <GlyphID id="20" name="uniED9E"/>
    <GlyphID id="21" name="uniEDF0"/>
    <GlyphID id="22" name="uniED3D"/>
    <GlyphID id="23" name="uniEC89"/>
    <GlyphID id="24" name="uniECDB"/>
    <GlyphID id="25" name="uniEC28"/>
    <GlyphID id="26" name="uniED68"/>
    <GlyphID id="27" name="uniEDBA"/>
    <GlyphID id="28" name="uniED07"/>
    <GlyphID id="29" name="uniED59"/>
    <GlyphID id="30" name="uniECA5"/>
    <GlyphID id="31" name="uniEDE6"/>
    <GlyphID id="32" name="uniEC44"/>
    <GlyphID id="33" name="uniED84"/>
    <GlyphID id="34" name="uniECD1"/>
    <GlyphID id="35" name="uniED23"/>
    <GlyphID id="36" name="uniEC6F"/>
    <GlyphID id="37" name="uniECC1"/>
    <GlyphID id="38" name="uniEE02"/>
    <GlyphID id="39" name="uniED4E"/>
    <GlyphID id="40" name="uniEDA0"/>
    <GlyphID id="41" name="uniECED"/>
    <GlyphID id="42" name="uniEC39"/>
    <GlyphID id="43" name="uniEC8B"/>
    <GlyphID id="44" name="uniEDCC"/>
    <GlyphID id="45" name="uniEC2A"/>
    <GlyphID id="46" name="uniED6A"/>
    <GlyphID id="47" name="uniECB7"/>
    <GlyphID id="48" name="uniED09"/>
    <GlyphID id="49" name="uniEC55"/>
    <GlyphID id="50" name="uniED96"/>
    <GlyphID id="51" name="uniEDE8"/>
    <GlyphID id="52" name="uniED34"/>
    <GlyphID id="53" name="uniED86"/>
    <GlyphID id="54" name="uniECD3"/>
    <GlyphID id="55" name="uniEC1F"/>
    <GlyphID id="56" name="uniEC71"/>
    <GlyphID id="57" name="uniEDB2"/>
    <GlyphID id="58" name="uniECFE"/>
    <GlyphID id="59" name="uniED50"/>
    <GlyphID id="60" name="uniEC9D"/>
    <GlyphID id="61" name="uniECEE"/>
    <GlyphID id="62" name="uniEC3B"/>
    <GlyphID id="63" name="uniED7C"/>
    <GlyphID id="64" name="uniEDCD"/>
    <GlyphID id="65" name="uniED1A"/>
    <GlyphID id="66" name="uniEC67"/>
    <GlyphID id="67" name="uniECB8"/>
    <GlyphID id="68" name="uniEDF9"/>
    <GlyphID id="69" name="uniEC57"/>
    <GlyphID id="70" name="uniED97"/>
    <GlyphID id="71" name="uniECE4"/>
    <GlyphID id="72" name="uniED36"/>
    <GlyphID id="73" name="uniEC82"/>
    <GlyphID id="74" name="uniEDC3"/>
    <GlyphID id="75" name="uniEC21"/>
    <GlyphID id="76" name="uniED61"/>
    <GlyphID id="77" name="uniEDB3"/>
    <GlyphID id="78" name="uniED00"/>
    <GlyphID id="79" name="uniEC4C"/>
    <GlyphID id="80" name="uniEC9E"/>
    <GlyphID id="81" name="uniEDDF"/>
    <GlyphID id="82" name="uniED7D"/>
    <GlyphID id="83" name="uniECCA"/>
    <GlyphID id="84" name="uniED1C"/>
    <GlyphID id="85" name="uniEC68"/>
    <GlyphID id="86" name="uniEDA9"/>
    <GlyphID id="87" name="uniEDFB"/>
    <GlyphID id="88" name="uniED47"/>
    <GlyphID id="89" name="uniECE6"/>
    <GlyphID id="90" name="uniEC32"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="6.21"/>
    <checkSumAdjustment value="0xdef08b5e"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00100000 00011001"/>
    <unitsPerEm value="2048"/>
    <created value="Fri Jul 18 15:30:55 1997"/>
    <modified value="Mon Jun  4 07:11:14 2018"/>
    <xMin value="-5"/>
    <yMin value="-305"/>
    <xMax value="2058"/>
    <yMax value="1736"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="9"/>
    <fontDirectionHint value="1"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="2167"/>
    <descent value="-536"/>
    <lineGap value="0"/>
    <advanceWidthMax value="2048"/>
    <minLeftSideBearing value="8"/>
    <minRightSideBearing value="-17"/>
    <xMaxExtent value="2065"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="2"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="91"/>
    <maxPoints value="103"/>
    <maxContours value="10"/>
    <maxCompositePoints value="0"/>
    <maxCompositeContours value="0"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="16"/>
    <maxStorage value="47"/>
    <maxFunctionDefs value="92"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="2225"/>
    <maxSizeOfInstructions value="2566"/>
    <maxComponentElements value="0"/>
    <maxComponentDepth value="0"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="3"/>
    <xAvgCharWidth value="987"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00001000"/>
    <ySubscriptXSize value="1434"/>
    <ySubscriptYSize value="1331"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="182"/>
    <ySuperscriptXSize value="1434"/>
    <ySuperscriptYSize value="1331"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="581"/>
    <yStrikeoutSize value="102"/>
    <yStrikeoutPosition value="655"/>
    <sFamilyClass value="2053"/>
    <panose>
      <bFamilyType value="2"/>
      <bSerifStyle value="11"/>
      <bWeight value="5"/>
      <bProportion value="3"/>
      <bContrast value="2"/>
      <bStrokeVariation value="2"/>
      <bArmStyle value="4"/>
      <bLetterForm value="2"/>
      <bMidline value="2"/>
      <bXHeight value="4"/>
    </panose>
    <ulUnicodeRange1 value="10000000 00000000 00000010 10000111"/>
    <ulUnicodeRange2 value="00101000 11001111 00111100 01010010"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00010110"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="MS  "/>
    <fsSelection value="00000000 01000000"/>
    <usFirstCharIndex value="60447"/>
    <usLastCharIndex value="60938"/>
    <sTypoAscender value="1663"/>
    <sTypoDescender value="-519"/>
    <sTypoLineGap value="9"/>
    <usWinAscent value="2167"/>
    <usWinDescent value="536"/>
    <ulCodePageRange1 value="00000000 00000100 00000000 00011111"/>
    <ulCodePageRange2 value="00000000 00000000 00000000 00000000"/>
    <sxHeight value="1106"/>
    <sCapHeight value="1549"/>
    <usDefaultChar value="0"/>
    <usBreakChar value="32"/>
    <usMaxContext value="2"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="1428" lsb="179"/>
    <mtx name="uniEC1F" width="2048" lsb="26"/>
    <mtx name="uniEC21" width="2048" lsb="12"/>
    <mtx name="uniEC28" width="2048" lsb="26"/>
    <mtx name="uniEC2A" width="2048" lsb="36"/>
    <mtx name="uniEC32" width="2048" lsb="22"/>
    <mtx name="uniEC39" width="2048" lsb="48"/>
    <mtx name="uniEC3B" width="2048" lsb="132"/>
    <mtx name="uniEC42" width="2048" lsb="138"/>
    <mtx name="uniEC44" width="2048" lsb="52"/>
    <mtx name="uniEC4C" width="2048" lsb="186"/>
    <mtx name="uniEC55" width="2048" lsb="32"/>
    <mtx name="uniEC57" width="2048" lsb="36"/>
    <mtx name="uniEC5E" width="2048" lsb="36"/>
    <mtx name="uniEC67" width="2048" lsb="24"/>
    <mtx name="uniEC68" width="2048" lsb="204"/>
    <mtx name="uniEC6F" width="2048" lsb="54"/>
    <mtx name="uniEC71" width="2048" lsb="60"/>
    <mtx name="uniEC78" width="2048" lsb="50"/>
    <mtx name="uniEC82" width="2048" lsb="12"/>
    <mtx name="uniEC89" width="2048" lsb="14"/>
    <mtx name="uniEC8B" width="2048" lsb="34"/>
    <mtx name="uniEC94" width="2048" lsb="32"/>
    <mtx name="uniEC9D" width="2048" lsb="32"/>
    <mtx name="uniEC9E" width="2048" lsb="10"/>
    <mtx name="uniECA4" width="2048" lsb="22"/>
    <mtx name="uniECA5" width="2048" lsb="24"/>
    <mtx name="uniECB7" width="2048" lsb="62"/>
    <mtx name="uniECB8" width="2048" lsb="32"/>
    <mtx name="uniECBF" width="2048" lsb="26"/>
    <mtx name="uniECC1" width="2048" lsb="26"/>
    <mtx name="uniECCA" width="2048" lsb="24"/>
    <mtx name="uniECD1" width="2048" lsb="16"/>
    <mtx name="uniECD3" width="2048" lsb="54"/>
    <mtx name="uniECDA" width="2048" lsb="50"/>
    <mtx name="uniECDB" width="2048" lsb="42"/>
    <mtx name="uniECE4" width="2048" lsb="168"/>
    <mtx name="uniECE6" width="2048" lsb="110"/>
    <mtx name="uniECED" width="2048" lsb="106"/>
    <mtx name="uniECEE" width="2048" lsb="34"/>
    <mtx name="uniECF5" width="2048" lsb="28"/>
    <mtx name="uniECFE" width="2048" lsb="28"/>
    <mtx name="uniED00" width="2048" lsb="28"/>
    <mtx name="uniED07" width="2048" lsb="36"/>
    <mtx name="uniED09" width="2048" lsb="14"/>
    <mtx name="uniED1A" width="2048" lsb="38"/>
    <mtx name="uniED1C" width="2048" lsb="44"/>
    <mtx name="uniED21" width="2048" lsb="36"/>
    <mtx name="uniED23" width="2048" lsb="24"/>
    <mtx name="uniED2B" width="2048" lsb="24"/>
    <mtx name="uniED34" width="2048" lsb="40"/>
    <mtx name="uniED36" width="2048" lsb="184"/>
    <mtx name="uniED3B" width="2048" lsb="132"/>
    <mtx name="uniED3D" width="2048" lsb="12"/>
    <mtx name="uniED47" width="2048" lsb="32"/>
    <mtx name="uniED4E" width="2048" lsb="40"/>
    <mtx name="uniED50" width="2048" lsb="110"/>
    <mtx name="uniED57" width="2048" lsb="16"/>
    <mtx name="uniED59" width="2048" lsb="114"/>
    <mtx name="uniED61" width="2048" lsb="24"/>
    <mtx name="uniED68" width="2048" lsb="24"/>
    <mtx name="uniED6A" width="2048" lsb="22"/>
    <mtx name="uniED73" width="2048" lsb="40"/>
    <mtx name="uniED7C" width="2048" lsb="130"/>
    <mtx name="uniED7D" width="2048" lsb="24"/>
    <mtx name="uniED84" width="2048" lsb="36"/>
    <mtx name="uniED86" width="2048" lsb="18"/>
    <mtx name="uniED8D" width="2048" lsb="26"/>
    <mtx name="uniED96" width="2048" lsb="52"/>
    <mtx name="uniED97" width="2048" lsb="36"/>
    <mtx name="uniED9E" width="2048" lsb="32"/>
    <mtx name="uniEDA0" width="2048" lsb="28"/>
    <mtx name="uniEDA9" width="2048" lsb="20"/>
    <mtx name="uniEDB2" width="2048" lsb="8"/>
    <mtx name="uniEDB3" width="2048" lsb="52"/>
    <mtx name="uniEDB9" width="2048" lsb="38"/>
    <mtx name="uniEDBA" width="2048" lsb="36"/>
    <mtx name="uniEDC3" width="2048" lsb="144"/>
    <mtx name="uniEDCC" width="2048" lsb="34"/>
    <mtx name="uniEDCD" width="2048" lsb="44"/>
    <mtx name="uniEDD4" width="2048" lsb="38"/>
    <mtx name="uniEDDF" width="2048" lsb="8"/>
    <mtx name="uniEDE6" width="2048" lsb="30"/>
    <mtx name="uniEDE8" width="2048" lsb="52"/>
    <mtx name="uniEDEF" width="2048" lsb="36"/>
    <mtx name="uniEDF0" width="2048" lsb="32"/>
    <mtx name="uniEDF9" width="2048" lsb="20"/>
    <mtx name="uniEDFB" width="2048" lsb="50"/>
    <mtx name="uniEE00" width="2048" lsb="14"/>
    <mtx name="uniEE02" width="2048" lsb="248"/>
    <mtx name="uniEE0A" width="2048" lsb="60"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0xec1f" name="uniEC1F"/><!-- ???? -->
      <map code="0xec21" name="uniEC21"/><!-- ???? -->
      <map code="0xec28" name="uniEC28"/><!-- ???? -->
      <map code="0xec2a" name="uniEC2A"/><!-- ???? -->
      <map code="0xec32" name="uniEC32"/><!-- ???? -->
      <map code="0xec39" name="uniEC39"/><!-- ???? -->
      <map code="0xec3b" name="uniEC3B"/><!-- ???? -->
      <map code="0xec42" name="uniEC42"/><!-- ???? -->
      <map code="0xec44" name="uniEC44"/><!-- ???? -->
      <map code="0xec4c" name="uniEC4C"/><!-- ???? -->
      <map code="0xec55" name="uniEC55"/><!-- ???? -->
      <map code="0xec57" name="uniEC57"/><!-- ???? -->
      <map code="0xec5e" name="uniEC5E"/><!-- ???? -->
      <map code="0xec67" name="uniEC67"/><!-- ???? -->
      <map code="0xec68" name="uniEC68"/><!-- ???? -->
      <map code="0xec6f" name="uniEC6F"/><!-- ???? -->
      <map code="0xec71" name="uniEC71"/><!-- ???? -->
      <map code="0xec78" name="uniEC78"/><!-- ???? -->
      <map code="0xec82" name="uniEC82"/><!-- ???? -->
      <map code="0xec89" name="uniEC89"/><!-- ???? -->
      <map code="0xec8b" name="uniEC8B"/><!-- ???? -->
      <map code="0xec94" name="uniEC94"/><!-- ???? -->
      <map code="0xec9d" name="uniEC9D"/><!-- ???? -->
      <map code="0xec9e" name="uniEC9E"/><!-- ???? -->
      <map code="0xeca4" name="uniECA4"/><!-- ???? -->
      <map code="0xeca5" name="uniECA5"/><!-- ???? -->
      <map code="0xecb7" name="uniECB7"/><!-- ???? -->
      <map code="0xecb8" name="uniECB8"/><!-- ???? -->
      <map code="0xecbf" name="uniECBF"/><!-- ???? -->
      <map code="0xecc1" name="uniECC1"/><!-- ???? -->
      <map code="0xecca" name="uniECCA"/><!-- ???? -->
      <map code="0xecd1" name="uniECD1"/><!-- ???? -->
      <map code="0xecd3" name="uniECD3"/><!-- ???? -->
      <map code="0xecda" name="uniECDA"/><!-- ???? -->
      <map code="0xecdb" name="uniECDB"/><!-- ???? -->
      <map code="0xece4" name="uniECE4"/><!-- ???? -->
      <map code="0xece6" name="uniECE6"/><!-- ???? -->
      <map code="0xeced" name="uniECED"/><!-- ???? -->
      <map code="0xecee" name="uniECEE"/><!-- ???? -->
      <map code="0xecf5" name="uniECF5"/><!-- ???? -->
      <map code="0xecfe" name="uniECFE"/><!-- ???? -->
      <map code="0xed00" name="uniED00"/><!-- ???? -->
      <map code="0xed07" name="uniED07"/><!-- ???? -->
      <map code="0xed09" name="uniED09"/><!-- ???? -->
      <map code="0xed1a" name="uniED1A"/><!-- ???? -->
      <map code="0xed1c" name="uniED1C"/><!-- ???? -->
      <map code="0xed21" name="uniED21"/><!-- ???? -->
      <map code="0xed23" name="uniED23"/><!-- ???? -->
      <map code="0xed2b" name="uniED2B"/><!-- ???? -->
      <map code="0xed34" name="uniED34"/><!-- ???? -->
      <map code="0xed36" name="uniED36"/><!-- ???? -->
      <map code="0xed3b" name="uniED3B"/><!-- ???? -->
      <map code="0xed3d" name="uniED3D"/><!-- ???? -->
      <map code="0xed47" name="uniED47"/><!-- ???? -->
      <map code="0xed4e" name="uniED4E"/><!-- ???? -->
      <map code="0xed50" name="uniED50"/><!-- ???? -->
      <map code="0xed57" name="uniED57"/><!-- ???? -->
      <map code="0xed59" name="uniED59"/><!-- ???? -->
      <map code="0xed61" name="uniED61"/><!-- ???? -->
      <map code="0xed68" name="uniED68"/><!-- ???? -->
      <map code="0xed6a" name="uniED6A"/><!-- ???? -->
      <map code="0xed73" name="uniED73"/><!-- ???? -->
      <map code="0xed7c" name="uniED7C"/><!-- ???? -->
      <map code="0xed7d" name="uniED7D"/><!-- ???? -->
      <map code="0xed84" name="uniED84"/><!-- ???? -->
      <map code="0xed86" name="uniED86"/><!-- ???? -->
      <map code="0xed8d" name="uniED8D"/><!-- ???? -->
      <map code="0xed96" name="uniED96"/><!-- ???? -->
      <map code="0xed97" name="uniED97"/><!-- ???? -->
      <map code="0xed9e" name="uniED9E"/><!-- ???? -->
      <map code="0xeda0" name="uniEDA0"/><!-- ???? -->
      <map code="0xeda9" name="uniEDA9"/><!-- ???? -->
      <map code="0xedb2" name="uniEDB2"/><!-- ???? -->
      <map code="0xedb3" name="uniEDB3"/><!-- ???? -->
      <map code="0xedb9" name="uniEDB9"/><!-- ???? -->
      <map code="0xedba" name="uniEDBA"/><!-- ???? -->
      <map code="0xedc3" name="uniEDC3"/><!-- ???? -->
      <map code="0xedcc" name="uniEDCC"/><!-- ???? -->
      <map code="0xedcd" name="uniEDCD"/><!-- ???? -->
      <map code="0xedd4" name="uniEDD4"/><!-- ???? -->
      <map code="0xeddf" name="uniEDDF"/><!-- ???? -->
      <map code="0xede6" name="uniEDE6"/><!-- ???? -->
      <map code="0xede8" name="uniEDE8"/><!-- ???? -->
      <map code="0xedef" name="uniEDEF"/><!-- ???? -->
      <map code="0xedf0" name="uniEDF0"/><!-- ???? -->
      <map code="0xedf9" name="uniEDF9"/><!-- ???? -->
      <map code="0xedfb" name="uniEDFB"/><!-- ???? -->
      <map code="0xee00" name="uniEE00"/><!-- ???? -->
      <map code="0xee02" name="uniEE02"/><!-- ???? -->
      <map code="0xee0a" name="uniEE0A"/><!-- ???? -->
    </cmap_format_4>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0xec1f" name="uniEC1F"/><!-- ???? -->
      <map code="0xec21" name="uniEC21"/><!-- ???? -->
      <map code="0xec28" name="uniEC28"/><!-- ???? -->
      <map code="0xec2a" name="uniEC2A"/><!-- ???? -->
      <map code="0xec32" name="uniEC32"/><!-- ???? -->
      <map code="0xec39" name="uniEC39"/><!-- ???? -->
      <map code="0xec3b" name="uniEC3B"/><!-- ???? -->
      <map code="0xec42" name="uniEC42"/><!-- ???? -->
      <map code="0xec44" name="uniEC44"/><!-- ???? -->
      <map code="0xec4c" name="uniEC4C"/><!-- ???? -->
      <map code="0xec55" name="uniEC55"/><!-- ???? -->
      <map code="0xec57" name="uniEC57"/><!-- ???? -->
      <map code="0xec5e" name="uniEC5E"/><!-- ???? -->
      <map code="0xec67" name="uniEC67"/><!-- ???? -->
      <map code="0xec68" name="uniEC68"/><!-- ???? -->
      <map code="0xec6f" name="uniEC6F"/><!-- ???? -->
      <map code="0xec71" name="uniEC71"/><!-- ???? -->
      <map code="0xec78" name="uniEC78"/><!-- ???? -->
      <map code="0xec82" name="uniEC82"/><!-- ???? -->
      <map code="0xec89" name="uniEC89"/><!-- ???? -->
      <map code="0xec8b" name="uniEC8B"/><!-- ???? -->
      <map code="0xec94" name="uniEC94"/><!-- ???? -->
      <map code="0xec9d" name="uniEC9D"/><!-- ???? -->
      <map code="0xec9e" name="uniEC9E"/><!-- ???? -->
      <map code="0xeca4" name="uniECA4"/><!-- ???? -->
      <map code="0xeca5" name="uniECA5"/><!-- ???? -->
      <map code="0xecb7" name="uniECB7"/><!-- ???? -->
      <map code="0xecb8" name="uniECB8"/><!-- ???? -->
      <map code="0xecbf" name="uniECBF"/><!-- ???? -->
      <map code="0xecc1" name="uniECC1"/><!-- ???? -->
      <map code="0xecca" name="uniECCA"/><!-- ???? -->
      <map code="0xecd1" name="uniECD1"/><!-- ???? -->
      <map code="0xecd3" name="uniECD3"/><!-- ???? -->
      <map code="0xecda" name="uniECDA"/><!-- ???? -->
      <map code="0xecdb" name="uniECDB"/><!-- ???? -->
      <map code="0xece4" name="uniECE4"/><!-- ???? -->
      <map code="0xece6" name="uniECE6"/><!-- ???? -->
      <map code="0xeced" name="uniECED"/><!-- ???? -->
      <map code="0xecee" name="uniECEE"/><!-- ???? -->
      <map code="0xecf5" name="uniECF5"/><!-- ???? -->
      <map code="0xecfe" name="uniECFE"/><!-- ???? -->
      <map code="0xed00" name="uniED00"/><!-- ???? -->
      <map code="0xed07" name="uniED07"/><!-- ???? -->
      <map code="0xed09" name="uniED09"/><!-- ???? -->
      <map code="0xed1a" name="uniED1A"/><!-- ???? -->
      <map code="0xed1c" name="uniED1C"/><!-- ???? -->
      <map code="0xed21" name="uniED21"/><!-- ???? -->
      <map code="0xed23" name="uniED23"/><!-- ???? -->
      <map code="0xed2b" name="uniED2B"/><!-- ???? -->
      <map code="0xed34" name="uniED34"/><!-- ???? -->
      <map code="0xed36" name="uniED36"/><!-- ???? -->
      <map code="0xed3b" name="uniED3B"/><!-- ???? -->
      <map code="0xed3d" name="uniED3D"/><!-- ???? -->
      <map code="0xed47" name="uniED47"/><!-- ???? -->
      <map code="0xed4e" name="uniED4E"/><!-- ???? -->
      <map code="0xed50" name="uniED50"/><!-- ???? -->
      <map code="0xed57" name="uniED57"/><!-- ???? -->
      <map code="0xed59" name="uniED59"/><!-- ???? -->
      <map code="0xed61" name="uniED61"/><!-- ???? -->
      <map code="0xed68" name="uniED68"/><!-- ???? -->
      <map code="0xed6a" name="uniED6A"/><!-- ???? -->
      <map code="0xed73" name="uniED73"/><!-- ???? -->
      <map code="0xed7c" name="uniED7C"/><!-- ???? -->
      <map code="0xed7d" name="uniED7D"/><!-- ???? -->
      <map code="0xed84" name="uniED84"/><!-- ???? -->
      <map code="0xed86" name="uniED86"/><!-- ???? -->
      <map code="0xed8d" name="uniED8D"/><!-- ???? -->
      <map code="0xed96" name="uniED96"/><!-- ???? -->
      <map code="0xed97" name="uniED97"/><!-- ???? -->
      <map code="0xed9e" name="uniED9E"/><!-- ???? -->
      <map code="0xeda0" name="uniEDA0"/><!-- ???? -->
      <map code="0xeda9" name="uniEDA9"/><!-- ???? -->
      <map code="0xedb2" name="uniEDB2"/><!-- ???? -->
      <map code="0xedb3" name="uniEDB3"/><!-- ???? -->
      <map code="0xedb9" name="uniEDB9"/><!-- ???? -->
      <map code="0xedba" name="uniEDBA"/><!-- ???? -->
      <map code="0xedc3" name="uniEDC3"/><!-- ???? -->
      <map code="0xedcc" name="uniEDCC"/><!-- ???? -->
      <map code="0xedcd" name="uniEDCD"/><!-- ???? -->
      <map code="0xedd4" name="uniEDD4"/><!-- ???? -->
      <map code="0xeddf" name="uniEDDF"/><!-- ???? -->
      <map code="0xede6" name="uniEDE6"/><!-- ???? -->
      <map code="0xede8" name="uniEDE8"/><!-- ???? -->
      <map code="0xedef" name="uniEDEF"/><!-- ???? -->
      <map code="0xedf0" name="uniEDF0"/><!-- ???? -->
      <map code="0xedf9" name="uniEDF9"/><!-- ???? -->
      <map code="0xedfb" name="uniEDFB"/><!-- ???? -->
      <map code="0xee00" name="uniEE00"/><!-- ???? -->
      <map code="0xee02" name="uniEE02"/><!-- ???? -->
      <map code="0xee0a" name="uniEE0A"/><!-- ???? -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      NPUSHB[ ]	/* 81 values pushed */
      91 90 89 84 82 77 76 75 74 73 72 71 70 67 66 65 64 63 62 61 60 59 58 57 56
      55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31
      30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6
      5 4 3 2 1 0
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        RTG[ ]	/* RoundToGrid */
        PUSHB[ ]	/* 1 value pushed */
        24
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
          ROUND[10]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          25
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          12
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          SWAP[ ]	/* SwapTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          12
          FLIPOFF[ ]	/* SetAutoFlipOff */
          MIRP[10000]	/* MoveIndirectRelPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP2[ ]	/* SetRefPoint2 */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          SRP1[ ]	/* SetRefPoint1 */
          DUP[ ]	/* DuplicateTopStack */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        RTG[ ]	/* RoundToGrid */
        PUSHB[ ]	/* 1 value pushed */
        24
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          5
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          0
          SZP0[ ]	/* SetZonePointer0 */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          20
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 2 values pushed */
            0 64
            SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          SRP1[ ]	/* SetRefPoint1 */
          DUP[ ]	/* DuplicateTopStack */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        RTG[ ]	/* RoundToGrid */
        PUSHB[ ]	/* 1 value pushed */
        24
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10010]	/* MoveIndirectRelPt */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP2[ ]	/* SetRefPoint2 */
          FLIPON[ ]	/* SetAutoFlipOn */
        ELSE[ ]	/* Else */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          MD[1]	/* MeasureDistance */
          SUB[ ]	/* Subtract */
          ABS[ ]	/* Absolute */
          PUSHB[ ]	/* 1 value pushed */
          40
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            SWAP[ ]	/* SwapTopStack */
            SRP0[ ]	/* SetRefPoint0 */
            MDRP[10110]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            3
            CINDEX[ ]	/* CopyXToTopStack */
            SRP0[ ]	/* SetRefPoint0 */
            MIRP[10010]	/* MoveIndirectRelPt */
            POP[ ]	/* PopTopStack */
            PUSHB[ ]	/* 1 value pushed */
            0
            SRP2[ ]	/* SetRefPoint2 */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        26
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          MD[1]	/* MeasureDistance */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          ABS[ ]	/* Absolute */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            3
            CINDEX[ ]	/* CopyXToTopStack */
            PUSHB[ ]	/* 1 value pushed */
            3
            CINDEX[ ]	/* CopyXToTopStack */
            MD[0]	/* MeasureDistance */
            PUSHB[ ]	/* 1 value pushed */
            0
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              PUSHB[ ]	/* 1 value pushed */
              0
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                PUSHW[ ]	/* 1 value pushed */
                -30
                SHPIX[ ]	/* ShiftZoneByPixel */
                POP[ ]	/* PopTopStack */
              ELSE[ ]	/* Else */
                PUSHB[ ]	/* 1 value pushed */
                0
                SHPIX[ ]	/* ShiftZoneByPixel */
                POP[ ]	/* PopTopStack */
              EIF[ ]	/* EndIf */
            ELSE[ ]	/* Else */
              PUSHB[ ]	/* 1 value pushed */
              0
              GT[ ]	/* GreaterThan */
              IF[ ]	/* If */
                PUSHB[ ]	/* 1 value pushed */
                30
                SHPIX[ ]	/* ShiftZoneByPixel */
                POP[ ]	/* PopTopStack */
              ELSE[ ]	/* Else */
                PUSHB[ ]	/* 1 value pushed */
                0
                SHPIX[ ]	/* ShiftZoneByPixel */
                POP[ ]	/* PopTopStack */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        RTG[ ]	/* RoundToGrid */
        PUSHB[ ]	/* 1 value pushed */
        24
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          5
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          0
          SZP0[ ]	/* SetZonePointer0 */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          20
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHW[ ]	/* 2 values pushed */
            0 -64
            SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          SRP1[ ]	/* SetRefPoint1 */
          DUP[ ]	/* DuplicateTopStack */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        FLIPOFF[ ]	/* SetAutoFlipOff */
        SVTCA[1]	/* SetFPVectorToAxis */
        ROLL[ ]	/* RollTopThreeStack */
        SRP0[ ]	/* SetRefPoint0 */
        PUSHB[ ]	/* 2 values pushed */
        12 25
        RS[ ]	/* ReadStore */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP1[ ]	/* SetZonePointer1 */
        PUSHB[ ]	/* 2 values pushed */
        0 12
        MIRP[00010]	/* MoveIndirectRelPt */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP2[ ]	/* SetZonePointer2 */
        PUSHW[ ]	/* 2 values pushed */
        0 -16
        SHPIX[ ]	/* ShiftZoneByPixel */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        0
        ALIGNRP[ ]	/* AlignRelativePt */
        PUSHB[ ]	/* 1 value pushed */
        40
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        PUSHB[ ]	/* 1 value pushed */
        0
        ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        RTG[ ]	/* RoundToGrid */
        PUSHB[ ]	/* 1 value pushed */
        0
        MDAP[1]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZP1[ ]	/* SetZonePointer1 */
        MIRP[10010]	/* MoveIndirectRelPt */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZP0[ ]	/* SetZonePointer0 */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZP2[ ]	/* SetZonePointer2 */
        FLIPON[ ]	/* SetAutoFlipOn */
        PUSHB[ ]	/* 1 value pushed */
        0
        SRP2[ ]	/* SetRefPoint2 */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        RTG[ ]	/* RoundToGrid */
        PUSHB[ ]	/* 1 value pushed */
        24
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          5
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          0
          SZP0[ ]	/* SetZonePointer0 */
          PUSHW[ ]	/* 2 values pushed */
          0 -32
          SHPIX[ ]	/* ShiftZoneByPixel */
          PUSHB[ ]	/* 1 value pushed */
          6
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          SRP1[ ]	/* SetRefPoint1 */
          DUP[ ]	/* DuplicateTopStack */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        RTG[ ]	/* RoundToGrid */
        PUSHB[ ]	/* 1 value pushed */
        24
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
          ABS[ ]	/* Absolute */
          ROUND[10]	/* Round */
          SWAP[ ]	/* SwapTopStack */
          RCVT[ ]	/* ReadCVT */
          ABS[ ]	/* Absolute */
          ROUND[01]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          25
          RS[ ]	/* ReadStore */
          ABS[ ]	/* Absolute */
          ADD[ ]	/* Add */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          12
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          SWAP[ ]	/* SwapTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          12
          MIRP[10000]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP2[ ]	/* SetRefPoint2 */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            SRP1[ ]	/* SetRefPoint1 */
            SHP[1]	/* ShiftPointByLastPoint */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHB[ ]	/* 1 value pushed */
        200
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          11 10
          RS[ ]	/* ReadStore */
          SWAP[ ]	/* SwapTopStack */
          RS[ ]	/* ReadStore */
          NEG[ ]	/* Negate */
          SPVFS[ ]	/* SetPVectorFromStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHB[ ]	/* 1 value pushed */
        200
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 2 values pushed */
          10 11
          RS[ ]	/* ReadStore */
          SWAP[ ]	/* SwapTopStack */
          RS[ ]	/* ReadStore */
          SFVFS[ ]	/* SetFVectorFromStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        12
        SWAP[ ]	/* SwapTopStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        PUSHB[ ]	/* 2 values pushed */
        1 12
        MIAP[0]	/* MoveIndirectAbsPt */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        12
        SWAP[ ]	/* SwapTopStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        PUSHB[ ]	/* 2 values pushed */
        2 12
        RCVT[ ]	/* ReadCVT */
        MSIRP[0]	/* MoveStackIndirRelPt */
        PUSHB[ ]	/* 2 values pushed */
        2 0
        SFVTL[0]	/* SetFVectorToLine */
        GFV[ ]	/* GetFVector */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        18
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        RCVT[ ]	/* ReadCVT */
        ROUND[10]	/* Round */
        PUSHB[ ]	/* 1 value pushed */
        64
        MAX[ ]	/* Maximum */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        19
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        RCVT[ ]	/* ReadCVT */
        ROUND[10]	/* Round */
        PUSHW[ ]	/* 1 value pushed */
        -64
        MIN[ ]	/* Minimum */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        PUSHB[ ]	/* 1 value pushed */
        18
        CALL[ ]	/* CallFunction */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        PUSHB[ ]	/* 1 value pushed */
        19
        CALL[ ]	/* CallFunction */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHB[ ]	/* 1 value pushed */
        200
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          6
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          7
          RS[ ]	/* ReadStore */
          NEG[ ]	/* Negate */
          SPVFS[ ]	/* SetPVectorFromStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ROUND[01]	/* Round */
        PUSHB[ ]	/* 1 value pushed */
        64
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        0
        MAX[ ]	/* Maximum */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 2 values pushed */
        44 192
        ROLL[ ]	/* RollTopThreeStack */
        MIN[ ]	/* Minimum */
        PUSHW[ ]	/* 1 value pushed */
        4096
        DIV[ ]	/* Divide */
        ADD[ ]	/* Add */
        CALL[ ]	/* CallFunction */
        GPV[ ]	/* GetPVector */
        ABS[ ]	/* Absolute */
        SWAP[ ]	/* SwapTopStack */
        ABS[ ]	/* Absolute */
        SUB[ ]	/* Subtract */
        NOT[ ]	/* LogicalNot */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          3
          SUB[ ]	/* Subtract */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 3
        CINDEX[ ]	/* CopyXToTopStack */
        RCVT[ ]	/* ReadCVT */
        ROUND[00]	/* Round */
        EQ[ ]	/* Equal */
        PUSHB[ ]	/* 1 value pushed */
        28
        MPPEM[ ]	/* MeasurePixelPerEm */
        LT[ ]	/* LessThan */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ADD[ ]	/* Add */
          ROUND[00]	/* Round */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          ROUND[00]	/* Round */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ROUND[00]	/* Round */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        ROUND[00]	/* Round */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        RCVT[ ]	/* ReadCVT */
        ABS[ ]	/* Absolute */
        ROUND[00]	/* Round */
        NEG[ ]	/* Negate */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        9
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          SDPVTL[1]	/* SetDualPVectorToLine */
          POP[ ]	/* PopTopStack */
          MDRP[00000]	/* MoveDirectRelPt */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          18
          RS[ ]	/* ReadStore */
          IF[ ]	/* If */
            SDPVTL[1]	/* SetDualPVectorToLine */
            RCVT[ ]	/* ReadCVT */
            PUSHB[ ]	/* 1 value pushed */
            17
            CALL[ ]	/* CallFunction */
            PUSHB[ ]	/* 1 value pushed */
            13
            SWAP[ ]	/* SwapTopStack */
            WCVTP[ ]	/* WriteCVTInPixels */
            PUSHB[ ]	/* 1 value pushed */
            13
            ROFF[ ]	/* RoundOff */
            MIRP[00100]	/* MoveIndirectRelPt */
          ELSE[ ]	/* Else */
            SPVTCA[1]	/* SetPVectorToAxis */
            ROLL[ ]	/* RollTopThreeStack */
            RCVT[ ]	/* ReadCVT */
            RTG[ ]	/* RoundToGrid */
            ROUND[01]	/* Round */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 1 value pushed */
            13
            SWAP[ ]	/* SwapTopStack */
            WCVTP[ ]	/* WriteCVTInPixels */
            ROLL[ ]	/* RollTopThreeStack */
            ROLL[ ]	/* RollTopThreeStack */
            SDPVTL[1]	/* SetDualPVectorToLine */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 1 value pushed */
            160
            LTEQ[ ]	/* LessThenOrEqual */
            IF[ ]	/* If */
              PUSHB[ ]	/* 1 value pushed */
              17
              CALL[ ]	/* CallFunction */
              PUSHB[ ]	/* 1 value pushed */
              13
              SWAP[ ]	/* SwapTopStack */
              WCVTP[ ]	/* WriteCVTInPixels */
              PUSHB[ ]	/* 1 value pushed */
              13
              ROFF[ ]	/* RoundOff */
              MIRP[00100]	/* MoveIndirectRelPt */
            ELSE[ ]	/* Else */
              POP[ ]	/* PopTopStack */
              PUSHB[ ]	/* 1 value pushed */
              13
              ROFF[ ]	/* RoundOff */
              MIRP[00100]	/* MoveIndirectRelPt */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        RTG[ ]	/* RoundToGrid */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        RCVT[ ]	/* ReadCVT */
        ROUND[00]	/* Round */
        ADD[ ]	/* Add */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        ROUND[10]	/* Round */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        RTG[ ]	/* RoundToGrid */
        MDAP[1]	/* MoveDirectAbsPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        RTG[ ]	/* RoundToGrid */
        PUSHB[ ]	/* 1 value pushed */
        24
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          RCVT[ ]	/* ReadCVT */
          ABS[ ]	/* Absolute */
          ROUND[01]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          64
          MAX[ ]	/* Maximum */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          128
          DIV[ ]	/* Divide */
          ROUND[10]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          MIN[ ]	/* Minimum */
          PUSHB[ ]	/* 1 value pushed */
          25
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          12
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          POP[ ]	/* PopTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MIRP[10110]	/* MoveIndirectRelPt */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        24
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ABS[ ]	/* Absolute */
          ADD[ ]	/* Add */
          ROUND[10]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ROUND[10]	/* Round */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ROUND[10]	/* Round */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          MAX[ ]	/* Maximum */
          NEG[ ]	/* Negate */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          MIN[ ]	/* Minimum */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          ROUND[10]	/* Round */
          WCVTP[ ]	/* WriteCVTInPixels */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          ROUND[10]	/* Round */
          WCVTP[ ]	/* WriteCVTInPixels */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        0
        NEQ[ ]	/* NotEqual */
        PUSHB[ ]	/* 1 value pushed */
        24
        RS[ ]	/* ReadStore */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
          ROUND[00]	/* Round */
          SWAP[ ]	/* SwapTopStack */
          RCVT[ ]	/* ReadCVT */
          ROUND[01]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          64
          MAX[ ]	/* Maximum */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          128
          DIV[ ]	/* Divide */
          ROUND[10]	/* Round */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          MAX[ ]	/* Maximum */
          NEG[ ]	/* Negate */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          MIN[ ]	/* Minimum */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          25
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        RCVT[ ]	/* ReadCVT */
        ABS[ ]	/* Absolute */
        SWAP[ ]	/* SwapTopStack */
        RCVT[ ]	/* ReadCVT */
        ABS[ ]	/* Absolute */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        25
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        24
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          27
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          64
          EQ[ ]	/* Equal */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          0
          EQ[ ]	/* Equal */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            CINDEX[ ]	/* CopyXToTopStack */
            DUP[ ]	/* DuplicateTopStack */
            RCVT[ ]	/* ReadCVT */
            PUSHB[ ]	/* 1 value pushed */
            64
            SUB[ ]	/* Subtract */
            WCVTP[ ]	/* WriteCVTInPixels */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          0
          EQ[ ]	/* Equal */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          64
          EQ[ ]	/* Equal */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            CINDEX[ ]	/* CopyXToTopStack */
            DUP[ ]	/* DuplicateTopStack */
            RCVT[ ]	/* ReadCVT */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
            WCVTP[ ]	/* WriteCVTInPixels */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        7
        CINDEX[ ]	/* CopyXToTopStack */
        SDPVTL[1]	/* SetDualPVectorToLine */
        SFVTCA[1]	/* SetFVectorToAxis */
        MDAP[0]	/* MoveDirectAbsPt */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        7
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        20
        CALL[ ]	/* CallFunction */
        SRP0[ ]	/* SetRefPoint0 */
        POP[ ]	/* PopTopStack */
        MDRP[00100]	/* MoveDirectRelPt */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MDRP[00000]	/* MoveDirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          RTDG[ ]	/* RoundToDoubleGrid */
          MIRP[01101]	/* MoveIndirectRelPt */
          RTG[ ]	/* RoundToGrid */
        ELSE[ ]	/* Else */
          MIRP[01101]	/* MoveIndirectRelPt */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        RTG[ ]	/* RoundToGrid */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          ROLL[ ]	/* RollTopThreeStack */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        SWAP[ ]	/* SwapTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ROUND[00]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ROUND[00]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          ADD[ ]	/* Add */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            2
            CINDEX[ ]	/* CopyXToTopStack */
            RCVT[ ]	/* ReadCVT */
            ROUND[00]	/* Round */
            ADD[ ]	/* Add */
            PUSHB[ ]	/* 1 value pushed */
            3
            CINDEX[ ]	/* CopyXToTopStack */
            SWAP[ ]	/* SwapTopStack */
            WCVTP[ ]	/* WriteCVTInPixels */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          RTDG[ ]	/* RoundToDoubleGrid */
          MDRP[01101]	/* MoveDirectRelPt */
          RTG[ ]	/* RoundToGrid */
        ELSE[ ]	/* Else */
          MDRP[01101]	/* MoveDirectRelPt */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        ROLL[ ]	/* RollTopThreeStack */
        ADD[ ]	/* Add */
        ROLL[ ]	/* RollTopThreeStack */
        SUB[ ]	/* Subtract */
        PUSHW[ ]	/* 1 value pushed */
        -128
        DIV[ ]	/* Divide */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SWAP[ ]	/* SwapTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 2 values pushed */
        12 12
        ROLL[ ]	/* RollTopThreeStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          PUSHW[ ]	/* 1 value pushed */
          -70
          MAX[ ]	/* Maximum */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          70
          MIN[ ]	/* Minimum */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        16
        ADD[ ]	/* Add */
        ROUND[00]	/* Round */
        SVTCA[1]	/* SetFPVectorToAxis */
        MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        GT[ ]	/* GreaterThan */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHB[ ]	/* 1 value pushed */
        19
        LTEQ[ ]	/* LessThenOrEqual */
        OR[ ]	/* LogicalOr */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          GC[0]	/* GetCoordOnPVector */
          DUP[ ]	/* DuplicateTopStack */
          ROUND[00]	/* Round */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          MIAP[1]	/* MoveIndirectAbsPt */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          SRP1[ ]	/* SetRefPoint1 */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          GC[0]	/* GetCoordOnPVector */
          DUP[ ]	/* DuplicateTopStack */
          ROUND[00]	/* Round */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          MIAP[1]	/* MoveIndirectAbsPt */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          SRP1[ ]	/* SetRefPoint1 */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHB[ ]	/* 1 value pushed */
        200
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          7
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          6
          RS[ ]	/* ReadStore */
          SFVFS[ ]	/* SetFVectorFromStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        ROLL[ ]	/* RollTopThreeStack */
        SRP0[ ]	/* SetRefPoint0 */
        MIRP[01100]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        12
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          DUP[ ]	/* DuplicateTopStack */
          GC[0]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          0
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            -16
            SHPIX[ ]	/* ShiftZoneByPixel */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            16
            SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          PUSHW[ ]	/* 1 value pushed */
          4096
          MUL[ ]	/* Multiply */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ABS[ ]	/* Absolute */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ABS[ ]	/* Absolute */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          0
          GTEQ[ ]	/* GreaterThanOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            2
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            64
            SUB[ ]	/* Subtract */
            PUSHB[ ]	/* 1 value pushed */
            3
          EIF[ ]	/* EndIf */
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ROUND[01]	/* Round */
          GTEQ[ ]	/* GreaterThanOrEqual */
          IF[ ]	/* If */
            RCVT[ ]	/* ReadCVT */
            WCVTP[ ]	/* WriteCVTInPixels */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          SUB[ ]	/* Subtract */
          ABS[ ]	/* Absolute */
          PUSHB[ ]	/* 1 value pushed */
          40
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            RCVT[ ]	/* ReadCVT */
            WCVTP[ ]	/* WriteCVTInPixels */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        GPV[ ]	/* GetPVector */
        ABS[ ]	/* Absolute */
        SWAP[ ]	/* SwapTopStack */
        ABS[ ]	/* Absolute */
        MAX[ ]	/* Maximum */
        PUSHW[ ]	/* 1 value pushed */
        16384
        DIV[ ]	/* Divide */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 1 value pushed */
        128
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          GPV[ ]	/* GetPVector */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          ABS[ ]	/* Absolute */
          MAX[ ]	/* Maximum */
          PUSHW[ ]	/* 1 value pushed */
          8192
          DIV[ ]	/* Divide */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 3 values pushed */
          0 64 47
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        2
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 1 value pushed */
        192
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          GPV[ ]	/* GetPVector */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          ABS[ ]	/* Absolute */
          MAX[ ]	/* Maximum */
          PUSHW[ ]	/* 1 value pushed */
          5461
          DIV[ ]	/* Divide */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 3 values pushed */
          0 128 47
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        2
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        GPV[ ]	/* GetPVector */
        ABS[ ]	/* Absolute */
        SWAP[ ]	/* SwapTopStack */
        ABS[ ]	/* Absolute */
        MAX[ ]	/* Maximum */
        PUSHW[ ]	/* 1 value pushed */
        16384
        DIV[ ]	/* Divide */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RTG[ ]	/* RoundToGrid */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          RCVT[ ]	/* ReadCVT */
          ABS[ ]	/* Absolute */
          ROUND[01]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          64
          MAX[ ]	/* Maximum */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          128
          DIV[ ]	/* Divide */
          ROUND[10]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          MIN[ ]	/* Minimum */
          PUSHB[ ]	/* 1 value pushed */
          12
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          POP[ ]	/* PopTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MIRP[10110]	/* MoveIndirectRelPt */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SRP1[ ]	/* SetRefPoint1 */
          SWAP[ ]	/* SwapTopStack */
          SRP2[ ]	/* SetRefPoint2 */
          DUP[ ]	/* DuplicateTopStack */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        MD[0]	/* MeasureDistance */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        192
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHW[ ]	/* 1 value pushed */
          -8
          SHPIX[ ]	/* ShiftZoneByPixel */
          PUSHB[ ]	/* 1 value pushed */
          8
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        19
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          SPVTCA[1]	/* SetPVectorToAxis */
        ELSE[ ]	/* Else */
          SPVTCA[0]	/* SetPVectorToAxis */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        19
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          SPVTCA[0]	/* SetPVectorToAxis */
        ELSE[ ]	/* Else */
          SPVTCA[1]	/* SetPVectorToAxis */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        10
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        PUSHB[ ]	/* 1 value pushed */
        23
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHW[ ]	/* 1 value pushed */
        -16
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 1 value pushed */
        40
        CALL[ ]	/* CallFunction */
        ROLL[ ]	/* RollTopThreeStack */
        SRP0[ ]	/* SetRefPoint0 */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDRP[10000]	/* MoveDirectRelPt */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        16
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        5
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          MDRP[00000]	/* MoveDirectRelPt */
        ELSE[ ]	/* Else */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SRP1[ ]	/* SetRefPoint1 */
        PUSHB[ ]	/* 1 value pushed */
        0
        SRP2[ ]	/* SetRefPoint2 */
        SVTCA[1]	/* SetFPVectorToAxis */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        72
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        MDRP[10000]	/* MoveDirectRelPt */
        SWAP[ ]	/* SwapTopStack */
        MDRP[01001]	/* MoveDirectRelPt */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZP0[ ]	/* SetZonePointer0 */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP1[ ]	/* SetZonePointer1 */
        SRP0[ ]	/* SetRefPoint0 */
        PUSHB[ ]	/* 1 value pushed */
        1
        ALIGNRP[ ]	/* AlignRelativePt */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZPS[ ]	/* SetZonePointerS */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP0[ ]	/* SetZonePointer0 */
        PUSHB[ ]	/* 1 value pushed */
        1
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        MD[0]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        3
        SLOOP[ ]	/* SetLoopVariable */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZP0[ ]	/* SetZonePointer0 */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        SWAP[ ]	/* SwapTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RTG[ ]	/* RoundToGrid */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          ABS[ ]	/* Absolute */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          ABS[ ]	/* Absolute */
          ROUND[00]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          64
          MAX[ ]	/* Maximum */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          128
          DIV[ ]	/* Divide */
          ROUND[10]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          MIN[ ]	/* Minimum */
          PUSHB[ ]	/* 1 value pushed */
          12
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          12
          MIRP[10110]	/* MoveIndirectRelPt */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
        EIF[ ]	/* EndIf */
        MDRP[01100]	/* MoveDirectRelPt */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        RTG[ ]	/* RoundToGrid */
        PUSHB[ ]	/* 1 value pushed */
        24
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          GC[0]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          RCVT[ ]	/* ReadCVT */
          ABS[ ]	/* Absolute */
          SUB[ ]	/* Subtract */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          MD[1]	/* MeasureDistance */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        14
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        SWAP[ ]	/* SwapTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        PUSHB[ ]	/* 1 value pushed */
        14
        MIRP[01100]	/* MoveIndirectRelPt */
        SWAP[ ]	/* SwapTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        PUSHB[ ]	/* 1 value pushed */
        14
        MIRP[01100]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        27
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          ADD[ ]	/* Add */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          0
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 1 value pushed */
            1
            ADD[ ]	/* Add */
            DUP[ ]	/* DuplicateTopStack */
            RCVT[ ]	/* ReadCVT */
            DUP[ ]	/* DuplicateTopStack */
            ROUND[00]	/* Round */
            PUSHB[ ]	/* 1 value pushed */
            0
            NEQ[ ]	/* NotEqual */
            IF[ ]	/* If */
              PUSHB[ ]	/* 1 value pushed */
              32
              ADD[ ]	/* Add */
              WCVTP[ ]	/* WriteCVTInPixels */
              POP[ ]	/* PopTopStack */
            ELSE[ ]	/* Else */
              POP[ ]	/* PopTopStack */
              POP[ ]	/* PopTopStack */
              POP[ ]	/* PopTopStack */
            EIF[ ]	/* EndIf */
          ELSE[ ]	/* Else */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 1 value pushed */
            1
            ADD[ ]	/* Add */
            DUP[ ]	/* DuplicateTopStack */
            RCVT[ ]	/* ReadCVT */
            DUP[ ]	/* DuplicateTopStack */
            ROUND[00]	/* Round */
            PUSHB[ ]	/* 1 value pushed */
            0
            NEQ[ ]	/* NotEqual */
            IF[ ]	/* If */
              PUSHW[ ]	/* 1 value pushed */
              -32
              ADD[ ]	/* Add */
              WCVTP[ ]	/* WriteCVTInPixels */
              PUSHB[ ]	/* 1 value pushed */
              28
              MPPEM[ ]	/* MeasurePixelPerEm */
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                DUP[ ]	/* DuplicateTopStack */
                RCVT[ ]	/* ReadCVT */
                PUSHB[ ]	/* 1 value pushed */
                32
                ADD[ ]	/* Add */
                WCVTP[ ]	/* WriteCVTInPixels */
              ELSE[ ]	/* Else */
                POP[ ]	/* PopTopStack */
              EIF[ ]	/* EndIf */
            ELSE[ ]	/* Else */
              POP[ ]	/* PopTopStack */
              POP[ ]	/* PopTopStack */
              POP[ ]	/* PopTopStack */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        ROUND[00]	/* Round */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        MIAP[1]	/* MoveIndirectAbsPt */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        ROLL[ ]	/* RollTopThreeStack */
        ADD[ ]	/* Add */
        ROLL[ ]	/* RollTopThreeStack */
        SUB[ ]	/* Subtract */
        PUSHW[ ]	/* 1 value pushed */
        -128
        DIV[ ]	/* Divide */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SWAP[ ]	/* SwapTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 2 values pushed */
        12 12
        ROLL[ ]	/* RollTopThreeStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          PUSHW[ ]	/* 1 value pushed */
          -128
          MAX[ ]	/* Maximum */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          129
          MIN[ ]	/* Minimum */
        EIF[ ]	/* EndIf */
        ROUND[00]	/* Round */
        MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        64
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        SHC[1]	/* ShiftContourByLastPt */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GTEQ[ ]	/* GreaterThanOrEqual */
          SWAP[ ]	/* SwapTopStack */
          MPPEM[ ]	/* MeasurePixelPerEm */
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
            SHPIX[ ]	/* ShiftZoneByPixel */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MD[0]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        14
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GTEQ[ ]	/* GreaterThanOrEqual */
          SWAP[ ]	/* SwapTopStack */
          MPPEM[ ]	/* MeasurePixelPerEm */
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
            DUP[ ]	/* DuplicateTopStack */
            RCVT[ ]	/* ReadCVT */
            ROLL[ ]	/* RollTopThreeStack */
            ADD[ ]	/* Add */
            WCVTP[ ]	/* WriteCVTInPixels */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        SWAP[ ]	/* SwapTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        SWAP[ ]	/* SwapTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          70
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          71
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          72
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          73
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          RDTG[ ]	/* RoundDownToGrid */
        ELSE[ ]	/* Else */
          ROFF[ ]	/* RoundOff */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 1
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        35 1
        GETINFO[ ]	/* GetInfo */
        LTEQ[ ]	/* LessThenOrEqual */
        PUSHB[ ]	/* 2 values pushed */
        64 1
        GETINFO[ ]	/* GetInfo */
        GTEQ[ ]	/* GreaterThanOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          2 0
          WS[ ]	/* WriteStore */
          PUSHW[ ]	/* 2 values pushed */
          4096 32
          GETINFO[ ]	/* GetInfo */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
            PUSHB[ ]	/* 3 values pushed */
            2 1 2
            RS[ ]	/* ReadStore */
            ADD[ ]	/* Add */
            WS[ ]	/* WriteStore */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          36 1
          GETINFO[ ]	/* GetInfo */
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHW[ ]	/* 2 values pushed */
            8192 64
            GETINFO[ ]	/* GetInfo */
            EQ[ ]	/* Equal */
            IF[ ]	/* If */
              PUSHB[ ]	/* 3 values pushed */
              2 2 2
              RS[ ]	/* ReadStore */
              ADD[ ]	/* Add */
              WS[ ]	/* WriteStore */
              PUSHB[ ]	/* 2 values pushed */
              36 1
              GETINFO[ ]	/* GetInfo */
              EQ[ ]	/* Equal */
              IF[ ]	/* If */
                PUSHB[ ]	/* 3 values pushed */
                2 32 2
                RS[ ]	/* ReadStore */
                ADD[ ]	/* Add */
                WS[ ]	/* WriteStore */
                SVTCA[0]	/* SetFPVectorToAxis */
                MPPEM[ ]	/* MeasurePixelPerEm */
                SVTCA[1]	/* SetFPVectorToAxis */
                MPPEM[ ]	/* MeasurePixelPerEm */
                GT[ ]	/* GreaterThan */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 8 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
              ELSE[ ]	/* Else */
                PUSHW[ ]	/* 2 values pushed */
                16384 128
                GETINFO[ ]	/* GetInfo */
                EQ[ ]	/* Equal */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 4 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
                PUSHW[ ]	/* 2 values pushed */
                16384 128
                MUL[ ]	/* Multiply */
                PUSHW[ ]	/* 1 value pushed */
                256
                GETINFO[ ]	/* GetInfo */
                EQ[ ]	/* Equal */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 8 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
                PUSHW[ ]	/* 2 values pushed */
                16384 256
                MUL[ ]	/* Multiply */
                PUSHW[ ]	/* 1 value pushed */
                512
                GETINFO[ ]	/* GetInfo */
                EQ[ ]	/* Equal */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 16 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
                PUSHB[ ]	/* 2 values pushed */
                38 1
                GETINFO[ ]	/* GetInfo */
                LTEQ[ ]	/* LessThenOrEqual */
                IF[ ]	/* If */
                  PUSHW[ ]	/* 2 values pushed */
                  16384 512
                  MUL[ ]	/* Multiply */
                  PUSHW[ ]	/* 1 value pushed */
                  1024
                  GETINFO[ ]	/* GetInfo */
                  EQ[ ]	/* Equal */
                  IF[ ]	/* If */
                    PUSHB[ ]	/* 3 values pushed */
                    2 64 2
                    RS[ ]	/* ReadStore */
                    ADD[ ]	/* Add */
                    WS[ ]	/* WriteStore */
                  EIF[ ]	/* EndIf */
                  PUSHW[ ]	/* 2 values pushed */
                  16384 1024
                  MUL[ ]	/* Multiply */
                  PUSHW[ ]	/* 1 value pushed */
                  2048
                  GETINFO[ ]	/* GetInfo */
                  EQ[ ]	/* Equal */
                  IF[ ]	/* If */
                    PUSHB[ ]	/* 3 values pushed */
                    2 128 2
                    RS[ ]	/* ReadStore */
                    ADD[ ]	/* Add */
                    WS[ ]	/* WriteStore */
                  EIF[ ]	/* EndIf */
                EIF[ ]	/* EndIf */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          NPUSHB[ ]	/* 10 values pushed */
          5 64 8 64 9 64 12 2 13 2
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          1 2
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
            PUSHB[ ]	/* 3 values pushed */
            5 64 8
            PUSHW[ ]	/* 3 values pushed */
            256 9 256
            PUSHB[ ]	/* 4 values pushed */
            12 1 13 1
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            128 2
            RS[ ]	/* ReadStore */
            GT[ ]	/* GreaterThan */
            IF[ ]	/* If */
              PUSHB[ ]	/* 3 values pushed */
              5 64 8
              PUSHW[ ]	/* 1 value pushed */
              384
              PUSHB[ ]	/* 2 values pushed */
              9 64
            ELSE[ ]	/* Else */
              PUSHB[ ]	/* 3 values pushed */
              5 64 8
              PUSHW[ ]	/* 3 values pushed */
              384 9 320
            EIF[ ]	/* EndIf */
            PUSHW[ ]	/* 2 values pushed */
            16384 128
            GETINFO[ ]	/* GetInfo */
            NEQ[ ]	/* NotEqual */
            PUSHW[ ]	/* 2 values pushed */
            16384 512
            MUL[ ]	/* Multiply */
            PUSHW[ ]	/* 1 value pushed */
            1024
            GETINFO[ ]	/* GetInfo */
            NEQ[ ]	/* NotEqual */
            AND[ ]	/* LogicalAnd */
            IF[ ]	/* If */
              PUSHB[ ]	/* 4 values pushed */
              12 0 13 1
            ELSE[ ]	/* Else */
              PUSHB[ ]	/* 4 values pushed */
              12 0 13 1
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        WS[ ]	/* WriteStore */
        WS[ ]	/* WriteStore */
        WS[ ]	/* WriteStore */
        WS[ ]	/* WriteStore */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        128
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        LT[ ]	/* LessThan */
        PUSHB[ ]	/* 1 value pushed */
        1
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        OR[ ]	/* LogicalOr */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01001]	/* MoveDirectRelPt */
        ELSE[ ]	/* Else */
          ROLL[ ]	/* RollTopThreeStack */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        89
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        ROLL[ ]	/* RollTopThreeStack */
        SRP0[ ]	/* SetRefPoint0 */
        MIRP[00101]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      NPUSHB[ ]	/* 81 values pushed */
      223 224 22 23 28 212 213 22 23 28 123 124 22 27 123 124 25 209 210 22 23 28 118 119 22
      23 28 109 112 22 23 28 108 111 22 23 28 107 110 22 27 107 110 127 114 26 116 117 20 21
      28 103 106 20 21 28 102 105 20 21 28 101 104 20 27 101 104 133 113 26 25 115 22 122 67
      25 33 121 67 25 33
      NPUSHW[ ]	/* 54 values pushed */
      326 316 3 43 325 316 3 43 324 316 3 43 323 316 3 43 322 316 3 43 321 316 3 43 320
      316 3 43 319 316 3 43 318 316 3 43 317 316 3 43 315 316 3 43 314 316 3 43 313 316
      2 43 307 308
      PUSHB[ ]	/* 3 values pushed */
      3 43 192
      PUSHW[ ]	/* 1 value pushed */
      316
      NPUSHB[ ]	/* 17 values pushed */
      1 153 147 2 43 145 147 2 43 147 149 2 43 150 149 2 43
      NPUSHW[ ]	/* 46 values pushed */
      359 358 3 43 358 357 3 43 357 356 3 43 356 355 3 43 355 354 3 43 354 353 3 43 353
      352 3 43 351 352 3 43 350 352 3 43 349 352 3 43 348 352 3 43 347 352
      NPUSHB[ ]	/* 168 values pushed */
      3 43 138 137 2 43 137 133 2 43 129 127 2 43 125 127 2 43 127 133 2 43 136 133 1
      43 135 133 1 43 132 133 2 43 131 133 2 43 27 55 21 24 54 21 21 53 21 18 52 21
      15 51 21 12 50 21 9 49 21 6 48 21 3 47 21 0 46 21 38 39 14 40 39 15 42
      43 14 44 43 15 34 35 14 36 35 15 30 31 14 32 31 15 15 16 17 12 9 10 11 12
      6 7 8 12 3 4 5 12 0 1 2 12 27 1 29 13 24 7 26 13 21 16 23 13 18
      4 20 13 47 27 1 44 60 42 60 40 60 38 60 36 60 34 60 32 60 30 60 27 60 24
      60 21 60 18 60 15 60 9 60 6 60 3 60 0 60 80 51 84
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      18
      MPPEM[ ]	/* MeasurePixelPerEm */
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      19
      SVTCA[1]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      51
      CALL[ ]	/* CallFunction */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      800
      GT[ ]	/* GreaterThan */
      PUSHB[ ]	/* 1 value pushed */
      50
      CALL[ ]	/* CallFunction */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      9
      LT[ ]	/* LessThan */
      OR[ ]	/* LogicalOr */
      IF[ ]	/* If */
        PUSHB[ ]	/* 2 values pushed */
        1 1
        INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      51
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      2
      GETINFO[ ]	/* GetInfo */
      PUSHW[ ]	/* 1 value pushed */
      256
      EQ[ ]	/* Equal */
      PUSHB[ ]	/* 1 value pushed */
      4
      GETINFO[ ]	/* GetInfo */
      PUSHW[ ]	/* 1 value pushed */
      512
      EQ[ ]	/* Equal */
      PUSHB[ ]	/* 1 value pushed */
      18
      RS[ ]	/* ReadStore */
      AND[ ]	/* LogicalAnd */
      OR[ ]	/* LogicalOr */
      IF[ ]	/* If */
        PUSHW[ ]	/* 1 value pushed */
        281
        PUSHB[ ]	/* 2 values pushed */
        1 1
        INSTCTRL[ ]	/* SetInstrExecControl */
        SCANCTRL[ ]	/* ScanConversionControl */
      ELSE[ ]	/* Else */
        PUSHW[ ]	/* 2 values pushed */
        1 256
        PUSHB[ ]	/* 1 value pushed */
        75
        ADD[ ]	/* Add */
        SCANCTRL[ ]	/* ScanConversionControl */
        SCANTYPE[ ]	/* ScanType */
      EIF[ ]	/* EndIf */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SCVTCI[ ]	/* SetCVTCutIn */
      PUSHB[ ]	/* 1 value pushed */
      100
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
        PUSHB[ ]	/* 1 value pushed */
        128
        SCVTCI[ ]	/* SetCVTCutIn */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      50
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
        PUSHB[ ]	/* 1 value pushed */
        144
        SCVTCI[ ]	/* SetCVTCutIn */
      EIF[ ]	/* EndIf */
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      50
      LTEQ[ ]	/* LessThenOrEqual */
      PUSHB[ ]	/* 1 value pushed */
      27
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      40 38
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      42
      RCVT[ ]	/* ReadCVT */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      44
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      24
      PUSHB[ ]	/* 1 value pushed */
      63
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      9 50
      CALL[ ]	/* CallFunction */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      80
      GT[ ]	/* GreaterThan */
      WS[ ]	/* WriteStore */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      8
      GT[ ]	/* GreaterThan */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      8
      LT[ ]	/* LessThan */
      OR[ ]	/* LogicalOr */
      PUSHB[ ]	/* 1 value pushed */
      26
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      200
      GT[ ]	/* GreaterThan */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      54
      LT[ ]	/* LessThan */
      OR[ ]	/* LogicalOr */
      PUSHB[ ]	/* 1 value pushed */
      12
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="1636"/>
    <cv index="1" value="18"/>
    <cv index="2" value="0"/>
    <cv index="3" value="1548"/>
    <cv index="4" value="25"/>
    <cv index="5" value="0"/>
    <cv index="6" value="1548"/>
    <cv index="7" value="25"/>
    <cv index="8" value="0"/>
    <cv index="9" value="0"/>
    <cv index="10" value="0"/>
    <cv index="11" value="0"/>
    <cv index="12" value="0"/>
    <cv index="13" value="0"/>
    <cv index="14" value="0"/>
    <cv index="15" value="1106"/>
    <cv index="16" value="27"/>
    <cv index="17" value="0"/>
    <cv index="18" value="0"/>
    <cv index="19" value="-25"/>
    <cv index="20" value="0"/>
    <cv index="21" value="0"/>
    <cv index="22" value="-27"/>
    <cv index="23" value="0"/>
    <cv index="24" value="0"/>
    <cv index="25" value="-25"/>
    <cv index="26" value="0"/>
    <cv index="27" value="-508"/>
    <cv index="28" value="-12"/>
    <cv index="29" value="0"/>
    <cv index="30" value="0"/>
    <cv index="31" value="0"/>
    <cv index="32" value="0"/>
    <cv index="33" value="0"/>
    <cv index="34" value="0"/>
    <cv index="35" value="690"/>
    <cv index="36" value="750"/>
    <cv index="37" value="130"/>
    <cv index="38" value="1548"/>
    <cv index="39" value="25"/>
    <cv index="40" value="631"/>
    <cv index="41" value="-25"/>
    <cv index="42" value="917"/>
    <cv index="43" value="25"/>
    <cv index="44" value="0"/>
    <cv index="45" value="-25"/>
    <cv index="46" value="0"/>
    <cv index="47" value="0"/>
    <cv index="48" value="0"/>
    <cv index="49" value="0"/>
    <cv index="50" value="0"/>
    <cv index="51" value="0"/>
    <cv index="52" value="0"/>
    <cv index="53" value="1795"/>
    <cv index="54" value="0"/>
    <cv index="55" value="0"/>
    <cv index="56" value="0"/>
    <cv index="57" value="0"/>
    <cv index="58" value="0"/>
    <cv index="59" value="0"/>
    <cv index="60" value="1714"/>
    <cv index="61" value="-141"/>
    <cv index="62" value="0"/>
    <cv index="63" value="0"/>
    <cv index="64" value="0"/>
    <cv index="65" value="2048"/>
    <cv index="66" value="0"/>
    <cv index="67" value="2048"/>
    <cv index="68" value="0"/>
    <cv index="69" value="1024"/>
    <cv index="70" value="0"/>
    <cv index="71" value="0"/>
    <cv index="72" value="160"/>
    <cv index="73" value="170"/>
    <cv index="74" value="0"/>
    <cv index="75" value="0"/>
    <cv index="76" value="135"/>
    <cv index="77" value="0"/>
    <cv index="78" value="0"/>
    <cv index="79" value="0"/>
    <cv index="80" value="120"/>
    <cv index="81" value="0"/>
    <cv index="82" value="0"/>
    <cv index="83" value="150"/>
    <cv index="84" value="106"/>
    <cv index="85" value="0"/>
    <cv index="86" value="0"/>
    <cv index="87" value="0"/>
    <cv index="88" value="0"/>
    <cv index="89" value="0"/>
    <cv index="90" value="0"/>
    <cv index="91" value="0"/>
    <cv index="92" value="0"/>
    <cv index="93" value="0"/>
    <cv index="94" value="0"/>
    <cv index="95" value="0"/>
    <cv index="96" value="0"/>
    <cv index="97" value="0"/>
    <cv index="98" value="245"/>
    <cv index="99" value="245"/>
    <cv index="100" value="0"/>
    <cv index="101" value="0"/>
    <cv index="102" value="0"/>
    <cv index="103" value="0"/>
    <cv index="104" value="0"/>
    <cv index="105" value="0"/>
    <cv index="106" value="0"/>
    <cv index="107" value="0"/>
    <cv index="108" value="0"/>
    <cv index="109" value="0"/>
    <cv index="110" value="0"/>
    <cv index="111" value="0"/>
    <cv index="112" value="0"/>
    <cv index="113" value="0"/>
    <cv index="114" value="0"/>
    <cv index="115" value="0"/>
    <cv index="116" value="0"/>
    <cv index="117" value="0"/>
    <cv index="118" value="0"/>
    <cv index="119" value="0"/>
    <cv index="120" value="0"/>
    <cv index="121" value="0"/>
    <cv index="122" value="0"/>
    <cv index="123" value="0"/>
    <cv index="124" value="0"/>
    <cv index="125" value="210"/>
    <cv index="126" value="0"/>
    <cv index="127" value="200"/>
    <cv index="128" value="0"/>
    <cv index="129" value="0"/>
    <cv index="130" value="0"/>
    <cv index="131" value="200"/>
    <cv index="132" value="0"/>
    <cv index="133" value="195"/>
    <cv index="134" value="0"/>
    <cv index="135" value="0"/>
    <cv index="136" value="0"/>
    <cv index="137" value="200"/>
    <cv index="138" value="0"/>
    <cv index="139" value="195"/>
    <cv index="140" value="153"/>
    <cv index="141" value="0"/>
    <cv index="142" value="0"/>
    <cv index="143" value="0"/>
    <cv index="144" value="0"/>
    <cv index="145" value="178"/>
    <cv index="146" value="0"/>
    <cv index="147" value="0"/>
    <cv index="148" value="0"/>
    <cv index="149" value="162"/>
    <cv index="150" value="0"/>
    <cv index="151" value="0"/>
    <cv index="152" value="0"/>
    <cv index="153" value="163"/>
    <cv index="154" value="130"/>
    <cv index="155" value="0"/>
    <cv index="156" value="0"/>
    <cv index="157" value="0"/>
    <cv index="158" value="0"/>
    <cv index="159" value="0"/>
    <cv index="160" value="0"/>
    <cv index="161" value="0"/>
    <cv index="162" value="0"/>
    <cv index="163" value="0"/>
    <cv index="164" value="0"/>
    <cv index="165" value="0"/>
    <cv index="166" value="170"/>
    <cv index="167" value="0"/>
    <cv index="168" value="940"/>
    <cv index="169" value="80"/>
    <cv index="170" value="0"/>
    <cv index="171" value="0"/>
    <cv index="172" value="0"/>
    <cv index="173" value="0"/>
    <cv index="174" value="0"/>
    <cv index="175" value="255"/>
    <cv index="176" value="255"/>
    <cv index="177" value="189"/>
    <cv index="178" value="530"/>
    <cv index="179" value="480"/>
    <cv index="180" value="0"/>
    <cv index="181" value="0"/>
    <cv index="182" value="0"/>
    <cv index="183" value="0"/>
    <cv index="184" value="0"/>
    <cv index="185" value="0"/>
    <cv index="186" value="0"/>
    <cv index="187" value="0"/>
    <cv index="188" value="0"/>
    <cv index="189" value="152"/>
    <cv index="190" value="152"/>
    <cv index="191" value="0"/>
    <cv index="192" value="225"/>
    <cv index="193" value="225"/>
    <cv index="194" value="149"/>
    <cv index="195" value="92"/>
    <cv index="196" value="94"/>
    <cv index="197" value="94"/>
    <cv index="198" value="100"/>
    <cv index="199" value="100"/>
    <cv index="200" value="167"/>
    <cv index="201" value="170"/>
    <cv index="202" value="160"/>
    <cv index="203" value="124"/>
    <cv index="204" value="148"/>
    <cv index="205" value="160"/>
    <cv index="206" value="0"/>
    <cv index="207" value="0"/>
    <cv index="208" value="0"/>
    <cv index="209" value="0"/>
    <cv index="210" value="0"/>
    <cv index="211" value="235"/>
    <cv index="212" value="0"/>
    <cv index="213" value="0"/>
    <cv index="214" value="235"/>
    <cv index="215" value="565"/>
    <cv index="216" value="128"/>
    <cv index="217" value="0"/>
    <cv index="218" value="104"/>
    <cv index="219" value="130"/>
    <cv index="220" value="0"/>
    <cv index="221" value="0"/>
    <cv index="222" value="152"/>
    <cv index="223" value="0"/>
    <cv index="224" value="0"/>
    <cv index="225" value="110"/>
    <cv index="226" value="114"/>
    <cv index="227" value="142"/>
    <cv index="228" value="150"/>
    <cv index="229" value="0"/>
    <cv index="230" value="130"/>
    <cv index="231" value="0"/>
    <cv index="232" value="0"/>
    <cv index="233" value="0"/>
    <cv index="234" value="140"/>
    <cv index="235" value="120"/>
    <cv index="236" value="0"/>
    <cv index="237" value="0"/>
    <cv index="238" value="0"/>
    <cv index="239" value="128"/>
    <cv index="240" value="142"/>
    <cv index="241" value="950"/>
    <cv index="242" value="118"/>
    <cv index="243" value="0"/>
    <cv index="244" value="0"/>
    <cv index="245" value="0"/>
    <cv index="246" value="0"/>
    <cv index="247" value="0"/>
    <cv index="248" value="0"/>
    <cv index="249" value="0"/>
    <cv index="250" value="0"/>
    <cv index="251" value="0"/>
    <cv index="252" value="0"/>
    <cv index="253" value="0"/>
    <cv index="254" value="0"/>
    <cv index="255" value="0"/>
    <cv index="256" value="0"/>
    <cv index="257" value="0"/>
    <cv index="258" value="0"/>
    <cv index="259" value="0"/>
    <cv index="260" value="0"/>
    <cv index="261" value="0"/>
    <cv index="262" value="0"/>
    <cv index="263" value="0"/>
    <cv index="264" value="0"/>
    <cv index="265" value="0"/>
    <cv index="266" value="0"/>
    <cv index="267" value="0"/>
    <cv index="268" value="0"/>
    <cv index="269" value="0"/>
    <cv index="270" value="0"/>
    <cv index="271" value="0"/>
    <cv index="272" value="0"/>
    <cv index="273" value="0"/>
    <cv index="274" value="0"/>
    <cv index="275" value="0"/>
    <cv index="276" value="0"/>
    <cv index="277" value="0"/>
    <cv index="278" value="0"/>
    <cv index="279" value="0"/>
    <cv index="280" value="0"/>
    <cv index="281" value="0"/>
    <cv index="282" value="0"/>
    <cv index="283" value="0"/>
    <cv index="284" value="0"/>
    <cv index="285" value="0"/>
    <cv index="286" value="0"/>
    <cv index="287" value="0"/>
    <cv index="288" value="0"/>
    <cv index="289" value="0"/>
    <cv index="290" value="0"/>
    <cv index="291" value="0"/>
    <cv index="292" value="0"/>
    <cv index="293" value="0"/>
    <cv index="294" value="0"/>
    <cv index="295" value="0"/>
    <cv index="296" value="0"/>
    <cv index="297" value="0"/>
    <cv index="298" value="0"/>
    <cv index="299" value="0"/>
    <cv index="300" value="70"/>
    <cv index="301" value="75"/>
    <cv index="302" value="80"/>
    <cv index="303" value="85"/>
    <cv index="304" value="90"/>
    <cv index="305" value="95"/>
    <cv index="306" value="100"/>
    <cv index="307" value="105"/>
    <cv index="308" value="110"/>
    <cv index="309" value="115"/>
    <cv index="310" value="120"/>
    <cv index="311" value="125"/>
    <cv index="312" value="130"/>
    <cv index="313" value="135"/>
    <cv index="314" value="140"/>
    <cv index="315" value="145"/>
    <cv index="316" value="150"/>
    <cv index="317" value="155"/>
    <cv index="318" value="160"/>
    <cv index="319" value="165"/>
    <cv index="320" value="170"/>
    <cv index="321" value="175"/>
    <cv index="322" value="180"/>
    <cv index="323" value="185"/>
    <cv index="324" value="190"/>
    <cv index="325" value="195"/>
    <cv index="326" value="200"/>
    <cv index="327" value="225"/>
    <cv index="328" value="230"/>
    <cv index="329" value="235"/>
    <cv index="330" value="240"/>
    <cv index="331" value="245"/>
    <cv index="332" value="250"/>
    <cv index="333" value="255"/>
    <cv index="334" value="260"/>
    <cv index="335" value="265"/>
    <cv index="336" value="70"/>
    <cv index="337" value="75"/>
    <cv index="338" value="80"/>
    <cv index="339" value="85"/>
    <cv index="340" value="90"/>
    <cv index="341" value="95"/>
    <cv index="342" value="100"/>
    <cv index="343" value="105"/>
    <cv index="344" value="110"/>
    <cv index="345" value="115"/>
    <cv index="346" value="120"/>
    <cv index="347" value="125"/>
    <cv index="348" value="130"/>
    <cv index="349" value="135"/>
    <cv index="350" value="140"/>
    <cv index="351" value="145"/>
    <cv index="352" value="150"/>
    <cv index="353" value="155"/>
    <cv index="354" value="160"/>
    <cv index="355" value="165"/>
    <cv index="356" value="170"/>
    <cv index="357" value="175"/>
    <cv index="358" value="180"/>
    <cv index="359" value="185"/>
    <cv index="360" value="190"/>
    <cv index="361" value="195"/>
    <cv index="362" value="200"/>
    <cv index="363" value="225"/>
    <cv index="364" value="230"/>
    <cv index="365" value="235"/>
    <cv index="366" value="240"/>
    <cv index="367" value="245"/>
    <cv index="368" value="250"/>
    <cv index="369" value="255"/>
    <cv index="370" value="260"/>
    <cv index="371" value="265"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef"/><!-- contains no outline data -->

    <TTGlyph name="uniEC1F" xMin="10" yMin="-283" xMax="2017" yMax="1732">
      <contour>
        <pt x="645" y="205" on="1"/>
        <pt x="1065" y="420" on="0"/>
        <pt x="1315" y="723" on="1"/>
        <pt x="1175" y="712" on="0"/>
        <pt x="980" y="697" on="1"/>
        <pt x="918" y="696" on="0"/>
        <pt x="857" y="646" on="1"/>
        <pt x="779" y="819" on="1"/>
        <pt x="956" y="965" on="0"/>
        <pt x="1162" y="1265" on="1"/>
        <pt x="797" y="1284" on="1"/>
        <pt x="820" y="1423" on="1"/>
        <pt x="1973" y="1416" on="1"/>
        <pt x="2009" y="1288" on="1"/>
        <pt x="1355" y="1284" on="1"/>
        <pt x="1195" y="1047" on="0"/>
        <pt x="1020" y="833" on="1"/>
        <pt x="1220" y="858" on="0"/>
        <pt x="1457" y="886" on="1"/>
        <pt x="1498" y="972" on="0"/>
        <pt x="1601" y="1099" on="1"/>
        <pt x="1717" y="1045" on="1"/>
        <pt x="1360" y="406" on="0"/>
        <pt x="730" y="108" on="1"/>
        <pt x="710" y="150" on="0"/>
      </contour>
      <contour>
        <pt x="10" y="629" on="1"/>
        <pt x="176" y="654" on="0"/>
        <pt x="332" y="696" on="1"/>
        <pt x="325" y="1054" on="1"/>
        <pt x="593" y="1420" on="1"/>
        <pt x="64" y="1390" on="1"/>
        <pt x="67" y="1558" on="1"/>
        <pt x="776" y="1557" on="1"/>
        <pt x="758" y="1377" on="1"/>
        <pt x="499" y="1005" on="1"/>
        <pt x="502" y="768" on="1"/>
        <pt x="607" y="822" on="0"/>
        <pt x="719" y="834" on="1"/>
        <pt x="741" y="749" on="0"/>
        <pt x="746" y="672" on="1"/>
        <pt x="608" y="660" on="0"/>
        <pt x="483" y="590" on="1"/>
        <pt x="493" y="-20" on="1"/>
        <pt x="505" y="-232" on="0"/>
        <pt x="282" y="-249" on="1"/>
        <pt x="167" y="-214" on="0"/>
        <pt x="48" y="-218" on="1"/>
        <pt x="33" y="-163" on="0"/>
        <pt x="45" y="-59" on="1"/>
        <pt x="145" y="-68" on="0"/>
        <pt x="225" y="-90" on="1"/>
        <pt x="329" y="-96" on="0"/>
        <pt x="341" y="24" on="1"/>
        <pt x="334" y="541" on="1"/>
        <pt x="171" y="490" on="0"/>
        <pt x="62" y="436" on="1"/>
      </contour>
      <contour>
        <pt x="754" y="-132" on="1"/>
        <pt x="1453" y="118" on="0"/>
        <pt x="1788" y="785" on="1"/>
        <pt x="1955" y="705" on="1"/>
        <pt x="1804" y="442" on="0"/>
        <pt x="1595" y="246" on="1"/>
        <pt x="1797" y="69" on="0"/>
        <pt x="2017" y="-92" on="1"/>
        <pt x="1875" y="-216" on="1"/>
        <pt x="1642" y="6" on="0"/>
        <pt x="1501" y="139" on="1"/>
        <pt x="1201" y="-126" on="0"/>
        <pt x="875" y="-283" on="1"/>
        <pt x="808" y="-219" on="0"/>
      </contour>
      <contour>
        <pt x="1242" y="1646" on="1"/>
        <pt x="1384" y="1732" on="1"/>
        <pt x="1466" y="1607" on="0"/>
        <pt x="1495" y="1508" on="1"/>
        <pt x="1389" y="1405" on="1"/>
        <pt x="1300" y="1529" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 25 values pushed */
          39 61 66 66 59 68 18 2 20 0 39 7 42 10 30 48 64 63 63 68 56 56 59 42 16
          PUSHW[ ]	/* 1 value pushed */
          -16
          NPUSHB[ ]	/* 11 values pushed */
          16 6 6 7 7 42 30 48 25 13 20
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 4 values pushed */
          21 74 16 74
          PUSHW[ ]	/* 1 value pushed */
          349
          PUSHB[ ]	/* 3 values pushed */
          73 73 71
          PUSHW[ ]	/* 4 values pushed */
          349 70 9 359
          NPUSHB[ ]	/* 12 values pushed */
          14 16 14 10 29 33 70 52 13 58 16 58
          PUSHW[ ]	/* 1 value pushed */
          349
          NPUSHB[ ]	/* 16 values pushed */
          33 14 21 3 59 59 77 23 0 0 55 25 25 35 27 42
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 8 values pushed */
          64 52 66 61 61 59 68 56
          PUSHW[ ]	/* 4 values pushed */
          -16 68 56 313
          PUSHB[ ]	/* 8 values pushed */
          89 68 68 64 46 44 50 44
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 10 values pushed */
          89 48 50 53 41 41 39 55 37 39
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 8 values pushed */
          89 35 27 27 25 37 6 7
          PUSHW[ ]	/* 1 value pushed */
          318
          NPUSHB[ ]	/* 14 values pushed */
          89 31 6 1 0 6 1 15 3 6 6 2 18 2
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 19 values pushed */
          89 16 18 34 28 64 59 58 58 10 63 21 20 20 18 14 10 11 10
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 44 values pushed */
          89 73 74 50 64 31 34 72 37 16 0 11 16 11 32 11 3 0 74 16 74 32 74 208 74
          4 13 3 50 37 18 28 11 74 74 11 28 18 37 50 6 63 31 63
          NPUSHW[ ]	/* 10 values pushed */
          -16 64 63 313 89 0 -16 23 0 313
          PUSHB[ ]	/* 3 values pushed */
          89 55 25
          PUSHW[ ]	/* 1 value pushed */
          320
          NPUSHB[ ]	/* 14 values pushed */
          89 23 55 23 55 30 64 64 14 21 72 64 70 71
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 10 values pushed */
          11 15 72 71 71 31 33 30 31 30
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 26 values pushed */
          89 111 31 127 31 175 31 191 31 239 31 255 31 6 47 31 63 31 79 31 111 31 175 31 5
          31
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC21" xMin="23" yMin="-278" xMax="2025" yMax="1702">
      <contour>
        <pt x="23" y="653" on="1"/>
        <pt x="316" y="1128" on="0"/>
        <pt x="470" y="1702" on="1"/>
        <pt x="610" y="1647" on="1"/>
        <pt x="585" y="1500" on="0"/>
        <pt x="534" y="1351" on="1"/>
        <pt x="1092" y="1359" on="1"/>
        <pt x="1097" y="1197" on="1"/>
        <pt x="977" y="219" on="0"/>
        <pt x="191" y="-266" on="1"/>
        <pt x="128" y="-215" on="0"/>
        <pt x="58" y="-135" on="1"/>
        <pt x="454" y="109" on="0"/>
        <pt x="691" y="443" on="1"/>
        <pt x="516" y="582" on="0"/>
        <pt x="348" y="694" on="1"/>
        <pt x="476" y="830" on="1"/>
        <pt x="622" y="687" on="0"/>
        <pt x="769" y="591" on="1"/>
        <pt x="867" y="860" on="0"/>
        <pt x="910" y="1185" on="1"/>
        <pt x="460" y="1188" on="1"/>
        <pt x="309" y="818" on="0"/>
        <pt x="97" y="495" on="1"/>
        <pt x="81" y="588" on="0"/>
      </contour>
      <contour>
        <pt x="1275" y="1679" on="1"/>
        <pt x="1427" y="1673" on="1"/>
        <pt x="1430" y="982" on="1"/>
        <pt x="1531" y="1085" on="1"/>
        <pt x="1816" y="874" on="0"/>
        <pt x="2025" y="661" on="1"/>
        <pt x="1939" y="546" on="1"/>
        <pt x="1698" y="730" on="0"/>
        <pt x="1455" y="952" on="1"/>
        <pt x="1443" y="-278" on="1"/>
        <pt x="1284" y="-271" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          31 30 30 34 13 18 18 11 20
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 5 values pushed */
          7 7 3 27 34
          PUSHW[ ]	/* 1 value pushed */
          356
          NPUSHB[ ]	/* 22 values pushed */
          35 16 15 15 35 23 9 11 11 0 35 35 2 37 5 21 3 23 23 0 0 2
          PUSHW[ ]	/* 1 value pushed */
          355
          NPUSHB[ ]	/* 32 values pushed */
          64 3 13 34 18 50 18 2 20 18 1 148 18 196 18 212 18 3 82 18 1 36 18 68 18
          2 100 18 132 18 2 18
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 17 values pushed */
          26 30 72 82 18 1 3 16 18 1 15 18 1 15 4 18 0
          PUSHW[ ]	/* 4 values pushed */
          -16 23 0 320
          NPUSHB[ ]	/* 9 values pushed */
          89 33 27 27 28 28 30 21 30
          PUSHW[ ]	/* 4 values pushed */
          -16 31 30 316
          NPUSHB[ ]	/* 11 values pushed */
          89 23 31 23 31 9 21 15 16 16 15
          PUSHW[ ]	/* 1 value pushed */
          310
          PUSHB[ ]	/* 6 values pushed */
          89 16 16 11 5 11
          PUSHW[ ]	/* 4 values pushed */
          -16 9 11 314
          NPUSHB[ ]	/* 13 values pushed */
          89 35 35 9 64 12 16 72 9 7 21 5 21
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 51 values pushed */
          89 25 25 3 96 2 112 2 2 2 2 16 5 64 5 128 5 144 5 4 16 5 48 5 64
          5 80 5 112 5 128 5 176 5 208 5 224 5 9 176 5 192 5 2 175 5 1 112 5 1
          5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC28" xMin="13" yMin="-225" xMax="1997" yMax="1691">
      <contour>
        <pt x="838" y="1533" on="1"/>
        <pt x="1997" y="1550" on="1"/>
        <pt x="1991" y="1377" on="1"/>
        <pt x="1567" y="1376" on="1"/>
        <pt x="1557" y="14" on="1"/>
        <pt x="1555" y="-209" on="0"/>
        <pt x="1336" y="-213" on="1"/>
        <pt x="1172" y="-209" on="0"/>
        <pt x="991" y="-225" on="1"/>
        <pt x="972" y="-125" on="0"/>
        <pt x="939" y="-64" on="1"/>
        <pt x="1156" y="-76" on="0"/>
        <pt x="1293" y="-55" on="1"/>
        <pt x="1408" y="-65" on="0"/>
        <pt x="1410" y="64" on="1"/>
        <pt x="1391" y="1378" on="1"/>
        <pt x="838" y="1364" on="1"/>
      </contour>
      <contour>
        <pt x="544" y="579" on="1"/>
        <pt x="744" y="304" on="0"/>
        <pt x="916" y="85" on="1"/>
        <pt x="767" y="-29" on="1"/>
        <pt x="616" y="246" on="0"/>
        <pt x="443" y="455" on="1"/>
        <pt x="359" y="72" on="0"/>
        <pt x="129" y="-212" on="1"/>
        <pt x="73" y="-157" on="0"/>
        <pt x="13" y="-115" on="1"/>
        <pt x="320" y="323" on="0"/>
        <pt x="351" y="910" on="1"/>
        <pt x="359" y="1230" on="0"/>
        <pt x="363" y="1690" on="1"/>
        <pt x="499" y="1691" on="1"/>
        <pt x="491" y="1262" on="0"/>
        <pt x="482" y="934" on="1"/>
        <pt x="480" y="671" on="0"/>
        <pt x="470" y="498" on="1"/>
      </contour>
      <contour>
        <pt x="43" y="1331" on="1"/>
        <pt x="148" y="1370" on="1"/>
        <pt x="222" y="985" on="0"/>
        <pt x="267" y="792" on="1"/>
        <pt x="125" y="740" on="1"/>
        <pt x="109" y="1036" on="0"/>
      </contour>
      <contour>
        <pt x="729" y="1345" on="1"/>
        <pt x="874" y="1315" on="1"/>
        <pt x="759" y="1038" on="0"/>
        <pt x="677" y="774" on="1"/>
        <pt x="607" y="783" on="0"/>
        <pt x="535" y="786" on="1"/>
        <pt x="642" y="1101" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          20 16 20
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 7 values pushed */
          19 10 10 19 16 16 42
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 7 values pushed */
          43 19 43 19 43 37 4
          PUSHW[ ]	/* 1 value pushed */
          355
          PUSHB[ ]	/* 5 values pushed */
          14 2 2 14 45
          PUSHW[ ]	/* 1 value pushed */
          348
          PUSHB[ ]	/* 6 values pushed */
          47 35 22 22 24 34
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 13 values pushed */
          28 30 28 14 47 28 28 47 14 3 50 36 40
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 3 values pushed */
          39 39 37
          PUSHW[ ]	/* 1 value pushed */
          349
          NPUSHB[ ]	/* 39 values pushed */
          36 64 24 26 26 36 39 15 40 31 40 63 40 127 40 191 40 5 15 40 111 40 143 40 159
          40 175 40 207 40 6 11 3 40 40 26 30 12 6
          PUSHW[ ]	/* 1 value pushed */
          319
          PUSHB[ ]	/* 7 values pushed */
          89 12 12 8 10 10 8
          PUSHW[ ]	/* 1 value pushed */
          322
          NPUSHB[ ]	/* 39 values pushed */
          89 47 64 45 1 176 45 1 111 45 127 45 143 45 3 0 45 16 45 32 45 3 13 45 45
          16 36 0 37 16 37 48 37 64 37 4 35 3 37
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 14 values pushed */
          21 25 72 37 37 17 30 19 20 20 35 22 17 22
          PUSHW[ ]	/* 1 value pushed */
          305
          NPUSHB[ ]	/* 17 values pushed */
          89 15 10 31 10 2 23 3 17 16 10 17 10 17 26 0 26
          PUSHW[ ]	/* 4 values pushed */
          -16 24 26 310
          NPUSHB[ ]	/* 13 values pushed */
          89 175 24 1 15 24 31 24 2 14 3 24 30
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 8 values pushed */
          11 15 72 30 30 0 43 42
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          29 36 72 42
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 9 values pushed */
          12 25 72 42 42 3 16 0 16
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 39 values pushed */
          89 31 0 47 0 95 0 111 0 127 0 159 0 175 0 191 0 223 0 239 0 255 0 11 159
          0 175 0 223 0 239 0 4 0 64 11 15 72 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC2A" xMin="28" yMin="-284" xMax="2057" yMax="1730">
      <contour>
        <pt x="251" y="752" on="1"/>
        <pt x="501" y="778" on="1"/>
        <pt x="488" y="1173" on="1"/>
        <pt x="632" y="1176" on="1"/>
        <pt x="623" y="759" on="1"/>
        <pt x="905" y="780" on="1"/>
        <pt x="902" y="609" on="1"/>
        <pt x="628" y="615" on="1"/>
        <pt x="643" y="322" on="1"/>
        <pt x="792" y="348" on="0"/>
        <pt x="933" y="361" on="1"/>
        <pt x="923" y="279" on="0"/>
        <pt x="938" y="234" on="1"/>
        <pt x="782" y="190" on="0"/>
        <pt x="642" y="206" on="1"/>
        <pt x="620" y="-258" on="1"/>
        <pt x="492" y="-282" on="1"/>
        <pt x="500" y="169" on="1"/>
        <pt x="271" y="157" on="0"/>
        <pt x="73" y="108" on="1"/>
        <pt x="28" y="272" on="1"/>
        <pt x="272" y="282" on="0"/>
        <pt x="502" y="320" on="1"/>
        <pt x="494" y="647" on="1"/>
        <pt x="93" y="621" on="1"/>
        <pt x="85" y="736" on="1"/>
        <pt x="193" y="1039" on="0"/>
        <pt x="283" y="1281" on="1"/>
        <pt x="55" y="1267" on="1"/>
        <pt x="59" y="1402" on="1"/>
        <pt x="314" y="1416" on="1"/>
        <pt x="388" y="1567" on="0"/>
        <pt x="404" y="1730" on="1"/>
        <pt x="586" y="1697" on="1"/>
        <pt x="504" y="1551" on="0"/>
        <pt x="489" y="1395" on="1"/>
        <pt x="883" y="1403" on="1"/>
        <pt x="903" y="1263" on="1"/>
        <pt x="415" y="1283" on="1"/>
        <pt x="341" y="990" on="0"/>
      </contour>
      <contour>
        <pt x="1310" y="1141" on="1"/>
        <pt x="1475" y="1159" on="1"/>
        <pt x="1472" y="917" on="0"/>
        <pt x="1456" y="755" on="1"/>
        <pt x="1623" y="76" on="0"/>
        <pt x="2057" y="-126" on="1"/>
        <pt x="1961" y="-195" on="0"/>
        <pt x="1927" y="-273" on="1"/>
        <pt x="1545" y="-68" on="0"/>
        <pt x="1401" y="474" on="1"/>
        <pt x="1273" y="-13" on="0"/>
        <pt x="826" y="-284" on="1"/>
        <pt x="773" y="-210" on="0"/>
        <pt x="707" y="-139" on="1"/>
        <pt x="1274" y="168" on="0"/>
        <pt x="1302" y="764" on="1"/>
        <pt x="1303" y="871" on="0"/>
      </contour>
      <contour>
        <pt x="809" y="919" on="1"/>
        <pt x="1022" y="1220" on="0"/>
        <pt x="1171" y="1711" on="1"/>
        <pt x="1342" y="1674" on="1"/>
        <pt x="1275" y="1508" on="0"/>
        <pt x="1217" y="1386" on="1"/>
        <pt x="1990" y="1365" on="1"/>
        <pt x="1987" y="1257" on="1"/>
        <pt x="1808" y="861" on="1"/>
        <pt x="1626" y="883" on="1"/>
        <pt x="1808" y="1233" on="1"/>
        <pt x="1140" y="1254" on="1"/>
        <pt x="1059" y="999" on="0"/>
        <pt x="921" y="831" on="1"/>
        <pt x="869" y="883" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 31 values pushed */
          10 12 6 37 28 62 68 60 70 47 45 45 64 6 12 10 3 51 35 38 38 33 0 27 30
          30 32 24 28 20 65
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 3 values pushed */
          66 49 41
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 3 values pushed */
          40 40 43
          PUSHW[ ]	/* 4 values pushed */
          353 55 59 354
          PUSHB[ ]	/* 3 values pushed */
          60 37 70
          PUSHW[ ]	/* 6 values pushed */
          -16 70 349 57 32 354
          NPUSHB[ ]	/* 12 values pushed */
          33 33 16 51 53 8 4 53 3 1 22 15
          PUSHW[ ]	/* 1 value pushed */
          350
          NPUSHB[ ]	/* 15 values pushed */
          16 16 57 55 66 4 67 24 67 60 64 64 73 20 0
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 7 values pushed */
          64 24 49 40 51 51 53
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 10 values pushed */
          89 51 51 47 22 8 20 10 19 20
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 9 values pushed */
          89 17 14 12 19 19 12 10 12
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 5 values pushed */
          89 7 24 0 24
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 23 values pushed */
          89 25 4 0 57 15 70 1 11 3 70 70 66 65 65 68 47 40 40 64 68 62 68
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 32 values pushed */
          89 15 10 1 11 16 0 1 0 0 80 0 96 0 128 0 144 0 5 12 3 10 0 62 62
          0 10 3 29 47 47 45
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 28 values pushed */
          89 16 16 47 64 12 16 72 47 60 59 59 33 0 32 1 16 3 32 32 29 38 28 2 2
          28 29 28
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 28 values pushed */
          89 35 47 29 63 29 95 29 111 29 143 29 5 47 29 95 29 111 29 127 29 255 29 5 80
          29 1 29
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC32" xMin="20" yMin="-289" xMax="2019" yMax="1685">
      <contour>
        <pt x="698" y="-120" on="1"/>
        <pt x="1046" y="-62" on="0"/>
        <pt x="1255" y="20" on="1"/>
        <pt x="1080" y="118" on="0"/>
        <pt x="871" y="190" on="1"/>
        <pt x="967" y="298" on="0"/>
        <pt x="1029" y="413" on="1"/>
        <pt x="715" y="419" on="1"/>
        <pt x="705" y="545" on="1"/>
        <pt x="1102" y="544" on="1"/>
        <pt x="1151" y="657" on="0"/>
        <pt x="1191" y="723" on="1"/>
        <pt x="1290" y="718" on="1"/>
        <pt x="1309" y="1016" on="1"/>
        <pt x="1076" y="782" on="0"/>
        <pt x="801" y="652" on="1"/>
        <pt x="777" y="728" on="0"/>
        <pt x="720" y="776" on="1"/>
        <pt x="1000" y="894" on="0"/>
        <pt x="1196" y="1102" on="1"/>
        <pt x="742" y="1114" on="1"/>
        <pt x="748" y="1224" on="1"/>
        <pt x="1299" y="1232" on="1"/>
        <pt x="1281" y="1445" on="1"/>
        <pt x="1062" y="1437" on="0"/>
        <pt x="847" y="1421" on="1"/>
        <pt x="861" y="1490" on="0"/>
        <pt x="832" y="1564" on="1"/>
        <pt x="1356" y="1552" on="0"/>
        <pt x="1877" y="1596" on="1"/>
        <pt x="1904" y="1458" on="1"/>
        <pt x="1665" y="1464" on="0"/>
        <pt x="1436" y="1425" on="1"/>
        <pt x="1418" y="1211" on="1"/>
        <pt x="1999" y="1232" on="1"/>
        <pt x="1995" y="1102" on="1"/>
        <pt x="1504" y="1115" on="1"/>
        <pt x="1742" y="868" on="0"/>
        <pt x="2000" y="815" on="1"/>
        <pt x="1958" y="737" on="0"/>
        <pt x="1926" y="648" on="1"/>
        <pt x="1604" y="786" on="0"/>
        <pt x="1415" y="1015" on="1"/>
        <pt x="1440" y="685" on="1"/>
        <pt x="1287" y="678" on="1"/>
        <pt x="1366" y="652" on="1"/>
        <pt x="1322" y="621" on="0"/>
        <pt x="1307" y="558" on="1"/>
        <pt x="2019" y="570" on="1"/>
        <pt x="2009" y="444" on="1"/>
        <pt x="1719" y="446" on="1"/>
        <pt x="1680" y="210" on="0"/>
        <pt x="1512" y="63" on="1"/>
        <pt x="1802" y="-41" on="0"/>
        <pt x="1997" y="-112" on="1"/>
        <pt x="1899" y="-287" on="1"/>
        <pt x="1668" y="-146" on="0"/>
        <pt x="1394" y="-16" on="1"/>
        <pt x="1175" y="-199" on="0"/>
        <pt x="762" y="-289" on="1"/>
        <pt x="716" y="-187" on="0"/>
      </contour>
      <contour>
        <pt x="44" y="814" on="1"/>
        <pt x="354" y="812" on="1"/>
        <pt x="353" y="1243" on="1"/>
        <pt x="251" y="1265" on="1"/>
        <pt x="222" y="1105" on="0"/>
        <pt x="173" y="984" on="1"/>
        <pt x="78" y="1033" on="0"/>
        <pt x="20" y="1028" on="1"/>
        <pt x="136" y="1319" on="0"/>
        <pt x="216" y="1685" on="1"/>
        <pt x="376" y="1679" on="1"/>
        <pt x="346" y="1521" on="0"/>
        <pt x="282" y="1377" on="1"/>
        <pt x="700" y="1408" on="1"/>
        <pt x="709" y="1252" on="1"/>
        <pt x="471" y="1255" on="1"/>
        <pt x="477" y="815" on="1"/>
        <pt x="483" y="837" on="1"/>
        <pt x="720" y="831" on="1"/>
        <pt x="702" y="682" on="1"/>
        <pt x="467" y="686" on="1"/>
        <pt x="488" y="553" on="0"/>
        <pt x="446" y="468" on="1"/>
        <pt x="673" y="229" on="0"/>
        <pt x="799" y="95" on="1"/>
        <pt x="647" y="-17" on="1"/>
        <pt x="564" y="137" on="0"/>
        <pt x="430" y="312" on="1"/>
        <pt x="387" y="1" on="0"/>
        <pt x="151" y="-261" on="1"/>
        <pt x="96" y="-176" on="0"/>
        <pt x="51" y="-132" on="1"/>
        <pt x="351" y="163" on="0"/>
        <pt x="338" y="664" on="1"/>
        <pt x="25" y="669" on="1"/>
      </contour>
      <contour>
        <pt x="1066" y="250" on="1"/>
        <pt x="1257" y="187" on="0"/>
        <pt x="1384" y="117" on="1"/>
        <pt x="1528" y="256" on="0"/>
        <pt x="1581" y="428" on="1"/>
        <pt x="1199" y="445" on="1"/>
        <pt x="1140" y="346" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 64 values pushed */
          52 57 57 50 59 2 98 98 100 0 35 30 27 20 75 80 83 95 35 40 49 38 30 50 55
          54 54 50 44 47 47 101 101 45 96 6 9 9 11 4 27 75 12 78 20 15 15 7 80 3
          17 17 11 78 90 92 92 86 68 73 64 71 66 11
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 3 values pushed */
          45 45 36
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 7 values pushed */
          19 16 36 33 22 19 43
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 3 values pushed */
          12 96 4
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 7 values pushed */
          4 59 0 0 86 16 86
          PUSHW[ ]	/* 4 values pushed */
          348 85 70 351
          PUSHB[ ]	/* 7 values pushed */
          71 88 83 71 3 94 78
          PUSHW[ ]	/* 1 value pushed */
          350
          NPUSHB[ ]	/* 10 values pushed */
          62 62 4 12 3 68 40 38 38 100
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 8 values pushed */
          85 50 16 50 50 104 95 66
          PUSHW[ ]	/* 1 value pushed */
          349
          NPUSHB[ ]	/* 190 values pushed */
          64 68 87 57 1 38 57 70 57 102 57 3 41 23 1 234 31 1 3 172 30 1 2 159 30
          239 30 2 126 30 1 142 30 206 30 2 28 30 44 30 108 30 3 76 30 220 30 2 123 30
          187 30 2 10 30 90 30 2 42 30 58 30 106 30 3 57 30 73 30 2 249 30 1 88 30
          1 42 32 234 32 2 89 32 217 32 2 8 32 1 104 32 248 32 2 47 29 1 94 29 110
          29 2 77 29 173 29 237 29 3 28 29 60 29 2 124 29 140 29 156 29 204 29 220 29 252
          29 6 11 29 1 59 29 187 29 2 42 29 90 29 122 29 3 73 29 105 29 2 7 29 1
          9 98 52 52 54 101 88 83 83 90 81 85 86 86 0 7 57 2 2 55 7 44 45 45 11
          11 8 20 68 66 66 61 64 71 0 70 1 50 3 70
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          36 44 72 70
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 7 values pushed */
          22 27 72 70 70 27 0
          PUSHW[ ]	/* 4 values pushed */
          -16 59 0 316
          PUSHB[ ]	/* 5 values pushed */
          89 59 59 55 54
          PUSHW[ ]	/* 4 values pushed */
          -16 55 54 316
          PUSHB[ ]	/* 3 values pushed */
          89 55 12
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 8 values pushed */
          50 101 7 47 12 8 8 7
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 3 values pushed */
          89 8 17
          PUSHW[ ]	/* 4 values pushed */
          -16 15 17 316
          PUSHB[ ]	/* 5 values pushed */
          89 15 15 40 38
          PUSHW[ ]	/* 4 values pushed */
          -16 40 38 316
          PUSHB[ ]	/* 8 values pushed */
          89 40 81 95 78 61 61 95
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 15 values pushed */
          89 61 42 13 16 2 36 13 42 3 20 33 21 21 20
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 6 values pushed */
          89 21 76 64 73 64
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 10 values pushed */
          89 73 73 21 61 8 4 92 27 92
          PUSHW[ ]	/* 4 values pushed */
          -16 90 92 316
          NPUSHB[ ]	/* 37 values pushed */
          89 40 25 55 127 90 143 90 2 15 90 31 90 2 20 90 64 12 16 72 0 90 16 90 32
          90 3 48 3 90 23 32 25 29 27 27 25
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 18 values pushed */
          89 143 27 1 127 27 191 27 255 27 3 175 27 1 80 27 1 27
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01110]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC39" xMin="44" yMin="-278" xMax="1895" yMax="1680">
      <contour>
        <pt x="126" y="675" on="1"/>
        <pt x="1181" y="661" on="1"/>
        <pt x="1193" y="-271" on="1"/>
        <pt x="1033" y="-278" on="1"/>
        <pt x="1032" y="-164" on="1"/>
        <pt x="260" y="-163" on="1"/>
        <pt x="278" y="-273" on="1"/>
        <pt x="147" y="-258" on="1"/>
      </contour>
      <contour>
        <pt x="236" y="1282" on="1"/>
        <pt x="1110" y="1311" on="1"/>
        <pt x="1109" y="786" on="1"/>
        <pt x="943" y="777" on="1"/>
        <pt x="943" y="839" on="1"/>
        <pt x="381" y="849" on="1"/>
        <pt x="368" y="787" on="1"/>
        <pt x="216" y="785" on="1"/>
      </contour>
      <contour>
        <pt x="1740" y="1680" on="1"/>
        <pt x="1895" y="1672" on="1"/>
        <pt x="1881" y="14" on="1"/>
        <pt x="1889" y="-245" on="0"/>
        <pt x="1656" y="-242" on="1"/>
        <pt x="1557" y="-241" on="0"/>
        <pt x="1355" y="-223" on="1"/>
        <pt x="1347" y="-156" on="0"/>
        <pt x="1350" y="-64" on="1"/>
        <pt x="1534" y="-88" on="0"/>
        <pt x="1616" y="-79" on="1"/>
        <pt x="1718" y="-67" on="0"/>
        <pt x="1744" y="44" on="1"/>
      </contour>
      <contour>
        <pt x="1518" y="278" on="1"/>
        <pt x="1376" y="262" on="1"/>
        <pt x="1367" y="1473" on="1"/>
        <pt x="1523" y="1471" on="1"/>
      </contour>
      <contour>
        <pt x="62" y="1607" on="1"/>
        <pt x="1256" y="1610" on="1"/>
        <pt x="1250" y="1439" on="1"/>
        <pt x="44" y="1471" on="1"/>
      </contour>
      <contour>
        <pt x="948" y="1166" on="1"/>
        <pt x="342" y="1175" on="1"/>
        <pt x="343" y="963" on="1"/>
        <pt x="937" y="963" on="1"/>
      </contour>
      <contour>
        <pt x="1050" y="551" on="1"/>
        <pt x="734" y="558" on="1"/>
        <pt x="751" y="302" on="1"/>
        <pt x="1042" y="298" on="1"/>
      </contour>
      <contour>
        <pt x="261" y="327" on="1"/>
        <pt x="599" y="326" on="1"/>
        <pt x="580" y="545" on="1"/>
        <pt x="285" y="546" on="1"/>
      </contour>
      <contour>
        <pt x="749" y="-48" on="1"/>
        <pt x="1066" y="-41" on="1"/>
        <pt x="1034" y="201" on="1"/>
        <pt x="733" y="200" on="1"/>
      </contour>
      <contour>
        <pt x="263" y="-53" on="1"/>
        <pt x="594" y="-43" on="1"/>
        <pt x="590" y="216" on="1"/>
        <pt x="280" y="193" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          24 35 35 30 10 36 24 29
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 4 values pushed */
          30 44 50 2
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 3 values pushed */
          3 40 10
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 4 values pushed */
          11 43 46 49
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 3 values pushed */
          54 39 14
          PUSHW[ ]	/* 4 values pushed */
          351 15 18 354
          NPUSHB[ ]	/* 14 values pushed */
          15 54 11 3 30 5 7 28 28 58 36 45 53 6
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 8 values pushed */
          64 7 31 31 36 33 33 36
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 5 values pushed */
          89 49 53 53 5
          PUSHW[ ]	/* 1 value pushed */
          311
          PUSHB[ ]	/* 5 values pushed */
          89 52 56 45 56
          PUSHW[ ]	/* 1 value pushed */
          311
          NPUSHB[ ]	/* 10 values pushed */
          89 43 45 30 30 26 42 48 0 48
          PUSHW[ ]	/* 1 value pushed */
          311
          NPUSHB[ ]	/* 9 values pushed */
          89 11 15 11 15 13 0 39 13
          PUSHW[ ]	/* 1 value pushed */
          311
          PUSHB[ ]	/* 3 values pushed */
          89 8 38
          PUSHW[ ]	/* 1 value pushed */
          311
          NPUSHB[ ]	/* 14 values pushed */
          89 15 53 239 53 255 53 3 53 64 13 21 72 53
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 121 values pushed */
          35 40 72 15 45 31 45 47 45 95 45 111 45 127 45 6 15 45 111 45 2 15 0 111 0
          2 160 0 192 0 208 0 3 239 39 1 39 64 15 20 72 0 39 1 11 79 8 95 8 127
          8 3 111 8 127 8 143 8 223 8 4 53 45 0 39 8 8 39 0 45 53 5 26 33 16
          16 32 16 48 16 3 16 16 15 33 31 33 2 12 16 33 32 33 2 0 33 64 33 128 33
          144 33 208 33 5 20 3 33 7 7 3 64 35 40 72 3 3 22 20 26 20
          PUSHW[ ]	/* 1 value pushed */
          318
          NPUSHB[ ]	/* 11 values pushed */
          89 24 24 95 26 111 26 127 26 3 26
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC3B" xMin="113" yMin="-250" xMax="2018" yMax="1608">
      <contour>
        <pt x="996" y="859" on="1"/>
        <pt x="995" y="160" on="0"/>
        <pt x="658" y="-250" on="1"/>
        <pt x="605" y="-184" on="0"/>
        <pt x="542" y="-152" on="1"/>
        <pt x="825" y="222" on="0"/>
        <pt x="829" y="872" on="1"/>
        <pt x="838" y="1583" on="1"/>
        <pt x="1870" y="1608" on="1"/>
        <pt x="1887" y="855" on="1"/>
        <pt x="1726" y="847" on="1"/>
        <pt x="1735" y="952" on="1"/>
        <pt x="991" y="949" on="1"/>
      </contour>
      <contour>
        <pt x="113" y="1542" on="1"/>
        <pt x="643" y="1530" on="1"/>
        <pt x="673" y="278" on="1"/>
        <pt x="284" y="274" on="1"/>
        <pt x="256" y="123" on="1"/>
        <pt x="131" y="92" on="1"/>
      </contour>
      <contour>
        <pt x="1830" y="730" on="1"/>
        <pt x="1929" y="635" on="1"/>
        <pt x="1645" y="395" on="0"/>
        <pt x="1274" y="211" on="1"/>
        <pt x="1275" y="24" on="1"/>
        <pt x="1286" y="-80" on="0"/>
        <pt x="1389" y="-62" on="1"/>
        <pt x="1686" y="-67" on="1"/>
        <pt x="1815" y="-73" on="0"/>
        <pt x="1827" y="46" on="1"/>
        <pt x="1846" y="154" on="0"/>
        <pt x="1839" y="276" on="1"/>
        <pt x="1936" y="273" on="0"/>
        <pt x="2018" y="245" on="1"/>
        <pt x="1964" y="90" on="0"/>
        <pt x="1974" y="-1" on="1"/>
        <pt x="1928" y="-206" on="0"/>
        <pt x="1711" y="-200" on="1"/>
        <pt x="1387" y="-224" on="1"/>
        <pt x="1150" y="-218" on="0"/>
        <pt x="1130" y="6" on="1"/>
        <pt x="1144" y="838" on="1"/>
        <pt x="1268" y="842" on="1"/>
        <pt x="1287" y="375" on="1"/>
        <pt x="1570" y="566" on="0"/>
      </contour>
      <contour>
        <pt x="1747" y="1457" on="1"/>
        <pt x="991" y="1467" on="1"/>
        <pt x="992" y="1082" on="1"/>
        <pt x="1750" y="1086" on="1"/>
      </contour>
      <contour>
        <pt x="527" y="1364" on="1"/>
        <pt x="281" y="1396" on="1"/>
        <pt x="284" y="409" on="1"/>
        <pt x="514" y="411" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          18 40 10 18 2 16 40 42 10 19 12 32 30 30 25 25 37
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 4 values pushed */
          89 25 22 42
          PUSHW[ ]	/* 4 values pushed */
          318 89 22 -16
          PUSHB[ ]	/* 3 values pushed */
          22 50 16
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 6 values pushed */
          89 50 20 16 19 20
          PUSHW[ ]	/* 1 value pushed */
          309
          PUSHB[ ]	/* 4 values pushed */
          89 19 46 12
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 4 values pushed */
          89 46 13 49
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 11 values pushed */
          89 13 13 46 19 50 25 5 4 7 4
          PUSHW[ ]	/* 4 values pushed */
          -16 2 4 310
          PUSHB[ ]	/* 6 values pushed */
          89 22 45 2 7 45
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 4 values pushed */
          89 7 47 9
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 3 values pushed */
          10 42 23
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 6 values pushed */
          39 2 4 4 46 0
          PUSHW[ ]	/* 4 values pushed */
          352 6 15 351
          PUSHB[ ]	/* 5 values pushed */
          51 19 20 20 32
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 11 values pushed */
          51 6 39 10 4 18 30 30 53 50 17
          PUSHW[ ]	/* 2 values pushed */
          351 18
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01110]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC42" xMin="124" yMin="-280" xMax="1906" yMax="1711">
      <contour>
        <pt x="583" y="1072" on="1"/>
        <pt x="1448" y="1080" on="1"/>
        <pt x="1444" y="273" on="1"/>
        <pt x="755" y="291" on="1"/>
        <pt x="746" y="140" on="1"/>
        <pt x="578" y="173" on="1"/>
      </contour>
      <contour>
        <pt x="763" y="1439" on="1"/>
        <pt x="774" y="1574" on="1"/>
        <pt x="1888" y="1568" on="1"/>
        <pt x="1889" y="47" on="1"/>
        <pt x="1906" y="-259" on="0"/>
        <pt x="1662" y="-254" on="1"/>
        <pt x="1456" y="-280" on="0"/>
        <pt x="1298" y="-257" on="1"/>
        <pt x="1322" y="-190" on="0"/>
        <pt x="1286" y="-84" on="1"/>
        <pt x="1455" y="-113" on="0"/>
        <pt x="1610" y="-110" on="1"/>
        <pt x="1759" y="-103" on="0"/>
        <pt x="1747" y="30" on="1"/>
        <pt x="1746" y="1419" on="1"/>
      </contour>
      <contour>
        <pt x="1306" y="919" on="1"/>
        <pt x="726" y="935" on="1"/>
        <pt x="734" y="414" on="1"/>
        <pt x="1285" y="425" on="1"/>
      </contour>
      <contour>
        <pt x="139" y="1324" on="1"/>
        <pt x="281" y="1299" on="1"/>
        <pt x="302" y="-253" on="1"/>
        <pt x="124" y="-269" on="1"/>
      </contour>
      <contour>
        <pt x="244" y="1611" on="1"/>
        <pt x="338" y="1711" on="1"/>
        <pt x="453" y="1584" on="0"/>
        <pt x="633" y="1426" on="1"/>
        <pt x="531" y="1279" on="1"/>
        <pt x="347" y="1506" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 4 values pushed */
          30 -16 30 345
          PUSHB[ ]	/* 5 values pushed */
          29 23 6 6 4
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 4 values pushed */
          5 15 15 2
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 4 values pushed */
          24 33 16 33
          PUSHW[ ]	/* 1 value pushed */
          348
          PUSHB[ ]	/* 4 values pushed */
          32 32 27 9
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 12 values pushed */
          19 29 5 24 19 19 24 5 29 4 36 27
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 11 values pushed */
          64 28 5 5 11 3 28 28 11 17 11
          PUSHW[ ]	/* 1 value pushed */
          317
          PUSHB[ ]	/* 7 values pushed */
          89 17 17 13 15 15 13
          PUSHW[ ]	/* 1 value pushed */
          318
          NPUSHB[ ]	/* 11 values pushed */
          89 25 25 32 32 33 33 6 0 0 22
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 3 values pushed */
          89 23 3
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 32 values pushed */
          89 111 23 1 0 23 0 23 7 223 15 1 15 15 1 15 64 13 16 72 15 72 12 73 15
          15 1 11 3 15 29 30
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 8 values pushed */
          11 15 72 30 30 7 7 6
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 9 values pushed */
          89 47 7 63 7 79 7 3 7
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC44" xMin="50" yMin="-235" xMax="2007" yMax="1596">
      <contour>
        <pt x="51" y="1596" on="1"/>
        <pt x="2007" y="1590" on="1"/>
        <pt x="1991" y="1455" on="1"/>
        <pt x="1103" y="1447" on="1"/>
        <pt x="1086" y="1193" on="1"/>
        <pt x="1864" y="1204" on="1"/>
        <pt x="1862" y="-25" on="1"/>
        <pt x="1857" y="-225" on="0"/>
        <pt x="1639" y="-229" on="1"/>
        <pt x="1502" y="-233" on="0"/>
        <pt x="1333" y="-233" on="1"/>
        <pt x="1347" y="-161" on="0"/>
        <pt x="1298" y="-55" on="1"/>
        <pt x="1462" y="-82" on="0"/>
        <pt x="1613" y="-79" on="1"/>
        <pt x="1708" y="-91" on="0"/>
        <pt x="1739" y="40" on="1"/>
        <pt x="1743" y="1038" on="1"/>
        <pt x="1078" y="1033" on="1"/>
        <pt x="1087" y="-202" on="1"/>
        <pt x="928" y="-202" on="1"/>
        <pt x="938" y="1069" on="1"/>
        <pt x="301" y="1053" on="1"/>
        <pt x="322" y="-227" on="1"/>
        <pt x="168" y="-235" on="1"/>
        <pt x="179" y="1197" on="1"/>
        <pt x="938" y="1195" on="1"/>
        <pt x="929" y="1443" on="1"/>
        <pt x="50" y="1470" on="1"/>
      </contour>
      <contour>
        <pt x="1179" y="352" on="1"/>
        <pt x="1250" y="460" on="1"/>
        <pt x="1464" y="319" on="0"/>
        <pt x="1644" y="207" on="1"/>
        <pt x="1538" y="87" on="1"/>
        <pt x="1395" y="179" on="0"/>
      </contour>
      <contour>
        <pt x="1198" y="761" on="1"/>
        <pt x="1251" y="907" on="1"/>
        <pt x="1487" y="749" on="0"/>
        <pt x="1651" y="642" on="1"/>
        <pt x="1546" y="547" on="1"/>
        <pt x="1418" y="647" on="0"/>
      </contour>
      <contour>
        <pt x="381" y="357" on="1"/>
        <pt x="475" y="458" on="1"/>
        <pt x="678" y="365" on="0"/>
        <pt x="835" y="211" on="1"/>
        <pt x="753" y="91" on="1"/>
        <pt x="597" y="208" on="0"/>
      </contour>
      <contour>
        <pt x="439" y="787" on="1"/>
        <pt x="493" y="905" on="1"/>
        <pt x="713" y="779" on="0"/>
        <pt x="848" y="681" on="1"/>
        <pt x="754" y="527" on="1"/>
        <pt x="621" y="682" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 43 values pushed */
          12 12 33 19 39 38 38 19 33 32 32 19 36 35 35 19 30 29 29 16 19 51 50 50 23
          45 44 44 23 48 47 47 23 42 41 41 20 23 2 28 4 26 19
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 3 values pushed */
          20 2 6
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 7 values pushed */
          20 24 16 16 54 28 23
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 3 values pushed */
          64 24 32
          PUSHW[ ]	/* 4 values pushed */
          -16 33 32 311
          PUSHB[ ]	/* 5 values pushed */
          89 33 33 45 44
          PUSHW[ ]	/* 4 values pushed */
          -16 45 44 311
          PUSHB[ ]	/* 5 values pushed */
          89 29 16 30 29
          PUSHW[ ]	/* 1 value pushed */
          309
          PUSHB[ ]	/* 8 values pushed */
          89 30 30 42 41 16 42 41
          PUSHW[ ]	/* 7 values pushed */
          309 89 38 -16 39 38 311
          PUSHB[ ]	/* 5 values pushed */
          89 39 39 51 50
          PUSHW[ ]	/* 4 values pushed */
          -16 51 50 311
          PUSHB[ ]	/* 5 values pushed */
          89 35 16 36 35
          PUSHW[ ]	/* 1 value pushed */
          309
          PUSHB[ ]	/* 8 values pushed */
          89 36 36 48 47 16 48 47
          PUSHW[ ]	/* 1 value pushed */
          309
          PUSHB[ ]	/* 5 values pushed */
          89 18 22 25 22
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 31 values pushed */
          89 4 25 16 42 1 15 48 95 48 2 13 3 45 42 51 48 25 25 48 51 42 45 5 12
          0 24 24 8 14 8
          PUSHW[ ]	/* 1 value pushed */
          315
          PUSHB[ ]	/* 8 values pushed */
          89 14 14 12 10 20 12 20
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 11 values pushed */
          89 12 64 16 19 72 12 3 28 0 28
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 29 values pushed */
          89 63 0 79 0 2 0 0 48 0 64 0 128 0 144 0 192 0 208 0 7 112 0 176 0
          240 0 3 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC4C" xMin="169" yMin="-258" xMax="1922" yMax="1551">
      <contour>
        <pt x="169" y="1550" on="1"/>
        <pt x="1898" y="1551" on="1"/>
        <pt x="1922" y="-258" on="1"/>
        <pt x="1731" y="-249" on="1"/>
        <pt x="1720" y="-134" on="1"/>
        <pt x="350" y="-157" on="1"/>
        <pt x="338" y="-247" on="1"/>
        <pt x="201" y="-250" on="1"/>
      </contour>
      <contour>
        <pt x="1498" y="556" on="1"/>
        <pt x="1575" y="564" on="0"/>
        <pt x="1730" y="578" on="1"/>
        <pt x="1702" y="415" on="1"/>
        <pt x="1455" y="384" on="1"/>
        <pt x="1207" y="403" on="0"/>
        <pt x="1190" y="660" on="1"/>
        <pt x="1180" y="1404" on="1"/>
        <pt x="899" y="1386" on="1"/>
        <pt x="879" y="843" on="0"/>
        <pt x="849" y="654" on="1"/>
        <pt x="781" y="426" on="0"/>
        <pt x="489" y="252" on="1"/>
        <pt x="431" y="303" on="0"/>
        <pt x="375" y="363" on="1"/>
        <pt x="635" y="521" on="0"/>
        <pt x="691" y="709" on="1"/>
        <pt x="720" y="845" on="0"/>
        <pt x="735" y="1406" on="1"/>
        <pt x="357" y="1398" on="1"/>
        <pt x="360" y="19" on="1"/>
        <pt x="1740" y="16" on="1"/>
        <pt x="1724" y="1407" on="1"/>
        <pt x="1342" y="1400" on="1"/>
        <pt x="1357" y="643" on="1"/>
        <pt x="1368" y="547" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 5 values pushed */
          29 3 10 10 2
          PUSHW[ ]	/* 4 values pushed */
          356 3 32 355
          PUSHB[ ]	/* 5 values pushed */
          14 20 22 22 16
          PUSHW[ ]	/* 1 value pushed */
          355
          NPUSHB[ ]	/* 11 values pushed */
          26 3 14 26 26 14 3 3 35 28 6
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 4 values pushed */
          64 7 8 12
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 6 values pushed */
          89 8 8 28 0 22
          PUSHW[ ]	/* 4 values pushed */
          -16 20 22 312
          NPUSHB[ ]	/* 19 values pushed */
          89 20 20 5 27 7 7 15 3 31 3 2 26 3 3 3 5 28 5
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 18 values pushed */
          89 15 28 31 28 47 28 79 28 4 11 3 28 31 16 27 0 27
          PUSHW[ ]	/* 1 value pushed */
          318
          NPUSHB[ ]	/* 33 values pushed */
          89 63 0 79 0 127 0 191 0 255 0 5 47 0 63 0 79 0 111 0 175 0 191 0 207
          0 7 0 64 23 26 72 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC55" xMin="21" yMin="694" xMax="2028" yMax="871">
      <contour>
        <pt x="26" y="851" on="1"/>
        <pt x="2028" y="871" on="1"/>
        <pt x="2007" y="694" on="1"/>
        <pt x="21" y="707" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          2 2 5 3 0 3
          PUSHW[ ]	/* 1 value pushed */
          321
          PUSHB[ ]	/* 2 values pushed */
          89 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC57" xMin="30" yMin="-257" xMax="2017" yMax="1672">
      <contour>
        <pt x="491" y="1258" on="1"/>
        <pt x="649" y="1179" on="1"/>
        <pt x="443" y="650" on="0"/>
        <pt x="199" y="139" on="1"/>
        <pt x="128" y="185" on="0"/>
        <pt x="30" y="238" on="1"/>
        <pt x="262" y="626" on="0"/>
      </contour>
      <contour>
        <pt x="1366" y="1175" on="1"/>
        <pt x="1545" y="1249" on="1"/>
        <pt x="1761" y="789" on="0"/>
        <pt x="2017" y="282" on="1"/>
        <pt x="1856" y="179" on="1"/>
        <pt x="1602" y="726" on="0"/>
      </contour>
      <contour>
        <pt x="977" y="1671" on="1"/>
        <pt x="1128" y="1672" on="1"/>
        <pt x="1144" y="9" on="1"/>
        <pt x="1121" y="-228" on="0"/>
        <pt x="837" y="-255" on="1"/>
        <pt x="757" y="-257" on="0"/>
        <pt x="542" y="-230" on="1"/>
        <pt x="555" y="-151" on="0"/>
        <pt x="531" y="-48" on="1"/>
        <pt x="732" y="-69" on="0"/>
        <pt x="804" y="-73" on="1"/>
        <pt x="953" y="-56" on="0"/>
        <pt x="952" y="68" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 5 values pushed */
          21 21 25 3 8
          PUSHW[ ]	/* 7 values pushed */
          352 7 15 358 25 0 355
          PUSHB[ ]	/* 5 values pushed */
          1 7 25 5 11
          PUSHW[ ]	/* 1 value pushed */
          358
          PUSHB[ ]	/* 5 values pushed */
          1 10 10 27 3
          PUSHW[ ]	/* 3 values pushed */
          -16 3 355
          NPUSHB[ ]	/* 52 values pushed */
          64 5 5 3 10 11 7 8 1 0 63 3 1 143 3 207 3 223 3 3 3 64 11 14 72
          15 11 31 11 2 11 15 8 31 8 2 27 3 3 11 8 0 0 8 11 3 4 13 19 17
          23 17
          PUSHW[ ]	/* 1 value pushed */
          321
          NPUSHB[ ]	/* 22 values pushed */
          89 21 21 23 64 17 40 72 23 0 13 48 13 64 13 80 13 4 240 13 1 13
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          33 40 72 13
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC5E" xMin="36" yMin="-231" xMax="2036" yMax="1683">
      <contour>
        <pt x="852" y="91" on="1"/>
        <pt x="771" y="-5" on="1"/>
        <pt x="635" y="72" on="0"/>
        <pt x="517" y="186" on="1"/>
        <pt x="388" y="-45" on="0"/>
        <pt x="138" y="-231" on="1"/>
        <pt x="85" y="-162" on="0"/>
        <pt x="49" y="-123" on="1"/>
        <pt x="272" y="77" on="0"/>
        <pt x="408" y="301" on="1"/>
        <pt x="261" y="408" on="0"/>
        <pt x="103" y="544" on="1"/>
        <pt x="206" y="801" on="0"/>
        <pt x="257" y="1140" on="1"/>
        <pt x="47" y="1124" on="1"/>
        <pt x="36" y="1285" on="1"/>
        <pt x="260" y="1275" on="1"/>
        <pt x="295" y="1465" on="0"/>
        <pt x="346" y="1683" on="1"/>
        <pt x="503" y="1680" on="1"/>
        <pt x="440" y="1459" on="0"/>
        <pt x="411" y="1298" on="1"/>
        <pt x="817" y="1274" on="1"/>
        <pt x="818" y="1166" on="1"/>
        <pt x="765" y="587" on="0"/>
        <pt x="598" y="317" on="1"/>
        <pt x="731" y="217" on="0"/>
      </contour>
      <contour>
        <pt x="788" y="808" on="1"/>
        <pt x="1357" y="790" on="1"/>
        <pt x="1346" y="1133" on="1"/>
        <pt x="1545" y="1290" on="0"/>
        <pt x="1723" y="1403" on="1"/>
        <pt x="870" y="1412" on="1"/>
        <pt x="874" y="1556" on="1"/>
        <pt x="1950" y="1552" on="1"/>
        <pt x="1944" y="1395" on="1"/>
        <pt x="1735" y="1239" on="0"/>
        <pt x="1503" y="1055" on="1"/>
        <pt x="1520" y="791" on="1"/>
        <pt x="2002" y="783" on="1"/>
        <pt x="2036" y="645" on="1"/>
        <pt x="1522" y="640" on="1"/>
        <pt x="1519" y="25" on="1"/>
        <pt x="1502" y="-224" on="0"/>
        <pt x="1257" y="-220" on="1"/>
        <pt x="1173" y="-223" on="0"/>
        <pt x="1000" y="-231" on="1"/>
        <pt x="994" y="-158" on="0"/>
        <pt x="946" y="-53" on="1"/>
        <pt x="1149" y="-85" on="0"/>
        <pt x="1246" y="-99" on="1"/>
        <pt x="1371" y="-81" on="0"/>
        <pt x="1355" y="57" on="1"/>
        <pt x="1358" y="651" on="1"/>
        <pt x="786" y="642" on="1"/>
      </contour>
      <contour>
        <pt x="636" y="1140" on="1"/>
        <pt x="411" y="1124" on="1"/>
        <pt x="332" y="729" on="0"/>
        <pt x="283" y="598" on="1"/>
        <pt x="369" y="484" on="0"/>
        <pt x="490" y="428" on="1"/>
        <pt x="636" y="690" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 38 values pushed */
          25 3 3 23 5 9 60 60 55 7 48 32 54 21 56 56 19 58 13 16 16 18 11 48 1
          0 0 14 5 7 7 52 14 40 14 38 28 42
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 4 values pushed */
          52 32 54 23
          PUSHW[ ]	/* 4 values pushed */
          353 55 18 354
          NPUSHB[ ]	/* 13 values pushed */
          19 52 55 31 11 40 31 19 35 35 63 14 58
          PUSHW[ ]	/* 4 values pushed */
          354 64 11 -16
          NPUSHB[ ]	/* 12 values pushed */
          11 3 9 9 1 14 60 25 25 0 56 0
          PUSHW[ ]	/* 4 values pushed */
          -16 1 0 311
          PUSHB[ ]	/* 8 values pushed */
          89 1 1 5 35 32 33 32
          PUSHW[ ]	/* 1 value pushed */
          315
          PUSHB[ ]	/* 5 values pushed */
          89 46 44 50 44
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 8 values pushed */
          89 48 48 50 41 54 27 54
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 18 values pushed */
          89 38 27 31 37 1 3 15 37 47 37 63 37 3 11 4 29 37
          PUSHW[ ]	/* 1 value pushed */
          300
          PUSHB[ ]	/* 5 values pushed */
          89 56 14 15 14
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 29 values pushed */
          89 21 15 32 15 48 15 64 15 3 50 27 29 15 15 29 27 50 4 7 33 176 18 192 18
          208 18 3 18
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          23 28 72 18
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 21 values pushed */
          11 15 72 18 18 95 33 1 15 33 31 33 47 33 79 33 4 11 3 33 7
          PUSHW[ ]	/* 4 values pushed */
          -16 5 7 312
          NPUSHB[ ]	/* 25 values pushed */
          89 239 5 1 2 255 5 1 79 5 95 5 111 5 223 5 239 5 5 5 64 31 38 72 5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC67" xMin="8" yMin="-284" xMax="2027" yMax="1714">
      <contour>
        <pt x="1411" y="1711" on="1"/>
        <pt x="1549" y="1697" on="1"/>
        <pt x="1556" y="1322" on="1"/>
        <pt x="1984" y="1318" on="1"/>
        <pt x="1968" y="1175" on="1"/>
        <pt x="1537" y="1176" on="1"/>
        <pt x="1550" y="830" on="1"/>
        <pt x="1916" y="830" on="1"/>
        <pt x="1944" y="688" on="1"/>
        <pt x="1558" y="676" on="1"/>
        <pt x="1548" y="325" on="1"/>
        <pt x="2027" y="323" on="1"/>
        <pt x="2004" y="173" on="1"/>
        <pt x="1574" y="199" on="1"/>
        <pt x="1538" y="-280" on="1"/>
        <pt x="1381" y="-284" on="1"/>
      </contour>
      <contour>
        <pt x="594" y="315" on="1"/>
        <pt x="994" y="343" on="1"/>
        <pt x="1018" y="688" on="1"/>
        <pt x="686" y="689" on="1"/>
        <pt x="699" y="830" on="1"/>
        <pt x="1007" y="854" on="1"/>
        <pt x="1018" y="1193" on="1"/>
        <pt x="701" y="1175" on="1"/>
        <pt x="698" y="1327" on="1"/>
        <pt x="1016" y="1319" on="1"/>
        <pt x="1005" y="1692" on="1"/>
        <pt x="1165" y="1705" on="1"/>
        <pt x="1151" y="-260" on="1"/>
        <pt x="999" y="-260" on="1"/>
        <pt x="1012" y="190" on="1"/>
        <pt x="605" y="189" on="1"/>
      </contour>
      <contour>
        <pt x="60" y="1318" on="1"/>
        <pt x="298" y="1338" on="1"/>
        <pt x="277" y="1712" on="1"/>
        <pt x="427" y="1714" on="1"/>
        <pt x="430" y="1323" on="1"/>
        <pt x="611" y="1343" on="1"/>
        <pt x="638" y="1186" on="1"/>
        <pt x="431" y="1186" on="1"/>
        <pt x="431" y="809" on="1"/>
        <pt x="542" y="870" on="0"/>
        <pt x="609" y="916" on="1"/>
        <pt x="626" y="843" on="0"/>
        <pt x="650" y="778" on="1"/>
        <pt x="548" y="724" on="0"/>
        <pt x="420" y="634" on="1"/>
        <pt x="436" y="-36" on="1"/>
        <pt x="421" y="-261" on="0"/>
        <pt x="203" y="-240" on="1"/>
        <pt x="149" y="-245" on="0"/>
        <pt x="32" y="-251" on="1"/>
        <pt x="45" y="-150" on="0"/>
        <pt x="8" y="-95" on="1"/>
        <pt x="132" y="-111" on="0"/>
        <pt x="181" y="-95" on="1"/>
        <pt x="261" y="-83" on="0"/>
        <pt x="282" y="-3" on="1"/>
        <pt x="296" y="590" on="1"/>
        <pt x="168" y="508" on="0"/>
        <pt x="30" y="435" on="1"/>
        <pt x="21" y="612" on="1"/>
        <pt x="141" y="680" on="0"/>
        <pt x="298" y="764" on="1"/>
        <pt x="292" y="1181" on="1"/>
        <pt x="23" y="1192" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 31 values pushed */
          4 8 23 19 44 38 42 31 65 61 4 8 12 31 42 38 44 19 5 29 47 65 61 53 12
          53 17 21 25 3 28
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 7 values pushed */
          29 12 10 6 2 3 14
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 11 values pushed */
          29 57 15 15 67 53 36 40 33 63 47
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 28 values pushed */
          64 57 29 0 26 29 15 58 46 46 60 44 40 63 63 61 42 0 26 34 15 34 9 19 6
          20 20 19
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 4 values pushed */
          89 23 16 20
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 4 values pushed */
          50 48 10 13
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 4 values pushed */
          89 10 16 31
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 4 values pushed */
          89 16 60 61
          PUSHW[ ]	/* 1 value pushed */
          321
          PUSHB[ ]	/* 4 values pushed */
          89 60 42 44
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 4 values pushed */
          89 42 2 5
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 4 values pushed */
          89 2 24 23
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 4 values pushed */
          89 24 55 49
          PUSHW[ ]	/* 1 value pushed */
          318
          NPUSHB[ ]	/* 10 values pushed */
          89 55 55 53 60 65 15 51 53 51
          PUSHW[ ]	/* 1 value pushed */
          319
          NPUSHB[ ]	/* 25 values pushed */
          89 24 2 42 16 10 5 32 15 53 31 53 47 53 3 13 3 53 34 39 65 36 32 32 65
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 10 values pushed */
          89 79 32 223 32 2 96 32 1 32
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC68" xMin="194" yMin="-260" xMax="1859" yMax="1693">
      <contour>
        <pt x="203" y="1330" on="1"/>
        <pt x="935" y="1343" on="1"/>
        <pt x="937" y="1685" on="1"/>
        <pt x="1099" y="1693" on="1"/>
        <pt x="1094" y="1326" on="1"/>
        <pt x="1839" y="1334" on="1"/>
        <pt x="1849" y="26" on="1"/>
        <pt x="1859" y="-244" on="0"/>
        <pt x="1604" y="-241" on="1"/>
        <pt x="1471" y="-215" on="0"/>
        <pt x="1249" y="-213" on="1"/>
        <pt x="1253" y="-150" on="0"/>
        <pt x="1229" y="-55" on="1"/>
        <pt x="1439" y="-68" on="0"/>
        <pt x="1558" y="-60" on="1"/>
        <pt x="1685" y="-84" on="0"/>
        <pt x="1660" y="45" on="1"/>
        <pt x="1688" y="1197" on="1"/>
        <pt x="1100" y="1167" on="1"/>
        <pt x="1075" y="1018" on="0"/>
        <pt x="1043" y="858" on="1"/>
        <pt x="1420" y="572" on="0"/>
        <pt x="1616" y="350" on="1"/>
        <pt x="1513" y="233" on="1"/>
        <pt x="1304" y="450" on="0"/>
        <pt x="1029" y="722" on="1"/>
        <pt x="875" y="421" on="0"/>
        <pt x="480" y="225" on="1"/>
        <pt x="389" y="330" on="0"/>
        <pt x="360" y="348" on="1"/>
        <pt x="711" y="508" on="0"/>
        <pt x="808" y="727" on="1"/>
        <pt x="904" y="874" on="0"/>
        <pt x="927" y="1188" on="1"/>
        <pt x="359" y="1167" on="1"/>
        <pt x="365" y="-234" on="1"/>
        <pt x="194" y="-260" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          20 25 25 18 27 18 4
          PUSHW[ ]	/* 1 value pushed */
          355
          NPUSHB[ ]	/* 11 values pushed */
          1 33 1 12 12 23 27 23 22 22 6
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 11 values pushed */
          16 1 16 1 16 36 38 27 29 29 35
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 8 values pushed */
          64 36 25 20 20 18 27 29
          PUSHW[ ]	/* 4 values pushed */
          -16 27 29 315
          PUSHB[ ]	/* 5 values pushed */
          89 27 27 23 22
          PUSHW[ ]	/* 4 values pushed */
          -16 23 22 312
          NPUSHB[ ]	/* 10 values pushed */
          89 23 23 12 34 14 14 12 10 12
          PUSHW[ ]	/* 1 value pushed */
          321
          NPUSHB[ ]	/* 31 values pushed */
          89 36 36 10 8 8 15 10 1 56 3 10 64 41 44 72 10 64 23 34 72 10 64 14 21
          72 10 18 34 0 34
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 8 values pushed */
          89 4 96 2 192 2 2 2
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 12 values pushed */
          27 30 72 2 2 255 0 1 175 0 1 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC6F" xMin="38" yMin="-221" xMax="2018" yMax="1674">
      <contour>
        <pt x="78" y="1179" on="1"/>
        <pt x="2008" y="1173" on="1"/>
        <pt x="2018" y="1006" on="1"/>
        <pt x="74" y="1016" on="1"/>
      </contour>
      <contour>
        <pt x="819" y="1589" on="1"/>
        <pt x="952" y="1674" on="1"/>
        <pt x="1078" y="1536" on="0"/>
        <pt x="1189" y="1318" on="1"/>
        <pt x="1052" y="1234" on="1"/>
        <pt x="898" y="1468" on="0"/>
      </contour>
      <contour>
        <pt x="648" y="777" on="1"/>
        <pt x="814" y="713" on="1"/>
        <pt x="577" y="200" on="0"/>
        <pt x="190" y="-221" on="1"/>
        <pt x="131" y="-186" on="0"/>
        <pt x="38" y="-95" on="1"/>
        <pt x="386" y="272" on="0"/>
      </contour>
      <contour>
        <pt x="1187" y="664" on="1"/>
        <pt x="1323" y="761" on="1"/>
        <pt x="1682" y="382" on="0"/>
        <pt x="1988" y="-86" on="1"/>
        <pt x="1810" y="-192" on="1"/>
        <pt x="1455" y="345" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 2 18
          PUSHW[ ]	/* 3 values pushed */
          -16 18 350
          PUSHB[ ]	/* 4 values pushed */
          17 8 16 8
          PUSHW[ ]	/* 6 values pushed */
          355 7 5 -16 5 351
          PUSHB[ ]	/* 4 values pushed */
          4 10 16 10
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 8 values pushed */
          11 17 4 15 2 21 16 21
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 7 values pushed */
          7 11 20 20 24 3 13
          PUSHW[ ]	/* 3 values pushed */
          -16 13 352
          NPUSHB[ ]	/* 73 values pushed */
          64 15 7 59 8 1 73 8 89 8 105 8 3 8 8 0 4 4 59 5 123 5 2 5 5
          0 20 21 17 18 11 10 43 18 1 155 18 171 18 187 18 3 21 18 10 10 18 21 3 3
          15 63 13 1 2 15 13 79 13 2 11 0 13 160 13 2 17 3 13 13 3 0 3
          PUSHW[ ]	/* 1 value pushed */
          318
          NPUSHB[ ]	/* 16 values pushed */
          89 32 0 224 0 2 80 0 96 0 176 0 240 0 4 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC71" xMin="44" yMin="-118" xMax="1985" yMax="1505">
      <contour>
        <pt x="186" y="1505" on="1"/>
        <pt x="1858" y="1499" on="1"/>
        <pt x="1868" y="1310" on="1"/>
        <pt x="175" y="1333" on="1"/>
      </contour>
      <contour>
        <pt x="56" y="53" on="1"/>
        <pt x="1974" y="59" on="1"/>
        <pt x="1985" y="-97" on="1"/>
        <pt x="44" y="-118" on="1"/>
      </contour>
      <contour>
        <pt x="285" y="815" on="1"/>
        <pt x="1784" y="815" on="1"/>
        <pt x="1781" y="654" on="1"/>
        <pt x="265" y="631" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          2 10 11 3 3 11 10 2 4 7 6 6 13 7 8 11
          PUSHW[ ]	/* 1 value pushed */
          320
          PUSHB[ ]	/* 7 values pushed */
          89 8 8 0 4 4 7
          PUSHW[ ]	/* 4 values pushed */
          320 89 4 -64
          PUSHB[ ]	/* 6 values pushed */
          20 26 72 4 0 3
          PUSHW[ ]	/* 1 value pushed */
          320
          NPUSHB[ ]	/* 22 values pushed */
          89 47 0 63 0 95 0 111 0 143 0 159 0 175 0 207 0 8 240 0 1 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC78" xMin="52" yMin="-277" xMax="2008" yMax="1707">
      <contour>
        <pt x="66" y="933" on="1"/>
        <pt x="945" y="962" on="1"/>
        <pt x="933" y="1682" on="1"/>
        <pt x="1104" y="1707" on="1"/>
        <pt x="1117" y="936" on="1"/>
        <pt x="2008" y="960" on="1"/>
        <pt x="1995" y="773" on="1"/>
        <pt x="1104" y="806" on="1"/>
        <pt x="1128" y="-263" on="1"/>
        <pt x="925" y="-277" on="1"/>
        <pt x="939" y="792" on="1"/>
        <pt x="52" y="793" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          6 6 13 4 1 8
          PUSHW[ ]	/* 1 value pushed */
          359
          NPUSHB[ ]	/* 31 values pushed */
          64 9 9 13 12 11 111 9 127 9 223 9 3 9 64 12 15 72 9 0 2 96 2 160 2
          176 2 4 14 3 2
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          33 40 72 2
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 8 values pushed */
          28 31 72 2 7 11 0 11
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 8 values pushed */
          89 4 47 0 79 0 2 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC82" xMin="5" yMin="-290" xMax="2045" yMax="1696">
      <contour>
        <pt x="717" y="1550" on="1"/>
        <pt x="1321" y="1533" on="0"/>
        <pt x="1933" y="1641" on="1"/>
        <pt x="1954" y="1453" on="1"/>
        <pt x="1692" y="1449" on="0"/>
        <pt x="1450" y="1417" on="1"/>
        <pt x="1433" y="1147" on="0"/>
        <pt x="1454" y="924" on="1"/>
        <pt x="2017" y="911" on="1"/>
        <pt x="1992" y="773" on="1"/>
        <pt x="1462" y="760" on="1"/>
        <pt x="1509" y="96" on="0"/>
        <pt x="1772" y="-51" on="1"/>
        <pt x="1832" y="-95" on="0"/>
        <pt x="1861" y="-13" on="1"/>
        <pt x="1888" y="76" on="0"/>
        <pt x="1911" y="293" on="1"/>
        <pt x="1982" y="267" on="0"/>
        <pt x="2045" y="221" on="1"/>
        <pt x="2016" y="31" on="0"/>
        <pt x="1985" y="-60" on="1"/>
        <pt x="1951" y="-248" on="0"/>
        <pt x="1851" y="-234" on="1"/>
        <pt x="1671" y="-216" on="0"/>
        <pt x="1560" y="-54" on="1"/>
        <pt x="1368" y="199" on="0"/>
        <pt x="1324" y="771" on="1"/>
        <pt x="883" y="763" on="1"/>
        <pt x="884" y="66" on="1"/>
        <pt x="1076" y="210" on="0"/>
        <pt x="1263" y="291" on="1"/>
        <pt x="1278" y="182" on="0"/>
        <pt x="1292" y="129" on="1"/>
        <pt x="1007" y="-37" on="0"/>
        <pt x="890" y="-103" on="1"/>
        <pt x="800" y="-138" on="0"/>
        <pt x="756" y="-185" on="1"/>
        <pt x="642" y="-60" on="1"/>
        <pt x="728" y="-28" on="0"/>
        <pt x="727" y="102" on="1"/>
      </contour>
      <contour>
        <pt x="5" y="747" on="1"/>
        <pt x="324" y="1200" on="0"/>
        <pt x="484" y="1696" on="1"/>
        <pt x="643" y="1674" on="1"/>
        <pt x="541" y="1361" on="0"/>
        <pt x="406" y="1163" on="1"/>
        <pt x="428" y="-253" on="1"/>
        <pt x="260" y="-262" on="1"/>
        <pt x="293" y="884" on="1"/>
        <pt x="168" y="744" on="0"/>
        <pt x="84" y="616" on="1"/>
        <pt x="60" y="677" on="0"/>
      </contour>
      <contour>
        <pt x="1272" y="1412" on="1"/>
        <pt x="1092" y="1412" on="0"/>
        <pt x="880" y="1392" on="1"/>
        <pt x="889" y="932" on="1"/>
        <pt x="1321" y="936" on="1"/>
        <pt x="1299" y="1118" on="0"/>
      </contour>
      <contour>
        <pt x="1110" y="-51" on="1"/>
        <pt x="1216" y="59" on="1"/>
        <pt x="1330" y="-73" on="0"/>
        <pt x="1472" y="-177" on="1"/>
        <pt x="1343" y="-290" on="1"/>
        <pt x="1226" y="-159" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          2 3 3 18 5 30 32 32 52 59 36 37 37 39 46 9 62 16 62
          PUSHW[ ]	/* 1 value pushed */
          345
          PUSHB[ ]	/* 6 values pushed */
          61 10 7 26 56 5
          PUSHW[ ]	/* 6 values pushed */
          353 52 59 -16 59 343
          PUSHB[ ]	/* 3 values pushed */
          58 55 28
          PUSHW[ ]	/* 4 values pushed */
          352 39 42 351
          PUSHB[ ]	/* 6 values pushed */
          43 61 43 46 9 18
          PUSHW[ ]	/* 1 value pushed */
          351
          NPUSHB[ ]	/* 13 values pushed */
          39 58 52 3 47 16 16 65 47 50 40 40 46
          PUSHW[ ]	/* 1 value pushed */
          351
          NPUSHB[ ]	/* 17 values pushed */
          64 47 61 62 64 15 21 72 62 62 36 48 45 43 50 50 40
          PUSHW[ ]	/* 1 value pushed */
          320
          NPUSHB[ ]	/* 20 values pushed */
          89 50 50 36 54 58 0 28 16 28 2 11 3 28 59 59 32 36 30 32
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 9 values pushed */
          89 18 16 16 36 10 27 55 27
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 15 values pushed */
          89 7 55 30 64 13 16 72 30 55 30 55 37 0 37
          PUSHW[ ]	/* 4 values pushed */
          -16 36 37 312
          PUSHB[ ]	/* 3 values pushed */
          89 22 13
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 29 values pushed */
          89 22 22 36 15 47 31 47 2 26 3 47 64 17 21 72 47 47 36 64 16 21 72 36 52
          5 54 0 54
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 12 values pushed */
          89 43 0 42 1 19 3 42 42 0 2 3
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 36 values pushed */
          89 2 175 0 1 0 0 16 0 48 0 64 0 80 0 128 0 144 0 192 0 208 0 9 80
          0 176 0 192 0 208 0 240 0 5 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDRP[01110]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC89" xMin="4" yMin="-272" xMax="2008" yMax="1659">
      <contour>
        <pt x="865" y="864" on="1"/>
        <pt x="848" y="111" on="0"/>
        <pt x="538" y="-264" on="1"/>
        <pt x="476" y="-219" on="0"/>
        <pt x="434" y="-165" on="1"/>
        <pt x="692" y="191" on="0"/>
        <pt x="687" y="859" on="1"/>
        <pt x="689" y="1602" on="1"/>
        <pt x="1864" y="1611" on="1"/>
        <pt x="1889" y="881" on="1"/>
        <pt x="1747" y="863" on="1"/>
        <pt x="1748" y="958" on="1"/>
        <pt x="853" y="968" on="1"/>
      </contour>
      <contour>
        <pt x="1817" y="762" on="1"/>
        <pt x="1929" y="617" on="1"/>
        <pt x="1646" y="408" on="0"/>
        <pt x="1172" y="186" on="1"/>
        <pt x="1184" y="64" on="1"/>
        <pt x="1177" y="-80" on="0"/>
        <pt x="1296" y="-89" on="1"/>
        <pt x="1649" y="-75" on="1"/>
        <pt x="1817" y="-64" on="0"/>
        <pt x="1801" y="48" on="1"/>
        <pt x="1835" y="143" on="0"/>
        <pt x="1871" y="284" on="1"/>
        <pt x="1940" y="274" on="0"/>
        <pt x="2008" y="223" on="1"/>
        <pt x="1984" y="1" on="0"/>
        <pt x="1964" y="-54" on="1"/>
        <pt x="1878" y="-214" on="0"/>
        <pt x="1691" y="-230" on="1"/>
        <pt x="1262" y="-226" on="1"/>
        <pt x="1041" y="-224" on="0"/>
        <pt x="1043" y="18" on="1"/>
        <pt x="1024" y="829" on="1"/>
        <pt x="1181" y="842" on="1"/>
        <pt x="1170" y="344" on="1"/>
        <pt x="1565" y="546" on="0"/>
      </contour>
      <contour>
        <pt x="1745" y="1469" on="1"/>
        <pt x="835" y="1451" on="1"/>
        <pt x="861" y="1088" on="1"/>
        <pt x="1726" y="1095" on="1"/>
      </contour>
      <contour>
        <pt x="342" y="572" on="1"/>
        <pt x="402" y="526" on="0"/>
        <pt x="489" y="516" on="1"/>
        <pt x="396" y="166" on="0"/>
        <pt x="253" y="-272" on="1"/>
        <pt x="71" y="-181" on="1"/>
        <pt x="215" y="149" on="0"/>
      </contour>
      <contour>
        <pt x="118" y="1161" on="1"/>
        <pt x="311" y="1041" on="0"/>
        <pt x="499" y="914" on="1"/>
        <pt x="394" y="737" on="1"/>
        <pt x="180" y="920" on="0"/>
        <pt x="4" y="1041" on="1"/>
      </contour>
      <contour>
        <pt x="201" y="1659" on="1"/>
        <pt x="417" y="1539" on="0"/>
        <pt x="582" y="1409" on="1"/>
        <pt x="469" y="1272" on="1"/>
        <pt x="278" y="1414" on="0"/>
        <pt x="98" y="1547" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          58 57 57 47 55 60 60 6 47 49 54 54 47 41 9
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 3 values pushed */
          10 36 17
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 6 values pushed */
          33 2 4 4 40 0
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 5 values pushed */
          6 52 51 51 42
          PUSHW[ ]	/* 1 value pushed */
          355
          PUSHB[ ]	/* 7 values pushed */
          44 44 46 13 14 14 26
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 9 values pushed */
          6 33 10 3 47 24 24 62 46
          PUSHW[ ]	/* 1 value pushed */
          357
          NPUSHB[ ]	/* 47 values pushed */
          64 47 34 10 47 175 46 1 46 64 39 44 72 46 46 4 2 64 39 44 72 2 64 19 27
          72 2 2 44 15 42 31 42 2 17 3 42 42 31 52 34 36 10 13 12 16 36
          PUSHW[ ]	/* 1 value pushed */
          318
          NPUSHB[ ]	/* 12 values pushed */
          89 16 64 23 27 72 16 64 18 21 72 16
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 5 values pushed */
          16 14 16 13 14
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 18 values pushed */
          89 15 13 31 13 63 13 79 13 95 13 127 13 6 19 3 13 51
          PUSHW[ ]	/* 4 values pushed */
          -16 52 51 316
          NPUSHB[ ]	/* 17 values pushed */
          89 15 52 63 52 111 52 127 52 159 52 5 17 3 52 40 12
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 25 values pushed */
          89 15 40 31 40 47 40 111 40 127 40 175 40 191 40 239 40 8 13 3 40 54 16 49 54
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 16 values pushed */
          89 15 49 79 49 143 49 3 18 0 49 1 19 3 49 57
          PUSHW[ ]	/* 4 values pushed */
          -16 58 57 316
          NPUSHB[ ]	/* 11 values pushed */
          89 15 58 127 58 2 20 3 58 7 39
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 8 values pushed */
          89 15 7 31 7 2 15 7
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          45 50 72 7
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 25 values pushed */
          28 39 72 7 58 52 16 3 31 60 26 15 24 47 24 95 24 3 18 3 24 24 19 19 31
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 17 values pushed */
          89 7 49 40 13 4 55 19 64 13 16 72 19 60 16 55 60
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 21 values pushed */
          89 111 55 127 55 143 55 3 95 55 111 55 127 55 191 55 4 240 55 1 55
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01110]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC8B" xMin="42" yMin="-297" xMax="2017" yMax="1617">
      <contour>
        <pt x="42" y="-132" on="1"/>
        <pt x="389" y="-59" on="0"/>
        <pt x="617" y="48" on="1"/>
        <pt x="442" y="159" on="0"/>
        <pt x="309" y="361" on="1"/>
        <pt x="402" y="445" on="1"/>
        <pt x="264" y="457" on="1"/>
        <pt x="247" y="1295" on="1"/>
        <pt x="950" y="1279" on="1"/>
        <pt x="971" y="1355" on="0"/>
        <pt x="967" y="1458" on="1"/>
        <pt x="94" y="1475" on="1"/>
        <pt x="111" y="1617" on="1"/>
        <pt x="1923" y="1606" on="1"/>
        <pt x="1952" y="1451" on="1"/>
        <pt x="1141" y="1454" on="1"/>
        <pt x="1113" y="1377" on="0"/>
        <pt x="1116" y="1281" on="1"/>
        <pt x="1771" y="1283" on="1"/>
        <pt x="1776" y="354" on="1"/>
        <pt x="1631" y="330" on="1"/>
        <pt x="1641" y="446" on="1"/>
        <pt x="1057" y="459" on="1"/>
        <pt x="1015" y="203" on="0"/>
        <pt x="887" y="62" on="1"/>
        <pt x="1320" y="-83" on="0"/>
        <pt x="2017" y="-65" on="1"/>
        <pt x="1965" y="-138" on="0"/>
        <pt x="1961" y="-228" on="1"/>
        <pt x="1129" y="-197" on="0"/>
        <pt x="755" y="-13" on="1"/>
        <pt x="549" y="-171" on="0"/>
        <pt x="145" y="-297" on="1"/>
        <pt x="82" y="-206" on="0"/>
      </contour>
      <contour>
        <pt x="396" y="929" on="1"/>
        <pt x="945" y="917" on="1"/>
        <pt x="950" y="1036" on="0"/>
        <pt x="974" y="1130" on="1"/>
        <pt x="415" y="1155" on="1"/>
      </contour>
      <contour>
        <pt x="958" y="810" on="1"/>
        <pt x="397" y="793" on="1"/>
        <pt x="419" y="591" on="1"/>
        <pt x="937" y="589" on="1"/>
        <pt x="945" y="661" on="0"/>
      </contour>
      <contour>
        <pt x="1107" y="592" on="1"/>
        <pt x="1648" y="592" on="1"/>
        <pt x="1643" y="808" on="1"/>
        <pt x="1123" y="800" on="1"/>
        <pt x="1107" y="681" on="0"/>
      </contour>
      <contour>
        <pt x="1651" y="1125" on="1"/>
        <pt x="1100" y="1136" on="1"/>
        <pt x="1115" y="1027" on="0"/>
        <pt x="1108" y="923" on="1"/>
        <pt x="1614" y="944" on="1"/>
      </contour>
      <contour>
        <pt x="773" y="135" on="1"/>
        <pt x="885" y="224" on="0"/>
        <pt x="907" y="452" on="1"/>
        <pt x="441" y="446" on="1"/>
        <pt x="554" y="231" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 5 values pushed */
          14 14 26 26 19
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 9 values pushed */
          20 53 45 20 2 54 54 0 56
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 11 values pushed */
          24 30 30 32 22 16 22 22 47 17 52
          PUSHW[ ]	/* 4 values pushed */
          353 35 44 352
          NPUSHB[ ]	/* 13 values pushed */
          42 42 8 10 10 35 20 35 20 35 60 6 57
          PUSHW[ ]	/* 3 values pushed */
          345 4 -16
          PUSHB[ ]	/* 5 values pushed */
          4 4 34 5 41
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 10 values pushed */
          6 64 32 0 0 6 11 11 6 0
          PUSHW[ ]	/* 4 values pushed */
          -16 32 0 314
          NPUSHB[ ]	/* 15 values pushed */
          89 15 32 1 27 3 32 32 30 2 2 28 6 26 28
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 5 values pushed */
          89 50 38 7 38
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 7 values pushed */
          89 17 7 47 40 34 40
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 16 values pushed */
          89 52 34 54 24 24 26 57 57 22 6 20 20 6 41 6
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 45 values pushed */
          89 44 41 112 7 128 7 144 7 3 31 7 1 63 34 1 15 34 239 34 2 15 7 34 41
          41 34 7 3 12 15 26 1 56 3 26 64 16 39 72 26 15 11 12 11
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 36 values pushed */
          89 240 12 1 0 12 48 12 64 12 80 12 128 12 144 12 192 12 208 12 224 12 9 176 12
          240 12 2 63 12 79 12 143 12 3 12
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC94" xMin="45" yMin="-156" xMax="2013" yMax="1703">
      <contour>
        <pt x="50" y="-10" on="1"/>
        <pt x="952" y="-8" on="1"/>
        <pt x="957" y="372" on="1"/>
        <pt x="260" y="347" on="1"/>
        <pt x="289" y="518" on="1"/>
        <pt x="955" y="513" on="1"/>
        <pt x="932" y="1680" on="1"/>
        <pt x="1118" y="1703" on="1"/>
        <pt x="1118" y="526" on="1"/>
        <pt x="1784" y="517" on="1"/>
        <pt x="1781" y="357" on="1"/>
        <pt x="1091" y="371" on="1"/>
        <pt x="1123" y="-4" on="1"/>
        <pt x="2001" y="-4" on="1"/>
        <pt x="2013" y="-153" on="1"/>
        <pt x="45" y="-156" on="1"/>
      </contour>
      <contour>
        <pt x="46" y="630" on="1"/>
        <pt x="354" y="991" on="0"/>
        <pt x="428" y="1540" on="1"/>
        <pt x="589" y="1491" on="1"/>
        <pt x="544" y="1359" on="0"/>
        <pt x="517" y="1203" on="1"/>
        <pt x="663" y="1015" on="0"/>
        <pt x="875" y="778" on="1"/>
        <pt x="741" y="644" on="1"/>
        <pt x="582" y="875" on="0"/>
        <pt x="458" y="1049" on="1"/>
        <pt x="361" y="723" on="0"/>
        <pt x="162" y="508" on="1"/>
        <pt x="94" y="550" on="0"/>
      </contour>
      <contour>
        <pt x="1158" y="720" on="1"/>
        <pt x="1430" y="1038" on="0"/>
        <pt x="1583" y="1522" on="1"/>
        <pt x="1713" y="1467" on="1"/>
        <pt x="1667" y="1320" on="0"/>
        <pt x="1589" y="1138" on="1"/>
        <pt x="1816" y="917" on="0"/>
        <pt x="1990" y="742" on="1"/>
        <pt x="1895" y="623" on="1"/>
        <pt x="1681" y="843" on="0"/>
        <pt x="1539" y="1009" on="1"/>
        <pt x="1422" y="777" on="0"/>
        <pt x="1264" y="601" on="1"/>
        <pt x="1207" y="664" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          35 40 40 33 42 10 3 15 3 24 28 21 26 26 19 28 14 32
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 7 values pushed */
          33 42 30 30 8 5 12
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 4 values pushed */
          1 24 16 24
          PUSHW[ ]	/* 4 values pushed */
          349 23 18 354
          PUSHB[ ]	/* 8 values pushed */
          19 1 16 14 10 38 16 38
          PUSHW[ ]	/* 1 value pushed */
          348
          NPUSHB[ ]	/* 9 values pushed */
          19 23 33 3 37 37 45 15 28
          PUSHW[ ]	/* 3 values pushed */
          -16 28 346
          NPUSHB[ ]	/* 31 values pushed */
          64 16 37 38 38 42 40 35 35 26 21 21 28 19 19 18 18 33 32 32 30 6 23 24 24
          42 30 11 3 4 3
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 7 values pushed */
          89 8 4 4 30 0 30
          NPUSHW[ ]	/* 10 values pushed */
          -16 42 30 310 89 16 -16 28 16 310
          NPUSHB[ ]	/* 53 values pushed */
          89 28 28 42 0 6 48 6 64 6 96 6 112 6 5 16 6 32 6 48 6 96 6 144 6
          160 6 192 6 224 6 8 0 6 144 6 176 6 208 6 240 6 5 6 6 15 42 1 11 3
          42 0 15
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 3 values pushed */
          89 12 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC9D" xMin="14" yMin="-267" xMax="2022" yMax="1706">
      <contour>
        <pt x="1049" y="815" on="1"/>
        <pt x="1016" y="159" on="0"/>
        <pt x="643" y="-260" on="1"/>
        <pt x="546" y="-190" on="0"/>
        <pt x="523" y="-141" on="1"/>
        <pt x="753" y="121" on="0"/>
        <pt x="830" y="446" on="1"/>
        <pt x="899" y="750" on="0"/>
        <pt x="890" y="1436" on="1"/>
        <pt x="717" y="1422" on="1"/>
        <pt x="712" y="1570" on="1"/>
        <pt x="1720" y="1585" on="1"/>
        <pt x="1737" y="1431" on="1"/>
        <pt x="1537" y="1010" on="1"/>
        <pt x="1864" y="1021" on="1"/>
        <pt x="1877" y="896" on="1"/>
        <pt x="1752" y="501" on="0"/>
        <pt x="1561" y="230" on="1"/>
        <pt x="1764" y="71" on="0"/>
        <pt x="2022" y="-96" on="1"/>
        <pt x="1985" y="-133" on="0"/>
        <pt x="1882" y="-229" on="1"/>
        <pt x="1623" y="-91" on="0"/>
        <pt x="1434" y="124" on="1"/>
        <pt x="1260" y="-101" on="0"/>
        <pt x="952" y="-267" on="1"/>
        <pt x="914" y="-189" on="0"/>
        <pt x="841" y="-134" on="1"/>
        <pt x="1131" y="0" on="0"/>
        <pt x="1323" y="223" on="1"/>
        <pt x="1177" y="462" on="0"/>
      </contour>
      <contour>
        <pt x="1367" y="1050" on="1"/>
        <pt x="1567" y="1419" on="1"/>
        <pt x="1066" y="1444" on="1"/>
        <pt x="1053" y="1303" on="0"/>
        <pt x="1043" y="1168" on="1"/>
        <pt x="1225" y="656" on="0"/>
        <pt x="1456" y="352" on="1"/>
        <pt x="1626" y="603" on="0"/>
        <pt x="1687" y="880" on="1"/>
        <pt x="1351" y="891" on="1"/>
      </contour>
      <contour>
        <pt x="313" y="601" on="1"/>
        <pt x="493" y="614" on="0"/>
        <pt x="739" y="656" on="1"/>
        <pt x="732" y="602" on="0"/>
        <pt x="712" y="540" on="1"/>
        <pt x="377" y="493" on="0"/>
        <pt x="130" y="438" on="1"/>
        <pt x="83" y="579" on="1"/>
        <pt x="227" y="673" on="0"/>
        <pt x="414" y="982" on="1"/>
        <pt x="225" y="946" on="0"/>
        <pt x="88" y="939" on="1"/>
        <pt x="30" y="1059" on="1"/>
        <pt x="216" y="1254" on="0"/>
        <pt x="441" y="1706" on="1"/>
        <pt x="567" y="1657" on="1"/>
        <pt x="355" y="1300" on="0"/>
        <pt x="221" y="1074" on="1"/>
        <pt x="318" y="1099" on="0"/>
        <pt x="454" y="1098" on="1"/>
        <pt x="538" y="1219" on="0"/>
        <pt x="634" y="1352" on="1"/>
        <pt x="749" y="1277" on="1"/>
        <pt x="447" y="816" on="0"/>
      </contour>
      <contour>
        <pt x="14" y="138" on="1"/>
        <pt x="332" y="205" on="0"/>
        <pt x="692" y="297" on="1"/>
        <pt x="703" y="245" on="0"/>
        <pt x="691" y="164" on="1"/>
        <pt x="330" y="63" on="0"/>
        <pt x="99" y="-5" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          43 69 17 23 23 15 25 29 37 37 39 69 27 2 43 8 47 60 50 62 48 41
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 8 values pushed */
          41 47 47 48 48 8 65 58
          PUSHW[ ]	/* 1 value pushed */
          -16
          NPUSHB[ ]	/* 18 values pushed */
          58 52 52 53 53 62 65 9 21 19 19 15 25 27 27 8 2 13
          PUSHW[ ]	/* 6 values pushed */
          355 40 0 349 35 352
          PUSHB[ ]	/* 3 values pushed */
          8 9 62
          NPUSHW[ ]	/* 9 values pushed */
          351 63 2 -16 2 348 4 39 355
          NPUSHB[ ]	/* 9 values pushed */
          15 15 12 4 8 40 3 55 32
          PUSHW[ ]	/* 1 value pushed */
          356
          NPUSHB[ ]	/* 9 values pushed */
          63 56 12 12 73 71 65 65 55
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 4 values pushed */
          64 56 71 65
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 11 values pushed */
          89 71 71 21 9 4 2 2 27 25 27
          PUSHW[ ]	/* 4 values pushed */
          -16 25 27 312
          NPUSHB[ ]	/* 11 values pushed */
          89 25 25 21 37 17 17 19 33 67 69
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 47 48
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 13 values pushed */
          89 0 47 1 14 3 47 47 41 45 43 43 45
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 5 values pushed */
          89 15 40 13 40
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 20 values pushed */
          89 31 13 23 29 29 0 21 63 63 0 62 16 62 32 62 3 35 3 62
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 13 values pushed */
          11 14 72 62 62 60 9 60 58 50 52 58 52
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 49 values pushed */
          89 53 58 159 67 175 67 191 67 3 15 67 31 67 2 67 64 23 35 72 67 64 17 21 72
          67 16 15 43 1 43 16 0 13 1 14 3 67 43 13 58 58 13 43 67 4 19 10 19
          PUSHW[ ]	/* 4 values pushed */
          -16 21 19 316
          NPUSHB[ ]	/* 16 values pushed */
          89 21 64 13 40 72 21 56 55 55 10 33 12 9 10 9
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 17 values pushed */
          89 47 10 1 48 10 192 10 2 80 10 96 10 240 10 3 10
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHPIX[ ]	/* ShiftZoneByPixel */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEC9E" xMin="22" yMin="-267" xMax="2045" yMax="1592">
      <contour>
        <pt x="863" y="1262" on="1"/>
        <pt x="1286" y="1270" on="1"/>
        <pt x="1293" y="1457" on="1"/>
        <pt x="821" y="1439" on="1"/>
        <pt x="806" y="1584" on="1"/>
        <pt x="2015" y="1592" on="1"/>
        <pt x="1984" y="1454" on="1"/>
        <pt x="1448" y="1456" on="1"/>
        <pt x="1455" y="1263" on="1"/>
        <pt x="1912" y="1281" on="1"/>
        <pt x="1923" y="362" on="1"/>
        <pt x="1789" y="362" on="1"/>
        <pt x="1752" y="423" on="1"/>
        <pt x="1454" y="422" on="1"/>
        <pt x="1423" y="213" on="0"/>
        <pt x="1338" y="114" on="1"/>
        <pt x="1581" y="-35" on="0"/>
        <pt x="2045" y="-108" on="1"/>
        <pt x="1973" y="-173" on="0"/>
        <pt x="1931" y="-263" on="1"/>
        <pt x="1512" y="-176" on="0"/>
        <pt x="1236" y="-37" on="1"/>
        <pt x="1081" y="-161" on="0"/>
        <pt x="684" y="-267" on="1"/>
        <pt x="644" y="-236" on="0"/>
        <pt x="566" y="-146" on="1"/>
        <pt x="968" y="-48" on="0"/>
        <pt x="1100" y="63" on="1"/>
        <pt x="959" y="183" on="0"/>
        <pt x="906" y="342" on="1"/>
        <pt x="1015" y="396" on="1"/>
        <pt x="1078" y="265" on="0"/>
        <pt x="1190" y="166" on="1"/>
        <pt x="1254" y="282" on="0"/>
        <pt x="1300" y="436" on="1"/>
        <pt x="839" y="439" on="1"/>
      </contour>
      <contour>
        <pt x="22" y="528" on="1"/>
        <pt x="252" y="888" on="0"/>
        <pt x="343" y="1360" on="1"/>
        <pt x="92" y="1361" on="1"/>
        <pt x="61" y="1520" on="1"/>
        <pt x="768" y="1510" on="1"/>
        <pt x="754" y="1353" on="1"/>
        <pt x="487" y="1383" on="1"/>
        <pt x="422" y="1138" on="0"/>
        <pt x="373" y="935" on="1"/>
        <pt x="718" y="928" on="1"/>
        <pt x="706" y="50" on="1"/>
        <pt x="371" y="60" on="1"/>
        <pt x="358" y="-103" on="1"/>
        <pt x="234" y="-106" on="1"/>
        <pt x="219" y="605" on="1"/>
        <pt x="186" y="524" on="0"/>
        <pt x="127" y="417" on="1"/>
        <pt x="78" y="465" on="0"/>
      </contour>
      <contour>
        <pt x="564" y="183" on="1"/>
        <pt x="551" y="783" on="1"/>
        <pt x="364" y="820" on="1"/>
        <pt x="368" y="215" on="1"/>
      </contour>
      <contour>
        <pt x="1430" y="550" on="1"/>
        <pt x="1752" y="546" on="1"/>
        <pt x="1789" y="774" on="1"/>
        <pt x="1455" y="786" on="1"/>
        <pt x="1447" y="734" on="0"/>
      </contour>
      <contour>
        <pt x="1754" y="1154" on="1"/>
        <pt x="1470" y="1142" on="1"/>
        <pt x="1461" y="916" on="1"/>
        <pt x="1787" y="900" on="1"/>
      </contour>
      <contour>
        <pt x="1303" y="570" on="1"/>
        <pt x="1310" y="634" on="0"/>
        <pt x="1314" y="780" on="1"/>
        <pt x="1001" y="797" on="1"/>
        <pt x="1012" y="569" on="1"/>
      </contour>
      <contour>
        <pt x="983" y="902" on="1"/>
        <pt x="1291" y="935" on="1"/>
        <pt x="1301" y="1137" on="1"/>
        <pt x="976" y="1155" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          19 17 17 6 6 10
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 5 values pushed */
          11 67 60 11 59
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 8 values pushed */
          68 68 74 27 32 32 25 34
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 10 values pushed */
          15 21 21 23 13 16 13 13 8 66
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 4 values pushed */
          74 1 74 30
          PUSHW[ ]	/* 1 value pushed */
          347
          PUSHB[ ]	/* 4 values pushed */
          29 29 73 72
          PUSHW[ ]	/* 1 value pushed */
          351
          NPUSHB[ ]	/* 12 values pushed */
          35 42 42 35 43 3 3 35 23 25 25 47
          PUSHW[ ]	/* 1 value pushed */
          349
          NPUSHB[ ]	/* 29 values pushed */
          55 16 11 160 11 2 15 35 31 35 79 35 175 35 4 11 3 11 74 35 55 55 35 74 11
          4 78 50 38
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 7 values pushed */
          43 16 43 43 58 45 49
          PUSHW[ ]	/* 1 value pushed */
          349
          NPUSHB[ ]	/* 13 values pushed */
          50 64 53 36 36 50 39 39 50 51 36 57 36
          PUSHW[ ]	/* 4 values pushed */
          -16 53 36 308
          PUSHB[ ]	/* 6 values pushed */
          89 53 53 19 3 25
          PUSHW[ ]	/* 4 values pushed */
          -16 23 25 313
          NPUSHB[ ]	/* 9 values pushed */
          89 23 23 19 50 50 48 58 48
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 40 values pushed */
          89 21 27 27 19 29 29 30 32 15 15 17 4 30 1 64 30 1 30 30 13 35 0 11 16
          11 2 11 11 11 35 0 35 16 35 2 22 3 72 35
          PUSHW[ ]	/* 1 value pushed */
          312
          NPUSHB[ ]	/* 14 values pushed */
          89 59 72 62 71 0 71 16 71 2 22 3 73 71
          PUSHW[ ]	/* 1 value pushed */
          312
          PUSHB[ ]	/* 5 values pushed */
          89 66 73 45 57
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 12 values pushed */
          89 65 76 0 76 16 76 2 22 3 0 76
          PUSHW[ ]	/* 1 value pushed */
          312
          PUSHB[ ]	/* 7 values pushed */
          89 8 0 43 39 40 39
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 49 values pushed */
          89 223 72 1 144 72 1 15 72 1 13 111 73 1 128 73 1 31 73 47 73 2 128 0 1
          175 40 1 15 40 1 14 3 58 72 73 45 0 40 40 0 45 73 72 58 6 17 4 17
          PUSHW[ ]	/* 4 values pushed */
          -16 19 17 318
          NPUSHB[ ]	/* 19 values pushed */
          89 223 19 1 15 19 1 27 3 19 64 12 21 72 19 7 3 4 3
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 26 values pushed */
          89 0 4 16 4 2 48 4 64 4 128 4 192 4 4 176 4 240 4 2 63 4 79 4 2
          4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECA4" xMin="3" yMin="-279" xMax="2033" yMax="1685">
      <contour>
        <pt x="732" y="1595" on="1"/>
        <pt x="1841" y="1585" on="1"/>
        <pt x="1820" y="861" on="1"/>
        <pt x="1668" y="864" on="1"/>
        <pt x="1701" y="906" on="1"/>
        <pt x="1338" y="940" on="1"/>
        <pt x="1341" y="646" on="1"/>
        <pt x="2021" y="662" on="1"/>
        <pt x="1997" y="499" on="1"/>
        <pt x="1454" y="516" on="1"/>
        <pt x="1644" y="192" on="0"/>
        <pt x="2033" y="28" on="1"/>
        <pt x="1958" y="-36" on="0"/>
        <pt x="1910" y="-97" on="1"/>
        <pt x="1555" y="106" on="0"/>
        <pt x="1342" y="511" on="1"/>
        <pt x="1345" y="-274" on="1"/>
        <pt x="1197" y="-279" on="1"/>
        <pt x="1210" y="524" on="1"/>
        <pt x="944" y="71" on="0"/>
        <pt x="589" y="-173" on="1"/>
        <pt x="546" y="-90" on="0"/>
        <pt x="468" y="-29" on="1"/>
        <pt x="827" y="165" on="0"/>
        <pt x="1063" y="534" on="1"/>
        <pt x="559" y="517" on="1"/>
        <pt x="529" y="660" on="1"/>
        <pt x="1191" y="637" on="1"/>
        <pt x="1217" y="940" on="1"/>
        <pt x="867" y="938" on="1"/>
        <pt x="875" y="833" on="1"/>
        <pt x="709" y="825" on="1"/>
      </contour>
      <contour>
        <pt x="3" y="721" on="1"/>
        <pt x="278" y="1104" on="0"/>
        <pt x="422" y="1685" on="1"/>
        <pt x="593" y="1647" on="1"/>
        <pt x="501" y="1368" on="0"/>
        <pt x="400" y="1149" on="1"/>
        <pt x="401" y="-279" on="1"/>
        <pt x="251" y="-268" on="1"/>
        <pt x="245" y="853" on="1"/>
        <pt x="193" y="674" on="0"/>
        <pt x="69" y="544" on="1"/>
        <pt x="58" y="653" on="0"/>
      </contour>
      <contour>
        <pt x="1681" y="1456" on="1"/>
        <pt x="868" y="1476" on="1"/>
        <pt x="865" y="1038" on="1"/>
        <pt x="1683" y="1045" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 2 values pushed */
          34 352
          NPUSHB[ ]	/* 9 values pushed */
          35 35 38 13 11 11 8 8 2
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 8 values pushed */
          3 47 3 20 22 22 38 9
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 3 values pushed */
          9 6 16
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 8 values pushed */
          17 27 24 16 24 17 46 30
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 14 values pushed */
          31 25 25 31 38 3 17 31 31 17 3 3 49 38
          PUSHW[ ]	/* 1 value pushed */
          351
          NPUSHB[ ]	/* 12 values pushed */
          39 64 42 32 32 39 37 40 35 42 42 32
          PUSHW[ ]	/* 1 value pushed */
          319
          PUSHB[ ]	/* 6 values pushed */
          89 42 42 13 45 22
          PUSHW[ ]	/* 4 values pushed */
          -16 20 22 310
          NPUSHB[ ]	/* 43 values pushed */
          89 20 20 13 39 39 17 64 35 43 72 223 17 239 17 2 2 15 17 31 17 2 20 3 17
          64 28 32 72 17 64 11 15 72 17 17 13 18 15 9 25 26 25
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 11 values pushed */
          89 6 3 31 3 31 26 5 29 46 29
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 13 values pushed */
          89 15 46 1 12 3 26 46 26 46 11 0 11
          PUSHW[ ]	/* 4 values pushed */
          -16 13 11 316
          NPUSHB[ ]	/* 14 values pushed */
          89 143 13 1 15 13 191 13 2 16 3 13 0 45
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 35 34
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 29 values pushed */
          12 15 72 34 34 0 0 16 0 32 0 240 0 4 0 0 48 0 64 0 3 112 0 176 0
          240 0 3 0
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 9 values pushed */
          45 48 72 63 0 79 0 2 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECA5" xMin="11" yMin="-283" xMax="1918" yMax="1623">
      <contour>
        <pt x="1030" y="1471" on="1"/>
        <pt x="1911" y="1449" on="1"/>
        <pt x="1918" y="-202" on="1"/>
        <pt x="1772" y="-206" on="1"/>
        <pt x="1786" y="-13" on="1"/>
        <pt x="1202" y="-30" on="1"/>
        <pt x="1212" y="-209" on="1"/>
        <pt x="1035" y="-208" on="1"/>
      </contour>
      <contour>
        <pt x="1787" y="1289" on="1"/>
        <pt x="1207" y="1302" on="1"/>
        <pt x="1194" y="139" on="1"/>
        <pt x="1785" y="141" on="1"/>
      </contour>
      <contour>
        <pt x="11" y="269" on="1"/>
        <pt x="239" y="579" on="0"/>
        <pt x="375" y="977" on="1"/>
        <pt x="53" y="944" on="1"/>
        <pt x="41" y="1076" on="1"/>
        <pt x="432" y="1089" on="1"/>
        <pt x="417" y="1429" on="1"/>
        <pt x="267" y="1369" on="0"/>
        <pt x="121" y="1353" on="1"/>
        <pt x="82" y="1434" on="0"/>
        <pt x="62" y="1486" on="1"/>
        <pt x="491" y="1553" on="0"/>
        <pt x="869" y="1623" on="1"/>
        <pt x="905" y="1486" on="1"/>
        <pt x="750" y="1457" on="0"/>
        <pt x="557" y="1443" on="1"/>
        <pt x="560" y="1094" on="1"/>
        <pt x="956" y="1093" on="1"/>
        <pt x="944" y="950" on="1"/>
        <pt x="566" y="948" on="1"/>
        <pt x="561" y="696" on="1"/>
        <pt x="635" y="764" on="1"/>
        <pt x="782" y="656" on="0"/>
        <pt x="962" y="479" on="1"/>
        <pt x="853" y="357" on="1"/>
        <pt x="702" y="521" on="0"/>
        <pt x="581" y="634" on="1"/>
        <pt x="582" y="-283" on="1"/>
        <pt x="435" y="-260" on="1"/>
        <pt x="399" y="670" on="1"/>
        <pt x="296" y="373" on="0"/>
        <pt x="116" y="117" on="1"/>
        <pt x="62" y="202" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          11 2
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 15 values pushed */
          3 36 35 24 25 35 30 25 25 30 35 3 39 10 6
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 9 values pushed */
          7 3 7 3 7 46 32 28 39
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 44 values pushed */
          40 64 20 22 22 40 43 12 15 15 12 12 17 14 40 223 40 1 123 40 1 40 64 28 34
          72 15 40 1 27 2 40 64 19 26 72 40 64 11 16 72 40 43 12
          PUSHW[ ]	/* 1 value pushed */
          320
          PUSHB[ ]	/* 6 values pushed */
          89 43 43 5 25 35
          PUSHW[ ]	/* 4 values pushed */
          -16 36 35 309
          NPUSHB[ ]	/* 13 values pushed */
          89 36 36 33 38 32 32 32 12 15 72 33 32
          PUSHW[ ]	/* 1 value pushed */
          304
          PUSHB[ ]	/* 7 values pushed */
          89 33 16 31 15 16 15
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 7 values pushed */
          89 28 16 16 20 20 22
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 8 values pushed */
          89 20 20 27 18 25 24 25
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 0 9
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 13 values pushed */
          89 48 0 1 0 0 176 24 1 144 24 1 24
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 37 values pushed */
          24 29 72 15 24 95 24 111 24 3 13 24 3 47 7 143 7 239 7 255 7 4 15 7 1
          16 3 7 64 28 32 72 7 10 64 5 10
          PUSHW[ ]	/* 1 value pushed */
          315
          PUSHB[ ]	/* 5 values pushed */
          89 255 5 1 5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECB7" xMin="49" yMin="-275" xMax="1922" yMax="1718">
      <contour>
        <pt x="1176" y="896" on="1"/>
        <pt x="1402" y="908" on="1"/>
        <pt x="1300" y="825" on="0"/>
        <pt x="1203" y="733" on="1"/>
        <pt x="1922" y="715" on="1"/>
        <pt x="1906" y="570" on="1"/>
        <pt x="1272" y="-100" on="0"/>
        <pt x="189" y="-275" on="1"/>
        <pt x="166" y="-203" on="0"/>
        <pt x="129" y="-150" on="1"/>
        <pt x="591" y="-83" on="0"/>
        <pt x="1009" y="120" on="1"/>
        <pt x="917" y="171" on="0"/>
        <pt x="828" y="287" on="1"/>
        <pt x="933" y="389" on="1"/>
        <pt x="1036" y="254" on="0"/>
        <pt x="1116" y="171" on="1"/>
        <pt x="1476" y="354" on="0"/>
        <pt x="1691" y="575" on="1"/>
        <pt x="1035" y="601" on="1"/>
        <pt x="664" y="308" on="0"/>
        <pt x="297" y="170" on="1"/>
        <pt x="239" y="231" on="0"/>
        <pt x="196" y="300" on="1"/>
        <pt x="758" y="510" on="0"/>
      </contour>
      <contour>
        <pt x="883" y="1685" on="1"/>
        <pt x="1070" y="1718" on="1"/>
        <pt x="999" y="1609" on="0"/>
        <pt x="881" y="1497" on="1"/>
        <pt x="1812" y="1497" on="1"/>
        <pt x="1827" y="1365" on="1"/>
        <pt x="1121" y="820" on="0"/>
        <pt x="173" y="516" on="1"/>
        <pt x="127" y="598" on="0"/>
        <pt x="49" y="662" on="1"/>
        <pt x="454" y="770" on="0"/>
        <pt x="798" y="924" on="1"/>
        <pt x="740" y="992" on="0"/>
        <pt x="623" y="1132" on="1"/>
        <pt x="730" y="1195" on="1"/>
        <pt x="853" y="1084" on="0"/>
        <pt x="939" y="962" on="1"/>
        <pt x="1304" y="1134" on="0"/>
        <pt x="1603" y="1348" on="1"/>
        <pt x="740" y="1336" on="1"/>
        <pt x="518" y="1170" on="0"/>
        <pt x="237" y="1018" on="1"/>
        <pt x="197" y="1064" on="0"/>
        <pt x="124" y="1145" on="1"/>
        <pt x="575" y="1399" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          11 16 16 18 9 14
          PUSHW[ ]	/* 3 values pushed */
          -16 14 346
          NPUSHB[ ]	/* 12 values pushed */
          13 13 18 38 18 7 9 9 5 34 28 25
          PUSHW[ ]	/* 1 value pushed */
          362
          PUSHB[ ]	/* 5 values pushed */
          26 3 19 21 0
          PUSHW[ ]	/* 1 value pushed */
          362
          NPUSHB[ ]	/* 24 values pushed */
          1 36 41 41 43 34 43 30 26 16 1 16 26 1 30 30 1 26 3 5 5 51 44 39
          PUSHW[ ]	/* 3 values pushed */
          -16 39 344
          NPUSHB[ ]	/* 20 values pushed */
          38 64 46 48 48 38 21 23 23 32 32 34 34 38 41 36 36 34 44 34
          PUSHW[ ]	/* 4 values pushed */
          -16 32 34 314
          NPUSHB[ ]	/* 10 values pushed */
          89 15 32 47 32 2 13 3 32 48
          PUSHW[ ]	/* 4 values pushed */
          -16 46 48 313
          NPUSHB[ ]	/* 13 values pushed */
          89 15 46 1 15 3 46 46 28 30 44 28 44
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 45 values pushed */
          89 38 64 39 160 39 176 39 3 39 39 28 32 25 1 25 25 0 28 16 28 80 28 3 96
          28 192 28 208 28 3 48 28 112 28 176 28 3 15 28 1 13 3 28 23
          PUSHW[ ]	/* 4 values pushed */
          -16 21 23 313
          NPUSHB[ ]	/* 19 values pushed */
          89 15 21 31 21 47 21 3 13 3 21 13 14 16 11 11 9 19 9
          PUSHW[ ]	/* 4 values pushed */
          -16 7 9 316
          NPUSHB[ ]	/* 23 values pushed */
          89 159 7 1 7 64 11 15 72 7 5 19 96 0 160 0 2 0 0 1 24 3 0
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 8 values pushed */
          17 21 72 0 0 19 3 19
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 7 values pushed */
          89 112 3 240 3 2 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECB8" xMin="37" yMin="-283" xMax="2022" yMax="1700">
      <contour>
        <pt x="150" y="761" on="1"/>
        <pt x="293" y="760" on="1"/>
        <pt x="282" y="16" on="1"/>
        <pt x="349" y="59" on="0"/>
        <pt x="450" y="44" on="1"/>
        <pt x="464" y="971" on="1"/>
        <pt x="278" y="983" on="1"/>
        <pt x="287" y="906" on="1"/>
        <pt x="132" y="919" on="1"/>
        <pt x="164" y="1574" on="1"/>
        <pt x="798" y="1580" on="1"/>
        <pt x="823" y="955" on="1"/>
        <pt x="576" y="963" on="1"/>
        <pt x="599" y="637" on="1"/>
        <pt x="791" y="639" on="1"/>
        <pt x="800" y="498" on="1"/>
        <pt x="583" y="497" on="1"/>
        <pt x="604" y="60" on="1"/>
        <pt x="715" y="119" on="0"/>
        <pt x="865" y="105" on="1"/>
        <pt x="829" y="69" on="0"/>
        <pt x="849" y="-32" on="1"/>
        <pt x="468" y="-86" on="0"/>
        <pt x="91" y="-150" on="1"/>
        <pt x="37" y="4" on="1"/>
        <pt x="77" y="-8" on="0"/>
        <pt x="134" y="6" on="1"/>
      </contour>
      <contour>
        <pt x="836" y="1079" on="1"/>
        <pt x="1036" y="1349" on="0"/>
        <pt x="1182" y="1700" on="1"/>
        <pt x="1332" y="1659" on="1"/>
        <pt x="1286" y="1571" on="0"/>
        <pt x="1231" y="1492" on="1"/>
        <pt x="1882" y="1480" on="1"/>
        <pt x="1887" y="1336" on="1"/>
        <pt x="1766" y="1090" on="0"/>
        <pt x="1528" y="909" on="1"/>
        <pt x="1731" y="759" on="0"/>
        <pt x="2022" y="679" on="1"/>
        <pt x="1979" y="617" on="0"/>
        <pt x="1951" y="517" on="1"/>
        <pt x="1655" y="653" on="0"/>
        <pt x="1402" y="795" on="1"/>
        <pt x="1205" y="614" on="0"/>
        <pt x="874" y="487" on="1"/>
        <pt x="853" y="547" on="0"/>
        <pt x="822" y="624" on="1"/>
        <pt x="1099" y="751" on="0"/>
        <pt x="1293" y="886" on="1"/>
        <pt x="1178" y="1015" on="0"/>
        <pt x="1079" y="1209" on="1"/>
        <pt x="1003" y="1068" on="0"/>
        <pt x="927" y="990" on="1"/>
        <pt x="857" y="1059" on="0"/>
      </contour>
      <contour>
        <pt x="966" y="515" on="1"/>
        <pt x="1833" y="520" on="1"/>
        <pt x="1846" y="-268" on="1"/>
        <pt x="1675" y="-255" on="1"/>
        <pt x="1675" y="-173" on="1"/>
        <pt x="1119" y="-188" on="1"/>
        <pt x="1123" y="-283" on="1"/>
        <pt x="961" y="-261" on="1"/>
      </contour>
      <contour>
        <pt x="1674" y="365" on="1"/>
        <pt x="1125" y="349" on="1"/>
        <pt x="1116" y="-34" on="1"/>
        <pt x="1692" y="-38" on="1"/>
      </contour>
      <contour>
        <pt x="657" y="1096" on="1"/>
        <pt x="671" y="1429" on="1"/>
        <pt x="300" y="1451" on="1"/>
        <pt x="277" y="1111" on="1"/>
      </contour>
      <contour>
        <pt x="1695" y="1343" on="1"/>
        <pt x="1169" y="1333" on="1"/>
        <pt x="1162" y="1352" on="0"/>
        <pt x="1150" y="1319" on="1"/>
        <pt x="1258" y="1144" on="0"/>
        <pt x="1427" y="993" on="1"/>
        <pt x="1614" y="1171" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 37 values pushed */
          32 73 71 52 73 50 50 30 52 36 42 42 34 44 48 75 75 70 46 21 40 38 38 34 44
          46 46 15 21 61 17 23 24 24 8 65 56
          PUSHW[ ]	/* 4 values pushed */
          352 57 29 352
          PUSHB[ ]	/* 3 values pushed */
          30 64 60
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 6 values pushed */
          61 52 27 27 11 15
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 3 values pushed */
          66 13 17
          PUSHW[ ]	/* 1 value pushed */
          350
          NPUSHB[ ]	/* 16 values pushed */
          4 4 66 61 57 4 70 26 70 30 2 34 34 78 69 7
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 3 values pushed */
          8 8 2
          PUSHW[ ]	/* 1 value pushed */
          348
          NPUSHB[ ]	/* 13 values pushed */
          64 26 61 61 57 57 59 75 48 48 46 71 46
          PUSHW[ ]	/* 4 values pushed */
          -16 44 46 314
          NPUSHB[ ]	/* 10 values pushed */
          89 42 36 36 34 44 44 40 40 38
          PUSHW[ ]	/* 1 value pushed */
          319
          PUSHB[ ]	/* 7 values pushed */
          89 50 73 73 71 52 27
          PUSHW[ ]	/* 4 values pushed */
          -16 52 27 310
          NPUSHB[ ]	/* 21 values pushed */
          89 15 40 1 11 3 40 52 40 52 59 68 17 4 2 26 4 24 19 23 24
          PUSHW[ ]	/* 4 values pushed */
          317 89 23 -64
          PUSHB[ ]	/* 8 values pushed */
          11 15 72 23 23 59 64 59
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 19 21
          PUSHW[ ]	/* 1 value pushed */
          315
          PUSHB[ ]	/* 3 values pushed */
          89 54 63
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 13 16
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 9 values pushed */
          89 0 8 6 64 12 6 69 6
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 5 values pushed */
          89 34 71 32 71
          PUSHW[ ]	/* 4 values pushed */
          313 89 19 -64
          NPUSHB[ ]	/* 32 values pushed */
          11 15 72 19 16 0 13 48 13 2 12 3 19 54 13 69 32 32 69 13 54 19 5 9 64
          64 11 15 72 64 9 68
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 3 values pushed */
          89 30 29
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 21 values pushed */
          12 15 72 29 29 63 9 79 9 2 48 9 128 9 192 9 3 240 9 1 9
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11101]	/* MoveDirectRelPt */
          MDRP[00110]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01100]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECBF" xMin="38" yMin="-265" xMax="2022" yMax="1582">
      <contour>
        <pt x="299" y="1582" on="1"/>
        <pt x="1784" y="1567" on="1"/>
        <pt x="1764" y="471" on="1"/>
        <pt x="1616" y="503" on="1"/>
        <pt x="1622" y="561" on="1"/>
        <pt x="468" y="578" on="1"/>
        <pt x="468" y="470" on="1"/>
        <pt x="279" y="470" on="1"/>
      </contour>
      <contour>
        <pt x="713" y="477" on="1"/>
        <pt x="844" y="361" on="1"/>
        <pt x="517" y="-11" on="0"/>
        <pt x="160" y="-257" on="1"/>
        <pt x="107" y="-228" on="0"/>
        <pt x="38" y="-155" on="1"/>
        <pt x="399" y="127" on="0"/>
      </contour>
      <contour>
        <pt x="1305" y="473" on="1"/>
        <pt x="1664" y="162" on="0"/>
        <pt x="2022" y="-121" on="1"/>
        <pt x="1982" y="-142" on="0"/>
        <pt x="1862" y="-265" on="1"/>
        <pt x="1554" y="49" on="0"/>
        <pt x="1194" y="386" on="1"/>
      </contour>
      <contour>
        <pt x="1607" y="734" on="1"/>
        <pt x="1614" y="1436" on="1"/>
        <pt x="478" y="1431" on="1"/>
        <pt x="462" y="714" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          22 2
          PUSHW[ ]	/* 6 values pushed */
          355 3 15 -16 15 346
          PUSHB[ ]	/* 4 values pushed */
          21 8 16 8
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 3 values pushed */
          9 25 6
          PUSHW[ ]	/* 1 value pushed */
          355
          NPUSHB[ ]	/* 9 values pushed */
          7 7 21 3 3 13 19 16 19
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 5 values pushed */
          9 17 17 27 11
          PUSHW[ ]	/* 3 values pushed */
          -16 11 352
          NPUSHB[ ]	/* 52 values pushed */
          64 13 17 19 3 3 21 21 15 9 8 8 15 0 15 16 15 2 19 15 19 15 5 13 15
          11 31 11 63 11 79 11 175 11 207 11 255 11 7 11 11 5 0 7 1 11 3 7 7 5
          25 5
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 4 values pushed */
          89 25 0 24
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 9 values pushed */
          89 47 0 63 0 79 0 3 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECC1" xMin="27" yMin="-273" xMax="2058" yMax="1715">
      <contour>
        <pt x="1062" y="1417" on="1"/>
        <pt x="1071" y="775" on="1"/>
        <pt x="1063" y="34" on="0"/>
        <pt x="736" y="-273" on="1"/>
        <pt x="665" y="-210" on="0"/>
        <pt x="586" y="-132" on="1"/>
        <pt x="935" y="143" on="0"/>
        <pt x="933" y="710" on="1"/>
        <pt x="914" y="1579" on="1"/>
        <pt x="1648" y="1567" on="1"/>
        <pt x="1665" y="80" on="1"/>
        <pt x="1661" y="-46" on="0"/>
        <pt x="1744" y="-22" on="1"/>
        <pt x="1772" y="-32" on="1"/>
        <pt x="1846" y="-49" on="0"/>
        <pt x="1880" y="60" on="1"/>
        <pt x="1882" y="217" on="0"/>
        <pt x="1877" y="407" on="1"/>
        <pt x="1950" y="379" on="0"/>
        <pt x="2058" y="336" on="1"/>
        <pt x="2043" y="131" on="0"/>
        <pt x="2024" y="38" on="1"/>
        <pt x="1977" y="-197" on="0"/>
        <pt x="1794" y="-207" on="1"/>
        <pt x="1704" y="-179" on="1"/>
        <pt x="1513" y="-173" on="0"/>
        <pt x="1489" y="20" on="1"/>
        <pt x="1490" y="1431" on="1"/>
      </contour>
      <contour>
        <pt x="27" y="457" on="1"/>
        <pt x="262" y="793" on="0"/>
        <pt x="331" y="1162" on="1"/>
        <pt x="56" y="1187" on="1"/>
        <pt x="39" y="1300" on="1"/>
        <pt x="356" y="1301" on="1"/>
        <pt x="353" y="1705" on="1"/>
        <pt x="492" y="1715" on="1"/>
        <pt x="486" y="1301" on="1"/>
        <pt x="771" y="1323" on="1"/>
        <pt x="788" y="1176" on="1"/>
        <pt x="521" y="1169" on="1"/>
        <pt x="510" y="846" on="1"/>
        <pt x="565" y="918" on="1"/>
        <pt x="728" y="781" on="0"/>
        <pt x="812" y="680" on="1"/>
        <pt x="705" y="567" on="1"/>
        <pt x="587" y="724" on="0"/>
        <pt x="490" y="799" on="1"/>
        <pt x="486" y="-249" on="1"/>
        <pt x="360" y="-270" on="1"/>
        <pt x="358" y="808" on="1"/>
        <pt x="257" y="487" on="0"/>
        <pt x="78" y="292" on="1"/>
        <pt x="66" y="364" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          38 31 38 47 44 43 43 7 47 31 28 10
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 5 values pushed */
          26 3 5 5 1
          PUSHW[ ]	/* 4 values pushed */
          354 7 19 352
          NPUSHB[ ]	/* 15 values pushed */
          26 7 48 17 17 54 48 51 28 28 36 40 33 30 47
          PUSHW[ ]	/* 1 value pushed */
          351
          NPUSHB[ ]	/* 13 values pushed */
          64 48 49 46 40 40 41 41 43 39 31 32 31
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 13 values pushed */
          89 36 0 32 1 11 3 32 32 12 8 51 28
          PUSHW[ ]	/* 7 values pushed */
          321 89 43 -16 44 43 308
          NPUSHB[ ]	/* 12 values pushed */
          89 51 44 51 44 24 0 48 48 5 3 5
          PUSHW[ ]	/* 4 values pushed */
          -16 3 5 313
          NPUSHB[ ]	/* 11 values pushed */
          89 3 64 11 16 72 3 3 24 12 24
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 12 values pushed */
          89 19 17 17 12 64 31 34 72 12 8 0
          PUSHW[ ]	/* 4 values pushed */
          316 89 34 -64
          NPUSHB[ ]	/* 13 values pushed */
          11 15 72 34 34 47 8 63 8 79 8 3 8
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01110]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECCA" xMin="9" yMin="-230" xMax="2022" yMax="1665">
      <contour>
        <pt x="590" y="1048" on="1"/>
        <pt x="1956" y="1046" on="1"/>
        <pt x="1958" y="926" on="1"/>
        <pt x="1500" y="911" on="1"/>
        <pt x="1538" y="365" on="1"/>
        <pt x="1523" y="239" on="0"/>
        <pt x="1589" y="272" on="1"/>
        <pt x="1699" y="242" on="1"/>
        <pt x="1787" y="251" on="0"/>
        <pt x="1796" y="347" on="1"/>
        <pt x="1836" y="440" on="0"/>
        <pt x="1827" y="572" on="1"/>
        <pt x="1881" y="559" on="0"/>
        <pt x="1992" y="532" on="1"/>
        <pt x="1947" y="346" on="0"/>
        <pt x="1940" y="304" on="1"/>
        <pt x="1924" y="121" on="0"/>
        <pt x="1715" y="118" on="1"/>
        <pt x="1546" y="132" on="1"/>
        <pt x="1359" y="139" on="0"/>
        <pt x="1374" y="345" on="1"/>
        <pt x="1356" y="894" on="1"/>
        <pt x="1088" y="929" on="1"/>
        <pt x="1064" y="733" on="0"/>
        <pt x="1075" y="603" on="1"/>
        <pt x="1042" y="279" on="0"/>
        <pt x="665" y="42" on="1"/>
        <pt x="612" y="133" on="0"/>
        <pt x="561" y="202" on="1"/>
        <pt x="886" y="357" on="0"/>
        <pt x="919" y="650" on="1"/>
        <pt x="910" y="733" on="0"/>
        <pt x="906" y="917" on="1"/>
        <pt x="555" y="932" on="1"/>
      </contour>
      <contour>
        <pt x="862" y="-62" on="1"/>
        <pt x="1313" y="-59" on="1"/>
        <pt x="2022" y="-41" on="1"/>
        <pt x="1976" y="-136" on="0"/>
        <pt x="1945" y="-217" on="1"/>
        <pt x="1314" y="-220" on="1"/>
        <pt x="841" y="-208" on="1"/>
        <pt x="506" y="-206" on="0"/>
        <pt x="352" y="47" on="1"/>
        <pt x="271" y="-36" on="0"/>
        <pt x="102" y="-230" on="1"/>
        <pt x="9" y="-63" on="1"/>
        <pt x="196" y="101" on="0"/>
        <pt x="278" y="170" on="1"/>
        <pt x="287" y="846" on="1"/>
        <pt x="27" y="864" on="1"/>
        <pt x="32" y="984" on="1"/>
        <pt x="426" y="975" on="1"/>
        <pt x="434" y="129" on="1"/>
        <pt x="554" y="-69" on="0"/>
      </contour>
      <contour>
        <pt x="696" y="1573" on="1"/>
        <pt x="1837" y="1569" on="1"/>
        <pt x="1836" y="1437" on="1"/>
        <pt x="680" y="1435" on="1"/>
      </contour>
      <contour>
        <pt x="293" y="1665" on="1"/>
        <pt x="371" y="1551" on="0"/>
        <pt x="560" y="1268" on="1"/>
        <pt x="416" y="1204" on="1"/>
        <pt x="269" y="1456" on="0"/>
        <pt x="134" y="1586" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          2 56 57 33 49 56 36 49 63 44 45 45 63 36 4
          PUSHW[ ]	/* 4 values pushed */
          353 20 22 352
          PUSHB[ ]	/* 7 values pushed */
          32 32 30 26 28 28 24
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 6 values pushed */
          30 57 33 61 16 61
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 3 values pushed */
          60 42 52
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 6 values pushed */
          47 60 58 36 2 13
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 9 values pushed */
          47 30 20 3 63 11 11 65 58
          PUSHW[ ]	/* 3 values pushed */
          -16 58 348
          PUSHB[ ]	/* 4 values pushed */
          64 63 63 58
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 22 values pushed */
          11 15 72 58 58 54 60 0 61 16 61 32 61 3 12 3 61 61 57 0 54 57
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 21 values pushed */
          89 28 15 26 1 16 3 26 32 17 26 72 26 26 18 13 11 11 6 18 6
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 3 values pushed */
          89 50 49
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 6 values pushed */
          89 22 3 33 0 33
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 32 values pushed */
          89 80 18 1 18 50 0 0 50 18 3 39 111 54 1 95 54 1 15 54 31 54 47 54 79
          54 4 11 3 54 44 45
          PUSHW[ ]	/* 1 value pushed */
          320
          PUSHB[ ]	/* 8 values pushed */
          89 44 44 39 36 35 39 35
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 11 values pushed */
          89 38 111 39 1 208 39 224 39 2 39
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01110]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECD1" xMin="0" yMin="-286" xMax="2037" yMax="1698">
      <contour>
        <pt x="53" y="874" on="1"/>
        <pt x="944" y="845" on="1"/>
        <pt x="943" y="1698" on="1"/>
        <pt x="1100" y="1685" on="1"/>
        <pt x="1095" y="868" on="1"/>
        <pt x="2006" y="844" on="1"/>
        <pt x="1989" y="716" on="1"/>
        <pt x="1332" y="709" on="1"/>
        <pt x="1328" y="82" on="1"/>
        <pt x="1342" y="2" on="0"/>
        <pt x="1385" y="-26" on="1"/>
        <pt x="1383" y="-97" on="0"/>
        <pt x="1501" y="-83" on="1"/>
        <pt x="1674" y="-70" on="1"/>
        <pt x="1841" y="-93" on="0"/>
        <pt x="1827" y="23" on="1"/>
        <pt x="1859" y="126" on="0"/>
        <pt x="1873" y="296" on="1"/>
        <pt x="1956" y="279" on="0"/>
        <pt x="2037" y="267" on="1"/>
        <pt x="2019" y="57" on="0"/>
        <pt x="1988" y="-59" on="1"/>
        <pt x="1967" y="-145" on="0"/>
        <pt x="1908" y="-164" on="1"/>
        <pt x="1839" y="-233" on="0"/>
        <pt x="1695" y="-231" on="1"/>
        <pt x="1462" y="-232" on="1"/>
        <pt x="1291" y="-236" on="0"/>
        <pt x="1222" y="-160" on="1"/>
        <pt x="1200" y="-84" on="0"/>
        <pt x="1176" y="55" on="1"/>
        <pt x="1167" y="699" on="1"/>
        <pt x="790" y="718" on="1"/>
        <pt x="782" y="310" on="0"/>
        <pt x="633" y="98" on="1"/>
        <pt x="481" y="-138" on="0"/>
        <pt x="126" y="-286" on="1"/>
        <pt x="76" y="-227" on="0"/>
        <pt x="0" y="-145" on="1"/>
        <pt x="362" y="5" on="0"/>
        <pt x="490" y="197" on="1"/>
        <pt x="648" y="345" on="0"/>
        <pt x="644" y="697" on="1"/>
        <pt x="48" y="718" on="1"/>
      </contour>
      <contour>
        <pt x="1325" y="1088" on="1"/>
        <pt x="1540" y="1299" on="0"/>
        <pt x="1707" y="1544" on="1"/>
        <pt x="1847" y="1443" on="1"/>
        <pt x="1649" y="1219" on="0"/>
        <pt x="1440" y="977" on="1"/>
      </contour>
      <contour>
        <pt x="206" y="1463" on="1"/>
        <pt x="308" y="1563" on="1"/>
        <pt x="514" y="1331" on="0"/>
        <pt x="725" y="1084" on="1"/>
        <pt x="572" y="983" on="1"/>
        <pt x="383" y="1228" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          43 36 38 38 43 50 6 46 16 46
          NPUSHW[ ]	/* 15 values pushed */
          351 47 49 -16 49 347 44 8 354 30 4 355 1 32 354
          PUSHB[ ]	/* 4 values pushed */
          42 54 16 54
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 6 values pushed */
          53 47 53 51 6 19
          PUSHW[ ]	/* 1 value pushed */
          356
          NPUSHB[ ]	/* 10 values pushed */
          42 1 30 44 4 50 17 17 57 51
          PUSHW[ ]	/* 3 values pushed */
          -16 51 346
          PUSHB[ ]	/* 3 values pushed */
          64 50 38
          PUSHW[ ]	/* 4 values pushed */
          -16 36 38 314
          PUSHB[ ]	/* 6 values pushed */
          89 36 36 26 12 26
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 65 values pushed */
          89 19 17 17 12 64 14 27 72 12 44 49 53 54 50 51 47 46 207 49 239 49 2 49 54
          51 46 46 51 54 49 4 0 16 2 32 2 48 2 112 2 128 2 5 0 2 96 2 160 2
          176 2 192 2 224 2 6 14 3 2 32 7 43 0 43
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 6 values pushed */
          89 4 79 0 1 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECD3" xMin="46" yMin="-253" xMax="2040" yMax="1709">
      <contour>
        <pt x="53" y="904" on="1"/>
        <pt x="415" y="886" on="1"/>
        <pt x="399" y="1709" on="1"/>
        <pt x="552" y="1691" on="1"/>
        <pt x="567" y="875" on="1"/>
        <pt x="1985" y="896" on="1"/>
        <pt x="1980" y="715" on="1"/>
        <pt x="1112" y="719" on="1"/>
        <pt x="1368" y="191" on="0"/>
        <pt x="2040" y="-10" on="1"/>
        <pt x="1944" y="-123" on="0"/>
        <pt x="1897" y="-192" on="1"/>
        <pt x="1201" y="79" on="0"/>
        <pt x="919" y="744" on="1"/>
        <pt x="559" y="716" on="1"/>
        <pt x="583" y="1" on="1"/>
        <pt x="805" y="84" on="0"/>
        <pt x="1056" y="199" on="1"/>
        <pt x="1054" y="119" on="0"/>
        <pt x="1062" y="51" on="1"/>
        <pt x="818" y="-54" on="0"/>
        <pt x="623" y="-160" on="1"/>
        <pt x="522" y="-196" on="0"/>
        <pt x="457" y="-253" on="1"/>
        <pt x="326" y="-109" on="1"/>
        <pt x="417" y="-51" on="0"/>
        <pt x="396" y="41" on="1"/>
        <pt x="410" y="724" on="1"/>
        <pt x="46" y="732" on="1"/>
      </contour>
      <contour>
        <pt x="687" y="1125" on="1"/>
        <pt x="1174" y="1290" on="0"/>
        <pt x="1638" y="1628" on="1"/>
        <pt x="1735" y="1512" on="1"/>
        <pt x="1291" y="1178" on="0"/>
        <pt x="777" y="972" on="1"/>
        <pt x="740" y="1040" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          19 19 11 15 31 32 32 6 15 23 24 24 26 28 6 28 6 11 9 9 7
          PUSHW[ ]	/* 3 values pushed */
          356 13 -16
          NPUSHB[ ]	/* 11 values pushed */
          13 13 37 26 34 29 29 28 4 1 15
          PUSHW[ ]	/* 1 value pushed */
          355
          PUSHB[ ]	/* 3 values pushed */
          64 26 29
          PUSHW[ ]	/* 4 values pushed */
          -16 34 29 316
          NPUSHB[ ]	/* 14 values pushed */
          89 15 34 1 11 3 34 34 32 11 32 16 31 32
          PUSHW[ ]	/* 1 value pushed */
          312
          PUSHB[ ]	/* 6 values pushed */
          89 15 23 17 17 19
          PUSHW[ ]	/* 1 value pushed */
          322
          PUSHB[ ]	/* 6 values pushed */
          89 14 7 28 0 28
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 36 values pushed */
          89 4 0 32 17 1 17 0 17 0 9 31 48 2 1 2 2 15 31 1 13 0 31 16 31
          64 31 80 31 96 31 5 16 3 31 24
          PUSHW[ ]	/* 4 values pushed */
          -16 23 24 317
          NPUSHB[ ]	/* 10 values pushed */
          89 15 23 1 16 3 23 23 11 9
          PUSHW[ ]	/* 4 values pushed */
          -16 11 9 319
          PUSHB[ ]	/* 7 values pushed */
          89 95 11 111 11 2 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECDA" xMin="35" yMin="-282" xMax="1998" yMax="1720">
      <contour>
        <pt x="35" y="268" on="1"/>
        <pt x="335" y="249" on="1"/>
        <pt x="331" y="1266" on="1"/>
        <pt x="918" y="1261" on="1"/>
        <pt x="925" y="1417" on="1"/>
        <pt x="82" y="1407" on="1"/>
        <pt x="80" y="1539" on="1"/>
        <pt x="934" y="1533" on="1"/>
        <pt x="919" y="1720" on="1"/>
        <pt x="1069" y="1704" on="1"/>
        <pt x="1083" y="1560" on="1"/>
        <pt x="1970" y="1559" on="1"/>
        <pt x="1984" y="1420" on="1"/>
        <pt x="1086" y="1404" on="1"/>
        <pt x="1093" y="1263" on="1"/>
        <pt x="1697" y="1253" on="1"/>
        <pt x="1696" y="242" on="1"/>
        <pt x="1998" y="265" on="1"/>
        <pt x="1989" y="129" on="1"/>
        <pt x="56" y="129" on="1"/>
      </contour>
      <contour>
        <pt x="494" y="230" on="1"/>
        <pt x="1554" y="246" on="1"/>
        <pt x="1538" y="380" on="1"/>
        <pt x="496" y="368" on="1"/>
      </contour>
      <contour>
        <pt x="1558" y="1147" on="1"/>
        <pt x="478" y="1162" on="1"/>
        <pt x="488" y="1010" on="1"/>
        <pt x="1564" y="995" on="1"/>
      </contour>
      <contour>
        <pt x="471" y="755" on="1"/>
        <pt x="1576" y="769" on="1"/>
        <pt x="1567" y="902" on="1"/>
        <pt x="500" y="878" on="1"/>
      </contour>
      <contour>
        <pt x="483" y="487" on="1"/>
        <pt x="1553" y="489" on="1"/>
        <pt x="1567" y="640" on="1"/>
        <pt x="474" y="638" on="1"/>
      </contour>
      <contour>
        <pt x="1178" y="-8" on="1"/>
        <pt x="1265" y="96" on="1"/>
        <pt x="1573" y="6" on="0"/>
        <pt x="1971" y="-135" on="1"/>
        <pt x="1909" y="-277" on="1"/>
        <pt x="1558" y="-127" on="0"/>
      </contour>
      <contour>
        <pt x="747" y="114" on="1"/>
        <pt x="856" y="0" on="1"/>
        <pt x="528" y="-170" on="0"/>
        <pt x="146" y="-282" on="1"/>
        <pt x="118" y="-226" on="0"/>
        <pt x="84" y="-131" on="1"/>
        <pt x="406" y="-46" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 28 values pushed */
          12 5 12 40 39 39 18 16 37 36 36 20 42 43 43 21 20 45 47 47 1 5 19 18 19
          10 7 14
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 7 values pushed */
          3 18 27 29 33 3 16
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 11 values pushed */
          3 1 21 21 50 19 26 28 32 3 20
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 4 values pushed */
          64 1 37 36
          PUSHW[ ]	/* 1 value pushed */
          310
          PUSHB[ ]	/* 8 values pushed */
          89 37 37 42 20 0 0 19
          PUSHW[ ]	/* 1 value pushed */
          310
          NPUSHB[ ]	/* 28 values pushed */
          89 16 0 31 0 1 2 15 0 47 0 159 0 175 0 4 17 0 0 16 0 32 0 3 22
          3 32 23
          PUSHW[ ]	/* 1 value pushed */
          310
          PUSHB[ ]	/* 3 values pushed */
          89 28 35
          PUSHW[ ]	/* 1 value pushed */
          310
          PUSHB[ ]	/* 3 values pushed */
          89 26 31
          PUSHW[ ]	/* 1 value pushed */
          310
          NPUSHB[ ]	/* 89 values pushed */
          89 15 32 47 32 143 32 3 127 32 143 32 255 32 3 0 32 64 32 160 32 176 32 192 32
          5 15 28 63 28 127 28 143 28 4 15 28 143 28 159 28 239 28 4 63 28 127 28 143 28
          255 28 4 16 28 32 28 2 63 26 1 16 26 1 16 26 1 0 26 16 26 32 26 144 26
          4 11 3 32 28 26 32 28 26 3 45 2 2 25
          PUSHW[ ]	/* 1 value pushed */
          310
          NPUSHB[ ]	/* 24 values pushed */
          89 14 2 63 2 1 175 2 1 0 2 128 2 2 11 3 0 2 0 2 6 42 42 43
          PUSHW[ ]	/* 1 value pushed */
          310
          NPUSHB[ ]	/* 13 values pushed */
          89 0 42 16 42 2 14 3 42 45 64 40 39
          PUSHW[ ]	/* 1 value pushed */
          310
          PUSHB[ ]	/* 6 values pushed */
          89 40 40 45 45 47
          PUSHW[ ]	/* 1 value pushed */
          310
          NPUSHB[ ]	/* 11 values pushed */
          89 45 64 11 15 72 45 13 5 6 5
          PUSHW[ ]	/* 1 value pushed */
          310
          NPUSHB[ ]	/* 17 values pushed */
          89 10 6 8 8 111 6 1 63 6 111 6 2 80 6 1 6
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECDB" xMin="25" yMin="-269" xMax="1994" yMax="1702">
      <contour>
        <pt x="270" y="723" on="1"/>
        <pt x="1751" y="736" on="1"/>
        <pt x="1757" y="-268" on="1"/>
        <pt x="1587" y="-269" on="1"/>
        <pt x="1585" y="-139" on="1"/>
        <pt x="424" y="-147" on="1"/>
        <pt x="426" y="-257" on="1"/>
        <pt x="306" y="-242" on="1"/>
      </contour>
      <contour>
        <pt x="35" y="1063" on="1"/>
        <pt x="649" y="1047" on="1"/>
        <pt x="556" y="1166" on="0"/>
        <pt x="494" y="1260" on="1"/>
        <pt x="615" y="1341" on="1"/>
        <pt x="726" y="1202" on="0"/>
        <pt x="805" y="1125" on="1"/>
        <pt x="723" y="1072" on="1"/>
        <pt x="1236" y="1044" on="1"/>
        <pt x="1321" y="1183" on="0"/>
        <pt x="1410" y="1338" on="1"/>
        <pt x="1579" y="1227" on="1"/>
        <pt x="1512" y="1167" on="0"/>
        <pt x="1413" y="1075" on="1"/>
        <pt x="1994" y="1070" on="1"/>
        <pt x="1983" y="897" on="1"/>
        <pt x="25" y="896" on="1"/>
      </contour>
      <contour>
        <pt x="124" y="1479" on="1"/>
        <pt x="1004" y="1468" on="1"/>
        <pt x="941" y="1581" on="0"/>
        <pt x="896" y="1653" on="1"/>
        <pt x="1048" y="1702" on="1"/>
        <pt x="1086" y="1620" on="0"/>
        <pt x="1145" y="1525" on="1"/>
        <pt x="1070" y="1482" on="1"/>
        <pt x="1907" y="1476" on="1"/>
        <pt x="1904" y="1330" on="1"/>
        <pt x="147" y="1321" on="1"/>
      </contour>
      <contour>
        <pt x="441" y="4" on="1"/>
        <pt x="1573" y="-19" on="1"/>
        <pt x="1586" y="243" on="1"/>
        <pt x="445" y="237" on="1"/>
      </contour>
      <contour>
        <pt x="1591" y="576" on="1"/>
        <pt x="456" y="601" on="1"/>
        <pt x="423" y="375" on="1"/>
        <pt x="1588" y="372" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          34 34 19 23 23 2
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 10 values pushed */
          3 43 37 3 31 31 32 18 16 18
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 3 values pushed */
          19 19 21
          PUSHW[ ]	/* 1 value pushed */
          357
          PUSHB[ ]	/* 8 values pushed */
          16 32 14 14 26 15 26 29
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 9 values pushed */
          28 35 35 11 24 15 9 9 12
          PUSHW[ ]	/* 6 values pushed */
          -16 12 347 11 16 -16
          NPUSHB[ ]	/* 16 values pushed */
          3 16 28 11 11 28 16 3 4 45 7 24 24 42 36 6
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 14 values pushed */
          64 7 7 7 15 3 1 11 3 3 3 5 36 5
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 13 values pushed */
          89 19 18 11 12 18 12 18 12 35 8 8 24
          PUSHW[ ]	/* 1 value pushed */
          315
          PUSHB[ ]	/* 6 values pushed */
          89 21 15 8 0 41
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 42 39
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 28 values pushed */
          89 63 0 79 0 2 8 0 42 42 0 8 3 25 15 36 31 36 47 36 79 36 4 12 3
          36 25 35
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 22 values pushed */
          89 28 80 29 112 29 2 29 29 32 255 25 1 47 25 1 63 25 79 25 2 25
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECE4" xMin="151" yMin="-290" xMax="1899" yMax="1715">
      <contour>
        <pt x="151" y="1254" on="1"/>
        <pt x="947" y="1262" on="1"/>
        <pt x="925" y="1715" on="1"/>
        <pt x="1104" y="1698" on="1"/>
        <pt x="1109" y="1271" on="1"/>
        <pt x="1884" y="1271" on="1"/>
        <pt x="1899" y="355" on="1"/>
        <pt x="1729" y="364" on="1"/>
        <pt x="1734" y="481" on="1"/>
        <pt x="1107" y="448" on="1"/>
        <pt x="1100" y="-278" on="1"/>
        <pt x="933" y="-290" on="1"/>
        <pt x="952" y="460" on="1"/>
        <pt x="335" y="477" on="1"/>
        <pt x="329" y="371" on="1"/>
        <pt x="165" y="369" on="1"/>
      </contour>
      <contour>
        <pt x="1743" y="1104" on="1"/>
        <pt x="1113" y="1109" on="1"/>
        <pt x="1110" y="611" on="1"/>
        <pt x="1708" y="615" on="1"/>
      </contour>
      <contour>
        <pt x="351" y="602" on="1"/>
        <pt x="940" y="596" on="1"/>
        <pt x="935" y="1137" on="1"/>
        <pt x="334" y="1112" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          19 6
          PUSHW[ ]	/* 1 value pushed */
          355
          PUSHB[ ]	/* 4 values pushed */
          7 18 4 10
          PUSHW[ ]	/* 1 value pushed */
          356
          NPUSHB[ ]	/* 11 values pushed */
          11 21 1 11 7 11 7 11 25 20 14
          PUSHW[ ]	/* 1 value pushed */
          355
          NPUSHB[ ]	/* 11 values pushed */
          64 15 15 15 9 13 7 7 13 20 13
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 60 values pushed */
          89 18 11 20 1 11 20 171 11 1 223 11 1 2 95 11 111 11 127 11 207 11 4 11 64
          12 15 72 11 17 23 160 2 1 112 2 128 2 2 111 2 1 0 2 32 2 48 2 96 2
          112 2 160 2 176 2 7 14 3 2
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 8 values pushed */
          27 34 72 2 2 23 0 23
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 6 values pushed */
          89 4 63 0 1 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECE6" xMin="102" yMin="-201" xMax="2032" yMax="1713">
      <contour>
        <pt x="1048" y="1681" on="1"/>
        <pt x="1194" y="1713" on="1"/>
        <pt x="1189" y="838" on="1"/>
        <pt x="1598" y="1155" on="0"/>
        <pt x="1838" y="1442" on="1"/>
        <pt x="1971" y="1324" on="1"/>
        <pt x="1673" y="980" on="0"/>
        <pt x="1198" y="653" on="1"/>
        <pt x="1206" y="71" on="1"/>
        <pt x="1217" y="-52" on="0"/>
        <pt x="1294" y="-39" on="1"/>
        <pt x="1664" y="-45" on="1"/>
        <pt x="1800" y="-62" on="0"/>
        <pt x="1795" y="73" on="1"/>
        <pt x="1830" y="206" on="0"/>
        <pt x="1842" y="408" on="1"/>
        <pt x="1912" y="377" on="0"/>
        <pt x="2032" y="328" on="1"/>
        <pt x="1978" y="144" on="0"/>
        <pt x="1956" y="17" on="1"/>
        <pt x="1929" y="-184" on="0"/>
        <pt x="1691" y="-187" on="1"/>
        <pt x="1251" y="-201" on="1"/>
        <pt x="1017" y="-181" on="0"/>
        <pt x="1031" y="53" on="1"/>
      </contour>
      <contour>
        <pt x="332" y="1650" on="1"/>
        <pt x="341" y="1035" on="1"/>
        <pt x="906" y="1064" on="1"/>
        <pt x="884" y="879" on="1"/>
        <pt x="343" y="916" on="1"/>
        <pt x="330" y="42" on="1"/>
        <pt x="557" y="147" on="0"/>
        <pt x="892" y="279" on="1"/>
        <pt x="878" y="187" on="0"/>
        <pt x="879" y="103" on="1"/>
        <pt x="603" y="13" on="0"/>
        <pt x="394" y="-99" on="1"/>
        <pt x="306" y="-150" on="0"/>
        <pt x="222" y="-196" on="1"/>
        <pt x="102" y="-76" on="1"/>
        <pt x="189" y="-19" on="0"/>
        <pt x="187" y="72" on="1"/>
        <pt x="183" y="1633" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          28 34 34 30 28 2 8
          PUSHW[ ]	/* 1 value pushed */
          355
          PUSHB[ ]	/* 4 values pushed */
          24 4 16 4
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 3 values pushed */
          5 5 17
          PUSHW[ ]	/* 1 value pushed */
          356
          NPUSHB[ ]	/* 11 values pushed */
          24 41 15 15 44 41 38 39 39 26 30
          PUSHW[ ]	/* 1 value pushed */
          355
          PUSHB[ ]	/* 8 values pushed */
          64 41 17 15 15 10 10 22
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 32 34
          PUSHW[ ]	/* 1 value pushed */
          322
          NPUSHB[ ]	/* 9 values pushed */
          89 10 32 10 32 26 30 39 39
          PUSHW[ ]	/* 4 values pushed */
          -16 38 39 314
          PUSHB[ ]	/* 7 values pushed */
          89 5 4 4 2 7 2
          PUSHW[ ]	/* 4 values pushed */
          325 89 7 -16
          NPUSHB[ ]	/* 16 values pushed */
          7 7 29 38 64 24 40 72 38 64 15 21 72 38 26 29
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 14 values pushed */
          89 26 176 42 1 42 42 207 0 1 80 0 1 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01110]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECED" xMin="95" yMin="-237" xMax="1895" yMax="1561">
      <contour>
        <pt x="958" y="951" on="1"/>
        <pt x="1322" y="1178" on="0"/>
        <pt x="1623" y="1404" on="1"/>
        <pt x="95" y="1370" on="1"/>
        <pt x="125" y="1561" on="1"/>
        <pt x="1882" y="1555" on="1"/>
        <pt x="1895" y="1373" on="1"/>
        <pt x="1525" y="1110" on="0"/>
        <pt x="1136" y="865" on="1"/>
        <pt x="1141" y="131" on="1"/>
        <pt x="1157" y="-44" on="0"/>
        <pt x="1081" y="-140" on="1"/>
        <pt x="1016" y="-207" on="0"/>
        <pt x="796" y="-237" on="1"/>
        <pt x="679" y="-232" on="0"/>
        <pt x="469" y="-199" on="1"/>
        <pt x="479" y="-120" on="0"/>
        <pt x="452" y="-21" on="1"/>
        <pt x="634" y="-59" on="0"/>
        <pt x="769" y="-58" on="1"/>
        <pt x="974" y="-45" on="0"/>
        <pt x="968" y="154" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          17 17 21 3 2 6 6 23 9
          PUSHW[ ]	/* 1 value pushed */
          358
          PUSHB[ ]	/* 7 values pushed */
          64 21 3 15 13 19 13
          PUSHW[ ]	/* 1 value pushed */
          321
          PUSHB[ ]	/* 8 values pushed */
          89 15 8 1 11 5 0 8
          PUSHW[ ]	/* 1 value pushed */
          302
          NPUSHB[ ]	/* 21 values pushed */
          89 0 0 19 4 17 17 0 19 16 19 32 19 3 22 3 19 6 3 4 3
          PUSHW[ ]	/* 1 value pushed */
          319
          NPUSHB[ ]	/* 24 values pushed */
          89 47 4 127 4 191 4 255 4 4 47 4 63 4 79 4 111 4 175 4 239 4 6 4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECEE" xMin="21" yMin="-182" xMax="2018" yMax="1607">
      <contour>
        <pt x="25" y="-7" on="1"/>
        <pt x="959" y="-32" on="1"/>
        <pt x="943" y="250" on="1"/>
        <pt x="164" y="256" on="1"/>
        <pt x="156" y="373" on="1"/>
        <pt x="931" y="385" on="1"/>
        <pt x="949" y="633" on="1"/>
        <pt x="370" y="636" on="1"/>
        <pt x="386" y="559" on="1"/>
        <pt x="230" y="581" on="1"/>
        <pt x="236" y="1607" on="1"/>
        <pt x="1836" y="1582" on="1"/>
        <pt x="1807" y="569" on="1"/>
        <pt x="1677" y="582" on="1"/>
        <pt x="1665" y="624" on="1"/>
        <pt x="1098" y="648" on="1"/>
        <pt x="1093" y="377" on="1"/>
        <pt x="1898" y="364" on="1"/>
        <pt x="1907" y="255" on="1"/>
        <pt x="1099" y="224" on="1"/>
        <pt x="1104" y="-37" on="1"/>
        <pt x="2015" y="-41" on="1"/>
        <pt x="2018" y="-165" on="1"/>
        <pt x="21" y="-182" on="1"/>
      </contour>
      <contour>
        <pt x="1670" y="1450" on="1"/>
        <pt x="1088" y="1464" on="1"/>
        <pt x="1089" y="1183" on="1"/>
        <pt x="1648" y="1194" on="1"/>
      </contour>
      <contour>
        <pt x="1109" y="760" on="1"/>
        <pt x="1670" y="762" on="1"/>
        <pt x="1661" y="1034" on="1"/>
        <pt x="1090" y="1030" on="1"/>
      </contour>
      <contour>
        <pt x="367" y="783" on="1"/>
        <pt x="953" y="791" on="1"/>
        <pt x="951" y="1038" on="1"/>
        <pt x="369" y="1051" on="1"/>
      </contour>
      <contour>
        <pt x="371" y="1196" on="1"/>
        <pt x="931" y="1196" on="1"/>
        <pt x="956" y="1467" on="1"/>
        <pt x="367" y="1447" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          18 3 18 22 12 3 9 23 22 23 26 28 16 3 37 33 5 3 20
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 5 values pushed */
          1 22 27 29 12
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 15 values pushed */
          1 9 0 13 192 13 2 12 13 13 41 23 36 32 8
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 15 values pushed */
          64 15 9 1 13 0 9 1 14 3 9 25 39 10 39
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 5 values pushed */
          89 19 3 4 3
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 11 values pushed */
          89 16 9 13 9 13 4 15 7 32 7
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 7 values pushed */
          89 28 32 31 35 36 35
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 73 values pushed */
          89 26 36 191 32 1 15 32 47 32 63 32 111 32 4 11 64 32 1 16 32 96 32 2 96
          32 176 32 192 32 3 15 36 31 36 47 36 3 4 32 36 4 32 36 3 0 15 10 31 10
          2 12 16 10 32 10 2 0 10 64 10 128 10 144 10 208 10 5 20 3 10 0 23
          PUSHW[ ]	/* 1 value pushed */
          315
          PUSHB[ ]	/* 3 values pushed */
          89 20 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECF5" xMin="28" yMin="-248" xMax="2005" yMax="1720">
      <contour>
        <pt x="30" y="642" on="1"/>
        <pt x="172" y="663" on="0"/>
        <pt x="313" y="687" on="1"/>
        <pt x="300" y="1161" on="1"/>
        <pt x="28" y="1165" on="1"/>
        <pt x="55" y="1328" on="1"/>
        <pt x="319" y="1318" on="1"/>
        <pt x="309" y="1718" on="1"/>
        <pt x="487" y="1707" on="1"/>
        <pt x="461" y="1326" on="1"/>
        <pt x="662" y="1319" on="1"/>
        <pt x="681" y="1164" on="1"/>
        <pt x="475" y="1161" on="1"/>
        <pt x="468" y="755" on="1"/>
        <pt x="557" y="761" on="0"/>
        <pt x="658" y="787" on="1"/>
        <pt x="670" y="699" on="0"/>
        <pt x="691" y="647" on="1"/>
        <pt x="590" y="616" on="0"/>
        <pt x="452" y="586" on="1"/>
        <pt x="484" y="-39" on="1"/>
        <pt x="473" y="-235" on="0"/>
        <pt x="268" y="-245" on="1"/>
        <pt x="211" y="-228" on="0"/>
        <pt x="86" y="-248" on="1"/>
        <pt x="66" y="-159" on="0"/>
        <pt x="56" y="-79" on="1"/>
        <pt x="177" y="-98" on="0"/>
        <pt x="226" y="-71" on="1"/>
        <pt x="319" y="-99" on="0"/>
        <pt x="292" y="-13" on="1"/>
        <pt x="297" y="547" on="1"/>
        <pt x="167" y="493" on="0"/>
        <pt x="38" y="448" on="1"/>
      </contour>
      <contour>
        <pt x="793" y="600" on="1"/>
        <pt x="1916" y="597" on="1"/>
        <pt x="1925" y="454" on="1"/>
        <pt x="1404" y="466" on="1"/>
        <pt x="1414" y="-51" on="1"/>
        <pt x="1993" y="-31" on="1"/>
        <pt x="2005" y="-185" on="1"/>
        <pt x="649" y="-178" on="1"/>
        <pt x="631" y="-49" on="1"/>
        <pt x="1249" y="-43" on="1"/>
        <pt x="1278" y="456" on="1"/>
        <pt x="762" y="466" on="1"/>
      </contour>
      <contour>
        <pt x="745" y="1403" on="1"/>
        <pt x="1309" y="1404" on="1"/>
        <pt x="1264" y="1500" on="0"/>
        <pt x="1137" y="1640" on="1"/>
        <pt x="1280" y="1720" on="1"/>
        <pt x="1390" y="1575" on="0"/>
        <pt x="1473" y="1450" on="1"/>
        <pt x="1388" y="1407" on="1"/>
        <pt x="1939" y="1395" on="1"/>
        <pt x="1941" y="1041" on="1"/>
        <pt x="1805" y="1022" on="1"/>
        <pt x="1803" y="1252" on="1"/>
        <pt x="905" y="1259" on="1"/>
        <pt x="892" y="1030" on="1"/>
        <pt x="744" y="1038" on="1"/>
      </contour>
      <contour>
        <pt x="1448" y="996" on="1"/>
        <pt x="1547" y="1134" on="1"/>
        <pt x="1804" y="919" on="0"/>
        <pt x="1984" y="744" on="1"/>
        <pt x="1903" y="637" on="1"/>
        <pt x="1692" y="802" on="0"/>
      </contour>
      <contour>
        <pt x="1256" y="1002" on="1"/>
        <pt x="1020" y="812" on="0"/>
        <pt x="794" y="642" on="1"/>
        <pt x="695" y="737" on="1"/>
        <pt x="931" y="922" on="0"/>
        <pt x="1120" y="1118" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 37 values pushed */
          36 52 45 17 11 15 41 26 4 36 64 65 53 47 47 61 50 45 69 17 15 70 41 43 11
          60 20 26 4 0 40 0 65 64 64 52 62
          NPUSHW[ ]	/* 11 values pushed */
          -16 62 343 61 38 353 43 50 -16 50 348
          PUSHB[ ]	/* 7 values pushed */
          49 69 70 70 72 16 72
          PUSHW[ ]	/* 4 values pushed */
          345 67 59 353
          PUSHB[ ]	/* 5 values pushed */
          60 67 20 40 55
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 15 values pushed */
          60 49 43 61 4 30 56 56 74 0 9 13 6 2 20
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 29 values pushed */
          64 30 61 62 67 72 56 60 62 72 72 62 60 56 4 34 58 31 19 19 33 17 13 2 2
          0 15 33 0
          NPUSHW[ ]	/* 13 values pushed */
          320 89 64 -16 65 64 311 89 70 -16 69 70 310
          NPUSHB[ ]	/* 50 values pushed */
          89 15 65 31 65 47 65 79 65 95 65 127 65 6 65 64 35 40 72 15 69 31 69 47 69
          79 69 95 69 127 69 6 22 3 69 64 35 40 72 33 65 69 69 65 33 3 58 22 46 58
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 10 values pushed */
          89 49 50 7 7 50 50 46 42 41
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 7 values pushed */
          89 38 42 37 45 34 45
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 15 17
          PUSHW[ ]	/* 1 value pushed */
          317
          PUSHB[ ]	/* 5 values pushed */
          89 12 4 5 4
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 35 values pushed */
          89 9 5 42 34 15 5 5 15 34 42 4 28 53 127 46 143 46 175 46 3 0 46 48 46
          80 46 3 11 3 46 24 22 28 22
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 13 values pushed */
          89 26 28 64 35 40 72 28 64 12 17 72 28
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniECFE" xMin="15" yMin="-251" xMax="2025" yMax="1698">
      <contour>
        <pt x="15" y="-119" on="1"/>
        <pt x="836" y="249" on="0"/>
        <pt x="909" y="979" on="1"/>
        <pt x="64" y="991" on="1"/>
        <pt x="45" y="1158" on="1"/>
        <pt x="935" y="1152" on="1"/>
        <pt x="941" y="1420" on="0"/>
        <pt x="931" y="1698" on="1"/>
        <pt x="1093" y="1684" on="1"/>
        <pt x="1107" y="1432" on="0"/>
        <pt x="1096" y="1134" on="1"/>
        <pt x="1999" y="1150" on="1"/>
        <pt x="1987" y="989" on="1"/>
        <pt x="1113" y="977" on="1"/>
        <pt x="1218" y="181" on="0"/>
        <pt x="2025" y="-67" on="1"/>
        <pt x="1930" y="-145" on="0"/>
        <pt x="1884" y="-205" on="1"/>
        <pt x="1212" y="50" on="0"/>
        <pt x="1014" y="698" on="1"/>
        <pt x="876" y="94" on="0"/>
        <pt x="151" y="-251" on="1"/>
        <pt x="116" y="-219" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          17 15 15 12 3 3 0 12 12 19 5 21 0 0 13 2 10
          PUSHW[ ]	/* 1 value pushed */
          357
          NPUSHB[ ]	/* 9 values pushed */
          64 5 5 24 23 19 3 21 0
          PUSHW[ ]	/* 4 values pushed */
          -16 21 0 317
          PUSHB[ ]	/* 5 values pushed */
          89 21 21 17 15
          PUSHW[ ]	/* 4 values pushed */
          -16 17 15 318
          NPUSHB[ ]	/* 34 values pushed */
          89 79 17 95 17 2 31 17 47 17 223 17 239 17 4 17 13 3 15 7 1 13 0 7 224
          7 2 14 3 7 7 3 4 3
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 23 values pushed */
          89 10 0 4 16 4 48 4 128 4 144 4 192 4 6 128 4 176 4 192 4 3 4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[1]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED00" xMin="40" yMin="-282" xMax="2037" yMax="1712">
      <contour>
        <pt x="789" y="503" on="1"/>
        <pt x="1244" y="559" on="1"/>
        <pt x="1245" y="930" on="1"/>
        <pt x="869" y="906" on="1"/>
        <pt x="853" y="1039" on="1"/>
        <pt x="1256" y="1062" on="1"/>
        <pt x="1243" y="1443" on="1"/>
        <pt x="1069" y="1405" on="0"/>
        <pt x="906" y="1381" on="1"/>
        <pt x="892" y="1470" on="0"/>
        <pt x="881" y="1536" on="1"/>
        <pt x="1346" y="1566" on="0"/>
        <pt x="1837" y="1661" on="1"/>
        <pt x="1856" y="1495" on="1"/>
        <pt x="1652" y="1492" on="0"/>
        <pt x="1385" y="1447" on="1"/>
        <pt x="1382" y="1071" on="1"/>
        <pt x="1879" y="1120" on="1"/>
        <pt x="1866" y="984" on="1"/>
        <pt x="1411" y="913" on="1"/>
        <pt x="1393" y="573" on="1"/>
        <pt x="1969" y="633" on="1"/>
        <pt x="1975" y="511" on="1"/>
        <pt x="1385" y="430" on="1"/>
        <pt x="1413" y="55" on="1"/>
        <pt x="1395" y="-61" on="0"/>
        <pt x="1506" y="-68" on="1"/>
        <pt x="1726" y="-95" on="1"/>
        <pt x="1828" y="-69" on="0"/>
        <pt x="1831" y="33" on="1"/>
        <pt x="1849" y="170" on="0"/>
        <pt x="1856" y="301" on="1"/>
        <pt x="1957" y="291" on="0"/>
        <pt x="2037" y="248" on="1"/>
        <pt x="2019" y="94" on="0"/>
        <pt x="1981" y="-10" on="1"/>
        <pt x="1939" y="-202" on="0"/>
        <pt x="1726" y="-231" on="1"/>
        <pt x="1482" y="-239" on="1"/>
        <pt x="1245" y="-207" on="0"/>
        <pt x="1262" y="27" on="1"/>
        <pt x="1247" y="414" on="1"/>
        <pt x="830" y="380" on="1"/>
      </contour>
      <contour>
        <pt x="46" y="58" on="1"/>
        <pt x="231" y="342" on="0"/>
        <pt x="356" y="650" on="1"/>
        <pt x="46" y="653" on="1"/>
        <pt x="40" y="787" on="1"/>
        <pt x="397" y="771" on="1"/>
        <pt x="405" y="973" on="1"/>
        <pt x="124" y="977" on="1"/>
        <pt x="124" y="1107" on="1"/>
        <pt x="387" y="1077" on="1"/>
        <pt x="404" y="1277" on="1"/>
        <pt x="77" y="1275" on="1"/>
        <pt x="85" y="1397" on="1"/>
        <pt x="415" y="1413" on="1"/>
        <pt x="381" y="1712" on="1"/>
        <pt x="537" y="1698" on="1"/>
        <pt x="537" y="1421" on="1"/>
        <pt x="852" y="1395" on="1"/>
        <pt x="857" y="1293" on="1"/>
        <pt x="539" y="1303" on="1"/>
        <pt x="518" y="1099" on="1"/>
        <pt x="807" y="1092" on="1"/>
        <pt x="792" y="978" on="1"/>
        <pt x="547" y="970" on="1"/>
        <pt x="517" y="757" on="1"/>
        <pt x="848" y="778" on="1"/>
        <pt x="863" y="655" on="1"/>
        <pt x="542" y="650" on="1"/>
        <pt x="532" y="428" on="1"/>
        <pt x="594" y="486" on="1"/>
        <pt x="772" y="362" on="0"/>
        <pt x="905" y="180" on="1"/>
        <pt x="805" y="107" on="1"/>
        <pt x="697" y="246" on="0"/>
        <pt x="538" y="397" on="1"/>
        <pt x="524" y="-252" on="1"/>
        <pt x="381" y="-282" on="1"/>
        <pt x="400" y="478" on="1"/>
        <pt x="277" y="147" on="0"/>
        <pt x="89" y="-113" on="1"/>
        <pt x="73" y="-8" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 37 values pushed */
          50 50 79 43 18 3 10 69 61 42 65 54 46 18 24 12 13 13 33 24 65 61 69 10 3
          5 40 78 54 46 43 22 16 20 5 1 24
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 5 values pushed */
          40 42 75 16 75
          PUSHW[ ]	/* 1 value pushed */
          344
          PUSHB[ ]	/* 5 values pushed */
          74 74 78 22 33
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 20 values pushed */
          40 79 31 31 85 79 82 43 43 71 67 63 59 4 45 48 52 56 4 78
          PUSHW[ ]	/* 1 value pushed */
          349
          PUSHB[ ]	/* 4 values pushed */
          64 79 82 43
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 13 values pushed */
          89 82 82 38 8 75 75 74 79 79 38 26 38
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 25 values pushed */
          89 33 31 31 26 77 74 16 74 72 64 71 72 41 23 23 42 22 20 1 1 0 21 42 0
          PUSHW[ ]	/* 4 values pushed */
          313 89 42 -16
          PUSHB[ ]	/* 5 values pushed */
          42 42 22 21 22
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 8 values pushed */
          89 80 16 80 70 46 47 46
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 7 values pushed */
          89 67 47 66 50 51 50
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 15 values pushed */
          89 63 51 2 19 19 3 18 16 5 5 4 17 3 4
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 9 values pushed */
          89 0 3 16 3 2 15 3 3
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 5 values pushed */
          3 3 18 17 18
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 5 values pushed */
          89 62 54 55 54
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 64 values pushed */
          89 59 55 21 16 16 47 1 111 51 1 63 51 79 51 159 51 223 51 4 95 51 175 51 2
          16 51 1 17 16 15 55 239 55 2 11 72 21 47 51 17 55 55 17 51 47 21 72 6 10
          15 26 31 26 2 14 3 26 6 15 13 8 12 13
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 6 values pushed */
          89 12 12 10 10 8
          PUSHW[ ]	/* 1 value pushed */
          315
          PUSHB[ ]	/* 7 values pushed */
          89 57 57 80 10 1 10
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHPIX[ ]	/* ShiftZoneByPixel */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01110]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED07" xMin="42" yMin="-179" xMax="2011" yMax="1718">
      <contour>
        <pt x="50" y="1065" on="1"/>
        <pt x="428" y="1069" on="1"/>
        <pt x="408" y="1125" on="0"/>
        <pt x="411" y="1505" on="1"/>
        <pt x="867" y="1518" on="1"/>
        <pt x="905" y="1611" on="0"/>
        <pt x="904" y="1718" on="1"/>
        <pt x="1093" y="1677" on="1"/>
        <pt x="1062" y="1596" on="0"/>
        <pt x="1018" y="1510" on="1"/>
        <pt x="1733" y="1505" on="1"/>
        <pt x="1720" y="1045" on="1"/>
        <pt x="1981" y="1036" on="1"/>
        <pt x="1976" y="921" on="1"/>
        <pt x="1734" y="916" on="1"/>
        <pt x="1734" y="766" on="1"/>
        <pt x="1717" y="564" on="0"/>
        <pt x="1527" y="549" on="1"/>
        <pt x="1413" y="560" on="0"/>
        <pt x="1252" y="564" on="1"/>
        <pt x="1246" y="602" on="0"/>
        <pt x="1237" y="695" on="1"/>
        <pt x="1364" y="678" on="0"/>
        <pt x="1466" y="691" on="1"/>
        <pt x="1583" y="677" on="0"/>
        <pt x="1558" y="787" on="1"/>
        <pt x="1569" y="904" on="1"/>
        <pt x="560" y="912" on="1"/>
        <pt x="499" y="649" on="0"/>
        <pt x="172" y="432" on="1"/>
        <pt x="144" y="500" on="0"/>
        <pt x="87" y="562" on="1"/>
        <pt x="328" y="691" on="0"/>
        <pt x="368" y="930" on="1"/>
        <pt x="42" y="933" on="1"/>
      </contour>
      <contour>
        <pt x="48" y="-51" on="1"/>
        <pt x="314" y="-50" on="1"/>
        <pt x="282" y="465" on="1"/>
        <pt x="1768" y="459" on="1"/>
        <pt x="1761" y="-65" on="1"/>
        <pt x="2011" y="-66" on="1"/>
        <pt x="1994" y="-179" on="1"/>
        <pt x="52" y="-177" on="1"/>
      </contour>
      <contour>
        <pt x="1570" y="1385" on="1"/>
        <pt x="577" y="1368" on="1"/>
        <pt x="556" y="1165" on="0"/>
        <pt x="546" y="1071" on="1"/>
        <pt x="1572" y="1052" on="1"/>
      </contour>
      <contour>
        <pt x="1604" y="336" on="1"/>
        <pt x="1305" y="352" on="1"/>
        <pt x="1316" y="-63" on="1"/>
        <pt x="1603" y="-70" on="1"/>
      </contour>
      <contour>
        <pt x="436" y="-52" on="1"/>
        <pt x="734" y="-45" on="1"/>
        <pt x="725" y="337" on="1"/>
        <pt x="459" y="324" on="1"/>
      </contour>
      <contour>
        <pt x="872" y="-58" on="1"/>
        <pt x="1165" y="-73" on="1"/>
        <pt x="1191" y="355" on="1"/>
        <pt x="891" y="327" on="1"/>
      </contour>
      <contour>
        <pt x="763" y="805" on="1"/>
        <pt x="856" y="872" on="1"/>
        <pt x="1043" y="797" on="0"/>
        <pt x="1171" y="687" on="1"/>
        <pt x="1077" y="570" on="1"/>
        <pt x="954" y="654" on="0"/>
      </contour>
      <contour>
        <pt x="830" y="1284" on="1"/>
        <pt x="912" y="1391" on="1"/>
        <pt x="1097" y="1273" on="0"/>
        <pt x="1217" y="1189" on="1"/>
        <pt x="1122" y="1079" on="1"/>
        <pt x="988" y="1198" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          13 21 34 13 41 64 63 63 57 56 61 60 60 25 46 34 31 41 42 11 47 15
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 8 values pushed */
          0 25 1 12 2 25 21 50
          PUSHW[ ]	/* 4 values pushed */
          351 57 6 356
          PUSHB[ ]	/* 8 values pushed */
          7 7 70 69 69 67 66 9
          PUSHW[ ]	/* 6 values pushed */
          355 4 -16 4 56 351
          PUSHB[ ]	/* 5 values pushed */
          53 29 31 31 33
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 7 values pushed */
          27 16 27 27 44 3 46
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 3 values pushed */
          1 41 39
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 12 values pushed */
          25 57 4 53 1 5 36 51 51 73 42 52
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 7 values pushed */
          64 36 59 49 55 37 55
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 21 19
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 5 values pushed */
          89 21 21 23 63
          PUSHW[ ]	/* 4 values pushed */
          -16 64 63 310
          NPUSHB[ ]	/* 11 values pushed */
          89 15 64 31 64 2 11 3 64 17 31
          PUSHW[ ]	/* 4 values pushed */
          -16 29 31 314
          NPUSHB[ ]	/* 29 values pushed */
          89 207 29 1 2 223 29 1 15 29 31 29 47 29 223 29 4 11 3 29 64 26 38 72 29
          29 17 23 17
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 7 values pushed */
          89 0 69 1 28 3 69
          PUSHW[ ]	/* 4 values pushed */
          -16 70 69 310
          NPUSHB[ ]	/* 25 values pushed */
          89 111 70 1 70 0 15 60 31 60 47 60 79 60 95 60 5 16 3 60 32 11 15 72 60
          PUSHW[ ]	/* 4 values pushed */
          -16 61 60 310
          NPUSHB[ ]	/* 13 values pushed */
          89 0 61 1 21 3 61 34 27 14 34 0 34
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 8 values pushed */
          89 46 11 0 66 16 67 66
          PUSHW[ ]	/* 1 value pushed */
          310
          NPUSHB[ ]	/* 87 values pushed */
          89 95 37 111 37 175 37 3 37 64 24 40 72 63 23 79 23 2 79 23 95 23 111 23 191
          23 4 23 64 34 39 72 23 64 24 28 72 0 23 16 23 2 11 15 0 79 0 95 0 223
          0 239 0 5 17 0 64 34 39 72 0 64 24 28 72 0 67 1 35 3 37 23 0 67 37
          23 0 67 4 3 50 52 56 3 35 35 42
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 21 values pushed */
          89 39 35 64 17 40 72 35 7 0 6 16 6 2 15 3 6 6 3 3 44
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 24 values pushed */
          89 9 15 3 31 3 47 3 3 159 3 175 3 223 3 239 3 4 3 64 29 40 72 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED09" xMin="1" yMin="-274" xMax="2040" yMax="1643">
      <contour>
        <pt x="343" y="1643" on="1"/>
        <pt x="1712" y="1625" on="1"/>
        <pt x="1703" y="787" on="1"/>
        <pt x="1548" y="785" on="1"/>
        <pt x="1555" y="881" on="1"/>
        <pt x="510" y="889" on="1"/>
        <pt x="510" y="809" on="1"/>
        <pt x="339" y="777" on="1"/>
      </contour>
      <contour>
        <pt x="465" y="477" on="1"/>
        <pt x="587" y="463" on="1"/>
        <pt x="579" y="358" on="0"/>
        <pt x="535" y="247" on="1"/>
        <pt x="698" y="-6" on="0"/>
        <pt x="961" y="-35" on="1"/>
        <pt x="965" y="572" on="1"/>
        <pt x="48" y="545" on="1"/>
        <pt x="53" y="706" on="1"/>
        <pt x="2001" y="704" on="1"/>
        <pt x="1986" y="578" on="1"/>
        <pt x="1158" y="577" on="1"/>
        <pt x="1140" y="362" on="1"/>
        <pt x="1843" y="369" on="1"/>
        <pt x="1864" y="216" on="1"/>
        <pt x="1145" y="224" on="1"/>
        <pt x="1156" y="-41" on="1"/>
        <pt x="1521" y="-69" on="0"/>
        <pt x="2040" y="-33" on="1"/>
        <pt x="2013" y="-121" on="0"/>
        <pt x="1962" y="-204" on="1"/>
        <pt x="1393" y="-195" on="0"/>
        <pt x="1069" y="-204" on="1"/>
        <pt x="653" y="-181" on="0"/>
        <pt x="464" y="98" on="1"/>
        <pt x="325" y="-147" on="0"/>
        <pt x="100" y="-274" on="1"/>
        <pt x="85" y="-207" on="0"/>
        <pt x="1" y="-139" on="1"/>
        <pt x="343" y="78" on="0"/>
      </contour>
      <contour>
        <pt x="518" y="987" on="1"/>
        <pt x="1557" y="1021" on="1"/>
        <pt x="1569" y="1171" on="1"/>
        <pt x="494" y="1195" on="1"/>
      </contour>
      <contour>
        <pt x="1538" y="1507" on="1"/>
        <pt x="498" y="1478" on="1"/>
        <pt x="514" y="1315" on="1"/>
        <pt x="1569" y="1306" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          11 32 32 9 34 18 22 15 18 22 26 15 36 26 20 24
          PUSHW[ ]	/* 4 values pushed */
          354 13 8 352
          PUSHB[ ]	/* 7 values pushed */
          9 9 6 26 45 39 2
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 12 values pushed */
          13 7 3 3 47 7 34 36 36 44 38 6
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 8 values pushed */
          64 7 32 11 11 9 34 36
          PUSHW[ ]	/* 4 values pushed */
          -16 34 36 312
          NPUSHB[ ]	/* 15 values pushed */
          89 15 34 31 34 47 34 3 13 3 34 34 28 24 28
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 20 23
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 9 8
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 9 values pushed */
          11 15 72 8 8 19 15 16 15
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 9 values pushed */
          89 7 3 7 3 5 16 38 5
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 44 41
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 57 values pushed */
          89 15 20 1 128 20 144 20 2 15 16 79 16 2 128 16 144 16 2 0 38 1 11 95 44
          1 15 44 143 44 239 44 255 44 4 18 3 20 16 38 44 44 38 16 20 4 0 26 13 24
          64 19 39 72 24 0 43
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 19 values pushed */
          89 79 0 1 0 0 16 0 2 112 0 176 0 192 0 240 0 4 0
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          33 39 72 0
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          28 31 72 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED1A" xMin="32" yMin="-272" xMax="1960" yMax="1684">
      <contour>
        <pt x="952" y="1303" on="1"/>
        <pt x="1246" y="1270" on="1"/>
        <pt x="1247" y="1507" on="0"/>
        <pt x="1250" y="1681" on="1"/>
        <pt x="1411" y="1684" on="1"/>
        <pt x="1404" y="1495" on="0"/>
        <pt x="1408" y="1278" on="1"/>
        <pt x="1960" y="1277" on="1"/>
        <pt x="1944" y="536" on="0"/>
        <pt x="1895" y="73" on="1"/>
        <pt x="1886" y="-209" on="0"/>
        <pt x="1644" y="-200" on="1"/>
        <pt x="1525" y="-211" on="0"/>
        <pt x="1397" y="-223" on="1"/>
        <pt x="1364" y="-128" on="0"/>
        <pt x="1355" y="-19" on="1"/>
        <pt x="1492" y="-39" on="0"/>
        <pt x="1604" y="-73" on="1"/>
        <pt x="1726" y="-56" on="0"/>
        <pt x="1757" y="99" on="1"/>
        <pt x="1799" y="625" on="0"/>
        <pt x="1777" y="1153" on="1"/>
        <pt x="1408" y="1132" on="1"/>
        <pt x="1421" y="1030" on="0"/>
        <pt x="1410" y="981" on="1"/>
        <pt x="1404" y="161" on="0"/>
        <pt x="946" y="-272" on="1"/>
        <pt x="864" y="-221" on="0"/>
        <pt x="799" y="-163" on="1"/>
        <pt x="1231" y="232" on="0"/>
        <pt x="1224" y="962" on="1"/>
        <pt x="1241" y="1034" on="0"/>
        <pt x="1258" y="1142" on="1"/>
        <pt x="958" y="1149" on="1"/>
      </contour>
      <contour>
        <pt x="731" y="600" on="1"/>
        <pt x="868" y="329" on="0"/>
        <pt x="987" y="43" on="1"/>
        <pt x="895" y="11" on="0"/>
        <pt x="827" y="9" on="1"/>
        <pt x="818" y="46" on="0"/>
        <pt x="788" y="62" on="1"/>
        <pt x="402" y="27" on="0"/>
        <pt x="114" y="2" on="1"/>
        <pt x="53" y="169" on="1"/>
        <pt x="117" y="223" on="0"/>
        <pt x="199" y="324" on="1"/>
        <pt x="271" y="525" on="0"/>
        <pt x="383" y="829" on="1"/>
        <pt x="37" y="809" on="1"/>
        <pt x="32" y="955" on="1"/>
        <pt x="1008" y="950" on="1"/>
        <pt x="1028" y="828" on="1"/>
        <pt x="534" y="836" on="1"/>
        <pt x="362" y="412" on="0"/>
        <pt x="266" y="155" on="1"/>
        <pt x="500" y="173" on="0"/>
        <pt x="752" y="190" on="1"/>
        <pt x="679" y="358" on="0"/>
        <pt x="592" y="553" on="1"/>
      </contour>
      <contour>
        <pt x="142" y="1546" on="1"/>
        <pt x="944" y="1512" on="1"/>
        <pt x="916" y="1374" on="1"/>
        <pt x="141" y="1396" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 23 values pushed */
          61 61 43 15 51 33 62 48 51 30 34 56 40 40 38 58 33 30 52 62 48 43 54
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 3 values pushed */
          54 42 6
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 8 values pushed */
          1 1 15 30 26 28 28 25
          PUSHW[ ]	/* 7 values pushed */
          352 30 38 352 36 34 350
          PUSHB[ ]	/* 4 values pushed */
          58 36 52 10
          PUSHW[ ]	/* 1 value pushed */
          350
          NPUSHB[ ]	/* 9 values pushed */
          30 58 18 18 64 42 43 43 47
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 6 values pushed */
          64 52 16 52 56 40
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 24 values pushed */
          89 15 56 31 56 2 28 3 56 64 31 34 72 56 64 11 22 72 56 56 54 43 42 43
          PUSHW[ ]	/* 1 value pushed */
          318
          NPUSHB[ ]	/* 15 values pushed */
          89 36 15 38 1 11 5 38 38 42 42 62 11 59 62
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 18 values pushed */
          89 58 6 34 1 11 0 34 1 14 3 34 34 28 52 48 49 48
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 5 values pushed */
          89 22 33 0 33
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 10 values pushed */
          89 6 0 49 0 49 0 17 59 3
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 41 values pushed */
          18 40 72 3 3 15 59 31 59 47 59 79 59 95 59 111 59 6 15 59 31 59 79 59 95
          59 143 59 159 59 207 59 223 59 239 59 9 18 3 59 28
          PUSHW[ ]	/* 4 values pushed */
          -16 26 28 313
          PUSHB[ ]	/* 7 values pushed */
          89 26 26 13 11 17 11
          PUSHW[ ]	/* 1 value pushed */
          318
          NPUSHB[ ]	/* 9 values pushed */
          89 15 15 17 64 19 40 72 17
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED1C" xMin="32" yMin="-244" xMax="2023" yMax="1612">
      <contour>
        <pt x="51" y="536" on="1"/>
        <pt x="939" y="526" on="1"/>
        <pt x="928" y="890" on="1"/>
        <pt x="189" y="903" on="1"/>
        <pt x="195" y="1037" on="1"/>
        <pt x="943" y="1053" on="1"/>
        <pt x="934" y="1419" on="1"/>
        <pt x="569" y="1390" on="0"/>
        <pt x="194" y="1382" on="1"/>
        <pt x="171" y="1466" on="0"/>
        <pt x="134" y="1549" on="1"/>
        <pt x="1179" y="1582" on="0"/>
        <pt x="1789" y="1612" on="1"/>
        <pt x="1832" y="1458" on="1"/>
        <pt x="1475" y="1462" on="0"/>
        <pt x="1115" y="1406" on="1"/>
        <pt x="1118" y="1042" on="1"/>
        <pt x="1825" y="1069" on="1"/>
        <pt x="1824" y="890" on="1"/>
        <pt x="1120" y="906" on="1"/>
        <pt x="1119" y="548" on="1"/>
        <pt x="2003" y="534" on="1"/>
        <pt x="2023" y="363" on="1"/>
        <pt x="1132" y="370" on="1"/>
        <pt x="1116" y="2" on="1"/>
        <pt x="1120" y="-244" on="0"/>
        <pt x="880" y="-239" on="1"/>
        <pt x="745" y="-223" on="0"/>
        <pt x="499" y="-210" on="1"/>
        <pt x="509" y="-143" on="0"/>
        <pt x="496" y="-64" on="1"/>
        <pt x="711" y="-82" on="0"/>
        <pt x="823" y="-73" on="1"/>
        <pt x="932" y="-47" on="0"/>
        <pt x="960" y="69" on="1"/>
        <pt x="957" y="386" on="1"/>
        <pt x="32" y="374" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 23 values pushed */
          18 30 3 10 18 12 13 13 22 24 30 34 3 10 36 22 22 38 16 20 5 1 24
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 8 values pushed */
          64 34 34 38 37 36 32 26
          PUSHW[ ]	/* 1 value pushed */
          320
          PUSHB[ ]	/* 7 values pushed */
          89 32 32 28 30 30 28
          PUSHW[ ]	/* 1 value pushed */
          322
          PUSHB[ ]	/* 5 values pushed */
          89 23 36 0 36
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 7 values pushed */
          89 20 0 19 3 4 3
          PUSHW[ ]	/* 1 value pushed */
          318
          NPUSHB[ ]	/* 35 values pushed */
          89 16 4 15 4 31 4 79 4 95 4 143 4 159 4 6 19 3 0 4 0 4 10 30 64
          22 40 72 30 15 6 13 8 12 13
          PUSHW[ ]	/* 1 value pushed */
          319
          PUSHB[ ]	/* 6 values pushed */
          89 12 10 64 10 8
          PUSHW[ ]	/* 1 value pushed */
          319
          NPUSHB[ ]	/* 17 values pushed */
          89 127 10 191 10 255 10 3 175 10 239 10 2 80 10 1 10
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01110]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED21" xMin="24" yMin="-230" xMax="2037" yMax="1686">
      <contour>
        <pt x="1001" y="1368" on="1"/>
        <pt x="999" y="1014" on="1"/>
        <pt x="1985" y="1031" on="1"/>
        <pt x="1981" y="883" on="1"/>
        <pt x="1607" y="879" on="1"/>
        <pt x="1608" y="45" on="1"/>
        <pt x="1421" y="13" on="1"/>
        <pt x="1451" y="861" on="1"/>
        <pt x="987" y="863" on="1"/>
        <pt x="972" y="334" on="0"/>
        <pt x="725" y="20" on="1"/>
        <pt x="634" y="84" on="0"/>
        <pt x="597" y="131" on="1"/>
        <pt x="820" y="420" on="0"/>
        <pt x="849" y="952" on="1"/>
        <pt x="816" y="1506" on="1"/>
        <pt x="1339" y="1522" on="0"/>
        <pt x="1889" y="1611" on="1"/>
        <pt x="1925" y="1472" on="1"/>
        <pt x="1412" y="1412" on="0"/>
      </contour>
      <contour>
        <pt x="880" y="-60" on="1"/>
        <pt x="1433" y="-68" on="1"/>
        <pt x="2037" y="-34" on="1"/>
        <pt x="1991" y="-117" on="0"/>
        <pt x="1937" y="-205" on="1"/>
        <pt x="1414" y="-199" on="1"/>
        <pt x="862" y="-173" on="1"/>
        <pt x="526" y="-195" on="0"/>
        <pt x="351" y="37" on="1"/>
        <pt x="313" y="-20" on="0"/>
        <pt x="112" y="-230" on="1"/>
        <pt x="24" y="-49" on="1"/>
        <pt x="192" y="89" on="0"/>
        <pt x="263" y="184" on="1"/>
        <pt x="283" y="877" on="1"/>
        <pt x="64" y="871" on="1"/>
        <pt x="42" y="1005" on="1"/>
        <pt x="450" y="1001" on="1"/>
        <pt x="424" y="141" on="1"/>
        <pt x="574" y="-35" on="0"/>
      </contour>
      <contour>
        <pt x="234" y="1686" on="1"/>
        <pt x="411" y="1520" on="0"/>
        <pt x="573" y="1318" on="1"/>
        <pt x="431" y="1226" on="1"/>
        <pt x="248" y="1464" on="0"/>
        <pt x="122" y="1586" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          3 35 3 22 35 45 30 31 31 45 22 17 18 18 8 1
          PUSHW[ ]	/* 6 values pushed */
          353 14 10 -16 10 348
          PUSHB[ ]	/* 4 values pushed */
          12 43 16 43
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 3 values pushed */
          42 28 38
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 5 values pushed */
          33 42 40 22 5
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 9 values pushed */
          33 12 14 3 45 6 6 47 40
          PUSHW[ ]	/* 3 values pushed */
          -16 40 346
          NPUSHB[ ]	/* 14 values pushed */
          64 45 38 33 36 31 28 30 30 25 22 21 25 21
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 13 values pushed */
          89 12 10 6 6 10 42 43 43 17 36 36 35
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 5 values pushed */
          89 4 8 1 8
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 28 values pushed */
          89 111 10 127 10 2 207 10 1 10 64 11 14 72 10 36 1 1 36 10 3 15 24 0 25
          1 10 25
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 17 values pushed */
          22 25 72 25 45 0 40 16 40 2 18 3 40 40 17 17 18
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 11 values pushed */
          89 0 17 1 28 3 17 17 15 15 0
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 12 values pushed */
          89 79 15 1 47 15 159 15 175 15 3 15
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED23" xMin="12" yMin="-279" xMax="1978" yMax="1705">
      <contour>
        <pt x="67" y="975" on="1"/>
        <pt x="618" y="970" on="1"/>
        <pt x="658" y="1057" on="0"/>
        <pt x="685" y="1107" on="1"/>
        <pt x="219" y="1115" on="1"/>
        <pt x="247" y="1219" on="1"/>
        <pt x="707" y="1226" on="1"/>
        <pt x="731" y="1306" on="0"/>
        <pt x="761" y="1356" on="1"/>
        <pt x="100" y="1359" on="1"/>
        <pt x="132" y="1472" on="1"/>
        <pt x="698" y="1464" on="1"/>
        <pt x="598" y="1565" on="0"/>
        <pt x="547" y="1654" on="1"/>
        <pt x="675" y="1705" on="1"/>
        <pt x="753" y="1611" on="0"/>
        <pt x="835" y="1544" on="1"/>
        <pt x="759" y="1469" on="1"/>
        <pt x="1226" y="1495" on="1"/>
        <pt x="1301" y="1585" on="0"/>
        <pt x="1385" y="1701" on="1"/>
        <pt x="1536" y="1612" on="1"/>
        <pt x="1478" y="1564" on="0"/>
        <pt x="1394" y="1478" on="1"/>
        <pt x="1957" y="1486" on="1"/>
        <pt x="1938" y="1349" on="1"/>
        <pt x="938" y="1352" on="1"/>
        <pt x="905" y="1307" on="0"/>
        <pt x="875" y="1252" on="1"/>
        <pt x="1783" y="1232" on="1"/>
        <pt x="1808" y="1117" on="1"/>
        <pt x="822" y="1105" on="1"/>
        <pt x="813" y="1050" on="0"/>
        <pt x="757" y="964" on="1"/>
        <pt x="1978" y="969" on="1"/>
        <pt x="1960" y="858" on="1"/>
        <pt x="712" y="841" on="1"/>
        <pt x="652" y="768" on="0"/>
        <pt x="615" y="700" on="1"/>
        <pt x="1764" y="725" on="1"/>
        <pt x="1761" y="-263" on="1"/>
        <pt x="1629" y="-243" on="1"/>
        <pt x="1627" y="-162" on="1"/>
        <pt x="618" y="-174" on="1"/>
        <pt x="631" y="-279" on="1"/>
        <pt x="465" y="-263" on="1"/>
        <pt x="470" y="516" on="1"/>
        <pt x="336" y="317" on="0"/>
        <pt x="155" y="165" on="1"/>
        <pt x="103" y="217" on="0"/>
        <pt x="12" y="286" on="1"/>
        <pt x="336" y="537" on="0"/>
        <pt x="511" y="846" on="1"/>
        <pt x="71" y="862" on="1"/>
      </contour>
      <contour>
        <pt x="593" y="-35" on="1"/>
        <pt x="1612" y="-32" on="1"/>
        <pt x="1606" y="99" on="1"/>
        <pt x="622" y="92" on="1"/>
      </contour>
      <contour>
        <pt x="1629" y="602" on="1"/>
        <pt x="598" y="586" on="1"/>
        <pt x="604" y="447" on="1"/>
        <pt x="1634" y="444" on="1"/>
      </contour>
      <contour>
        <pt x="622" y="197" on="1"/>
        <pt x="1616" y="201" on="1"/>
        <pt x="1606" y="361" on="1"/>
        <pt x="618" y="327" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          28 31 31 26 33 25 30 16 4 9 53 25 35 17 11 11 8 14 35 20 16 20
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 3 values pushed */
          21 21 23
          PUSHW[ ]	/* 3 values pushed */
          358 18 -16
          PUSHB[ ]	/* 3 values pushed */
          18 16 8
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 6 values pushed */
          26 16 26 1 33 52
          PUSHW[ ]	/* 6 values pushed */
          355 36 14 -16 14 346
          PUSHB[ ]	/* 8 values pushed */
          13 13 54 62 60 38 4 44
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 11 values pushed */
          45 26 36 48 35 30 55 63 61 3 40
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 11 values pushed */
          18 45 50 41 41 67 53 9 4 3 48
          PUSHW[ ]	/* 3 values pushed */
          -16 48 346
          NPUSHB[ ]	/* 26 values pushed */
          64 50 50 48 48 41 53 45 45 207 41 1 15 41 47 41 79 41 3 11 3 41 41 43 54
          43
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 62 57
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 60 65
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 20 values pushed */
          89 57 46 1 4 46 20 46 2 12 0 46 1 14 2 46 59 60 38 59
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 5 values pushed */
          89 36 53 0 53
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 7 values pushed */
          89 33 0 31 4 5 4
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 107 values pushed */
          89 28 5 47 62 1 11 62 27 62 155 62 3 59 62 1 62 64 17 21 72 4 62 20 62
          2 11 60 27 60 171 60 187 60 203 60 5 59 60 1 60 64 17 21 72 116 60 132 60 2
          4 60 20 60 36 60 3 15 38 31 38 2 175 38 1 2 47 38 1 38 64 36 39 72 38
          64 17 20 72 112 38 128 38 2 15 0 31 0 2 0 64 36 39 72 0 64 18 21 72 80
          0 96 0 128 0 3 0
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 64 values pushed */
          11 14 72 47 5 207 5 2 128 5 1 0 5 16 5 48 5 3 11 62 60 38 0 5 5
          0 38 60 62 5 15 54 47 54 2 12 54 64 33 40 72 54 21 20 20 10 13 32 14 48
          14 2 0 14 144 14 160 14 176 14 4 13 3 14
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 10 values pushed */
          15 18 72 14 14 10 26 9 10 9
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 46 values pushed */
          89 23 17 111 10 127 10 175 10 3 223 10 1 2 143 10 159 10 2 79 10 111 10 143 10
          159 10 239 10 255 10 6 10 64 36 40 72 10 64 27 30 72 80 10 1 10
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[0]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED2B" xMin="6" yMin="-280" xMax="2032" yMax="1727">
      <contour>
        <pt x="2032" y="44" on="1"/>
        <pt x="1957" y="-31" on="0"/>
        <pt x="1892" y="-109" on="1"/>
        <pt x="1378" y="109" on="0"/>
        <pt x="1109" y="505" on="1"/>
        <pt x="1094" y="-265" on="1"/>
        <pt x="949" y="-280" on="1"/>
        <pt x="957" y="511" on="1"/>
        <pt x="672" y="174" on="0"/>
        <pt x="138" y="-114" on="1"/>
        <pt x="103" y="-90" on="0"/>
        <pt x="6" y="-10" on="1"/>
        <pt x="532" y="286" on="0"/>
        <pt x="881" y="606" on="1"/>
        <pt x="47" y="613" on="1"/>
        <pt x="39" y="747" on="1"/>
        <pt x="961" y="738" on="1"/>
        <pt x="939" y="1286" on="1"/>
        <pt x="195" y="1295" on="1"/>
        <pt x="182" y="1416" on="1"/>
        <pt x="959" y="1417" on="1"/>
        <pt x="941" y="1705" on="1"/>
        <pt x="1106" y="1727" on="1"/>
        <pt x="1085" y="1427" on="1"/>
        <pt x="1874" y="1411" on="1"/>
        <pt x="1893" y="1277" on="1"/>
        <pt x="1100" y="1295" on="1"/>
        <pt x="1083" y="736" on="1"/>
        <pt x="1993" y="750" on="1"/>
        <pt x="2005" y="615" on="1"/>
        <pt x="1135" y="630" on="1"/>
        <pt x="1467" y="234" on="0"/>
      </contour>
      <contour>
        <pt x="1282" y="868" on="1"/>
        <pt x="1468" y="1083" on="0"/>
        <pt x="1567" y="1222" on="1"/>
        <pt x="1705" y="1100" on="1"/>
        <pt x="1586" y="939" on="0"/>
        <pt x="1432" y="787" on="1"/>
      </contour>
      <contour>
        <pt x="341" y="1130" on="1"/>
        <pt x="474" y="1211" on="1"/>
        <pt x="592" y="1065" on="0"/>
        <pt x="751" y="892" on="1"/>
        <pt x="599" y="783" on="1"/>
        <pt x="492" y="927" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          18 18 38 11 25 14 25 29 35 2 0 0 29 30 13 13 6 41 14 11 29 37
          PUSHW[ ]	/* 3 values pushed */
          -16 37 345
          PUSHB[ ]	/* 6 values pushed */
          32 23 27 20 16 5
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 4 values pushed */
          6 42 16 42
          PUSHW[ ]	/* 1 value pushed */
          348
          PUSHB[ ]	/* 8 values pushed */
          41 32 6 38 29 34 16 34
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 8 values pushed */
          41 35 35 45 9 11 11 39
          PUSHW[ ]	/* 3 values pushed */
          -16 39 345
          NPUSHB[ ]	/* 34 values pushed */
          64 38 32 37 41 42 38 39 35 34 37 64 16 21 72 42 64 16 21 72 37 42 39 34 34
          39 42 37 4 15 26 18 19 18
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 11 values pushed */
          89 30 7 16 7 4 16 4 14 15 14
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 21 values pushed */
          89 27 31 15 1 15 15 0 23 19 21 21 0 19 48 19 2 11 3 19 11
          PUSHW[ ]	/* 4 values pushed */
          -16 9 11 314
          PUSHB[ ]	/* 5 values pushed */
          89 9 9 2 0
          PUSHW[ ]	/* 4 values pushed */
          -16 2 0 316
          NPUSHB[ ]	/* 9 values pushed */
          89 6 6 2 64 11 15 72 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED34" xMin="28" yMin="-266" xMax="2015" yMax="1710">
      <contour>
        <pt x="384" y="1253" on="1"/>
        <pt x="1671" y="1252" on="1"/>
        <pt x="1681" y="780" on="1"/>
        <pt x="1516" y="773" on="1"/>
        <pt x="1533" y="825" on="1"/>
        <pt x="538" y="831" on="1"/>
        <pt x="541" y="749" on="1"/>
        <pt x="381" y="764" on="1"/>
      </contour>
      <contour>
        <pt x="305" y="-257" on="1"/>
        <pt x="157" y="-266" on="1"/>
        <pt x="145" y="668" on="1"/>
        <pt x="1889" y="696" on="1"/>
        <pt x="1900" y="-1" on="1"/>
        <pt x="1889" y="-234" on="0"/>
        <pt x="1658" y="-242" on="1"/>
        <pt x="1556" y="-241" on="0"/>
        <pt x="1383" y="-223" on="1"/>
        <pt x="1370" y="-185" on="0"/>
        <pt x="1366" y="-67" on="1"/>
        <pt x="1540" y="-80" on="0"/>
        <pt x="1640" y="-80" on="1"/>
        <pt x="1756" y="-80" on="0"/>
        <pt x="1771" y="21" on="1"/>
        <pt x="1743" y="562" on="1"/>
        <pt x="292" y="558" on="1"/>
      </contour>
      <contour>
        <pt x="585" y="426" on="1"/>
        <pt x="1464" y="430" on="1"/>
        <pt x="1472" y="26" on="1"/>
        <pt x="743" y="23" on="1"/>
        <pt x="713" y="-65" on="1"/>
        <pt x="588" y="-67" on="1"/>
      </contour>
      <contour>
        <pt x="28" y="1538" on="1"/>
        <pt x="966" y="1521" on="1"/>
        <pt x="931" y="1600" on="0"/>
        <pt x="863" y="1653" on="1"/>
        <pt x="1036" y="1710" on="1"/>
        <pt x="1081" y="1622" on="0"/>
        <pt x="1113" y="1537" on="1"/>
        <pt x="2010" y="1516" on="1"/>
        <pt x="2015" y="1376" on="1"/>
        <pt x="53" y="1405" on="1"/>
      </contour>
      <contour>
        <pt x="1512" y="1111" on="1"/>
        <pt x="524" y="1148" on="1"/>
        <pt x="528" y="944" on="1"/>
        <pt x="1543" y="965" on="1"/>
      </contour>
      <contour>
        <pt x="1321" y="135" on="1"/>
        <pt x="1357" y="304" on="1"/>
        <pt x="724" y="322" on="1"/>
        <pt x="729" y="123" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          43 6
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 3 values pushed */
          7 48 29
          PUSHW[ ]	/* 4 values pushed */
          351 30 32 357
          PUSHB[ ]	/* 5 values pushed */
          37 16 37 37 35
          PUSHW[ ]	/* 4 values pushed */
          352 34 27 351
          PUSHB[ ]	/* 5 values pushed */
          45 18 45 44 2
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 4 values pushed */
          3 39 39 12
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 19 values pushed */
          22 7 30 34 45 3 22 22 3 45 34 30 7 6 9 50 40 40 8
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 32 values pushed */
          64 9 34 0 35 1 15 35 35 31 30 30 28 9 0 28 16 28 32 28 3 0 28 16 28
          32 28 3 22 3 48 28
          PUSHW[ ]	/* 1 value pushed */
          311
          NPUSHB[ ]	/* 19 values pushed */
          89 0 47 16 47 32 47 3 0 47 16 47 32 47 3 22 3 25 47
          PUSHW[ ]	/* 1 value pushed */
          311
          NPUSHB[ ]	/* 15 values pushed */
          89 0 24 16 24 2 0 24 16 24 2 22 3 10 24
          PUSHW[ ]	/* 1 value pushed */
          312
          NPUSHB[ ]	/* 25 values pushed */
          89 7 3 7 3 5 10 0 5 16 5 32 5 3 0 5 16 5 32 5 3 22 3 43 5
          PUSHW[ ]	/* 1 value pushed */
          311
          NPUSHB[ ]	/* 19 values pushed */
          89 0 42 16 42 32 42 3 0 42 16 42 32 42 3 22 3 0 42
          PUSHW[ ]	/* 1 value pushed */
          311
          NPUSHB[ ]	/* 92 values pushed */
          89 43 48 59 48 187 48 3 11 25 1 43 25 59 25 107 25 3 10 64 11 14 72 27 43
          1 107 43 139 43 155 43 3 43 64 23 26 72 47 43 63 43 2 11 43 27 43 2 139 0
          155 0 2 47 0 63 0 2 2 15 0 31 0 2 11 48 25 10 43 0 0 43 10 25 48
          5 18 31 0 40 16 40 2 0 40 16 40 2 22 3 31 40
          PUSHW[ ]	/* 1 value pushed */
          312
          NPUSHB[ ]	/* 26 values pushed */
          89 37 15 31 127 31 143 31 191 31 207 31 5 11 31 15 14 31 14 47 14 3 35 3 20
          14
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 19 values pushed */
          89 20 20 16 18 9 9 16 15 16 31 16 47 16 3 35 3 18 16
          PUSHW[ ]	/* 1 value pushed */
          318
          NPUSHB[ ]	/* 12 values pushed */
          89 47 18 1 95 18 111 18 127 18 3 18
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED36" xMin="191" yMin="-259" xMax="1890" yMax="1699">
      <contour>
        <pt x="772" y="1425" on="1"/>
        <pt x="795" y="1572" on="1"/>
        <pt x="1856" y="1571" on="1"/>
        <pt x="1890" y="66" on="1"/>
        <pt x="1885" y="-221" on="0"/>
        <pt x="1615" y="-250" on="1"/>
        <pt x="1492" y="-242" on="0"/>
        <pt x="1274" y="-212" on="1"/>
        <pt x="1282" y="-167" on="0"/>
        <pt x="1236" y="-47" on="1"/>
        <pt x="1432" y="-70" on="0"/>
        <pt x="1559" y="-92" on="1"/>
        <pt x="1723" y="-68" on="0"/>
        <pt x="1719" y="58" on="1"/>
        <pt x="1718" y="1404" on="1"/>
      </contour>
      <contour>
        <pt x="191" y="1314" on="1"/>
        <pt x="339" y="1282" on="1"/>
        <pt x="325" y="-259" on="1"/>
        <pt x="200" y="-255" on="1"/>
      </contour>
      <contour>
        <pt x="275" y="1621" on="1"/>
        <pt x="390" y="1699" on="1"/>
        <pt x="502" y="1597" on="0"/>
        <pt x="669" y="1437" on="1"/>
        <pt x="546" y="1335" on="1"/>
        <pt x="407" y="1485" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          9 0 9 13 17 0 23 16 23
          PUSHW[ ]	/* 6 values pushed */
          348 22 20 -16 20 345
          PUSHB[ ]	/* 4 values pushed */
          19 22 17 3
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 6 values pushed */
          19 18 13 13 26 17
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 16 values pushed */
          64 18 22 0 23 1 11 3 23 23 0 18 18 7 11 5
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 7 values pushed */
          89 11 11 7 9 9 7
          PUSHW[ ]	/* 1 value pushed */
          319
          NPUSHB[ ]	/* 19 values pushed */
          89 48 9 1 9 15 15 31 15 47 15 3 13 3 15 15 19 19 20
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 8 values pushed */
          11 15 72 20 20 1 1 0
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 20 values pushed */
          89 127 1 191 1 255 1 3 47 1 63 1 79 1 111 1 175 1 5 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED3B" xMin="134" yMin="-292" xMax="1889" yMax="1691">
      <contour>
        <pt x="791" y="1407" on="1"/>
        <pt x="1114" y="1414" on="1"/>
        <pt x="1168" y="1562" on="0"/>
        <pt x="1219" y="1691" on="1"/>
        <pt x="1390" y="1645" on="1"/>
        <pt x="1333" y="1519" on="0"/>
        <pt x="1273" y="1402" on="1"/>
        <pt x="1889" y="1425" on="1"/>
        <pt x="1873" y="-36" on="1"/>
        <pt x="1864" y="-227" on="0"/>
        <pt x="1675" y="-237" on="1"/>
        <pt x="1552" y="-233" on="0"/>
        <pt x="1418" y="-257" on="1"/>
        <pt x="1424" y="-162" on="0"/>
        <pt x="1396" y="-103" on="1"/>
        <pt x="1523" y="-114" on="0"/>
        <pt x="1643" y="-117" on="1"/>
        <pt x="1746" y="-121" on="0"/>
        <pt x="1728" y="20" on="1"/>
        <pt x="1757" y="1303" on="1"/>
        <pt x="920" y="1286" on="1"/>
        <pt x="926" y="-290" on="1"/>
        <pt x="784" y="-292" on="1"/>
      </contour>
      <contour>
        <pt x="139" y="1428" on="1"/>
        <pt x="604" y="1416" on="1"/>
        <pt x="628" y="42" on="1"/>
        <pt x="467" y="41" on="1"/>
        <pt x="477" y="216" on="1"/>
        <pt x="256" y="190" on="1"/>
        <pt x="277" y="13" on="1"/>
        <pt x="134" y="5" on="1"/>
      </contour>
      <contour>
        <pt x="1062" y="1030" on="1"/>
        <pt x="1608" y="1005" on="1"/>
        <pt x="1573" y="243" on="1"/>
        <pt x="1195" y="248" on="1"/>
        <pt x="1186" y="131" on="1"/>
        <pt x="1047" y="151" on="1"/>
      </contour>
      <contour>
        <pt x="477" y="1278" on="1"/>
        <pt x="286" y="1294" on="1"/>
        <pt x="279" y="344" on="1"/>
        <pt x="460" y="334" on="1"/>
      </contour>
      <contour>
        <pt x="1450" y="904" on="1"/>
        <pt x="1193" y="900" on="1"/>
        <pt x="1204" y="380" on="1"/>
        <pt x="1470" y="375" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          14 14 35 33
          PUSHW[ ]	/* 4 values pushed */
          349 44 3 354
          PUSHB[ ]	/* 3 values pushed */
          4 4 6
          PUSHW[ ]	/* 3 values pushed */
          354 1 -16
          PUSHB[ ]	/* 3 values pushed */
          1 43 35
          PUSHW[ ]	/* 4 values pushed */
          349 36 21 350
          PUSHB[ ]	/* 3 values pushed */
          22 40 25
          PUSHW[ ]	/* 4 values pushed */
          350 26 8 350
          NPUSHB[ ]	/* 12 values pushed */
          44 1 36 22 26 5 30 18 18 46 39 29
          PUSHW[ ]	/* 1 value pushed */
          350
          NPUSHB[ ]	/* 10 values pushed */
          64 0 30 16 30 2 11 3 30 30
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 11 values pushed */
          36 42 72 30 26 30 26 22 28 28 39
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 9 values pushed */
          89 16 28 32 28 48 28 3 28
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          25 35 72 28
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 26 values pushed */
          15 21 72 28 4 0 3 112 3 144 3 160 3 192 3 208 3 6 0 3 240 3 2 12 3
          3
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 12 values pushed */
          20 24 72 3 3 23 36 36 34 16 43 34
          PUSHW[ ]	/* 1 value pushed */
          311
          PUSHB[ ]	/* 3 values pushed */
          89 31 42
          PUSHW[ ]	/* 1 value pushed */
          311
          PUSHB[ ]	/* 3 values pushed */
          89 0 20
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 14 values pushed */
          89 6 0 43 31 0 43 31 0 3 10 23 23 38
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 34 values pushed */
          89 79 23 191 23 239 23 3 15 23 127 23 175 23 191 23 4 12 0 23 16 23 2 14 3
          23 22 22 10 14 14 16 10 16
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 27 values pushed */
          89 12 95 10 111 10 2 79 10 95 10 111 10 207 10 4 10 64 38 42 72 10 64 29 34
          72 10
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED3D" xMin="-5" yMin="-289" xMax="2030" yMax="1530">
      <contour>
        <pt x="57" y="1525" on="1"/>
        <pt x="1971" y="1530" on="1"/>
        <pt x="1963" y="1378" on="1"/>
        <pt x="1256" y="1351" on="1"/>
        <pt x="1148" y="1188" on="0"/>
        <pt x="973" y="976" on="1"/>
        <pt x="1111" y="968" on="1"/>
        <pt x="1082" y="-289" on="1"/>
        <pt x="918" y="-281" on="1"/>
        <pt x="933" y="912" on="1"/>
        <pt x="579" y="480" on="0"/>
        <pt x="125" y="212" on="1"/>
        <pt x="70" y="255" on="0"/>
        <pt x="-5" y="339" on="1"/>
        <pt x="653" y="721" on="0"/>
        <pt x="1008" y="1356" on="1"/>
        <pt x="90" y="1353" on="1"/>
      </contour>
      <contour>
        <pt x="1285" y="904" on="1"/>
        <pt x="1664" y="674" on="0"/>
        <pt x="2030" y="441" on="1"/>
        <pt x="1919" y="295" on="1"/>
        <pt x="1483" y="609" on="0"/>
        <pt x="1199" y="774" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 41 values pushed */
          12 21 1 5 10 1 63 15 1 79 15 1 10 15 1 15 3 16 20 19 19 2 17 22 22
          2 16 13 2 2 15 3 16 3 3 5 8 11 13 13 7
          PUSHW[ ]	/* 1 value pushed */
          356
          NPUSHB[ ]	/* 47 values pushed */
          64 8 8 24 23 111 8 127 8 239 8 3 255 8 1 2 15 8 31 8 47 8 3 19 3
          8 64 43 48 72 8 64 35 40 72 8 64 26 33 72 8 64 12 15 72 8 19
          PUSHW[ ]	/* 4 values pushed */
          -16 20 19 318
          PUSHB[ ]	/* 6 values pushed */
          89 20 22 16 17 22
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 31 values pushed */
          89 17 9 15 5 175 5 2 13 3 5 64 42 49 72 5 64 26 34 72 5 64 15 21 72
          5 17 5 13 0 13
          PUSHW[ ]	/* 4 values pushed */
          -16 11 13 315
          PUSHB[ ]	/* 8 values pushed */
          89 20 16 11 3 16 0 16
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 51 values pushed */
          89 31 0 47 0 63 0 3 31 0 47 0 95 0 111 0 127 0 159 0 175 0 191 0 223
          0 239 0 255 0 11 159 0 175 0 223 0 239 0 4 0 64 46 50 72 0 64 11 15 72
          0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[1]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED47" xMin="32" yMin="-257" xMax="2040" yMax="1696">
      <contour>
        <pt x="514" y="1412" on="1"/>
        <pt x="696" y="1350" on="1"/>
        <pt x="486" y="878" on="0"/>
        <pt x="230" y="473" on="1"/>
        <pt x="137" y="511" on="0"/>
        <pt x="62" y="564" on="1"/>
        <pt x="322" y="945" on="0"/>
      </contour>
      <contour>
        <pt x="1316" y="1350" on="1"/>
        <pt x="1447" y="1473" on="1"/>
        <pt x="1760" y="1121" on="0"/>
        <pt x="2040" y="821" on="1"/>
        <pt x="1896" y="708" on="1"/>
        <pt x="1594" y="1063" on="0"/>
      </contour>
      <contour>
        <pt x="954" y="1696" on="1"/>
        <pt x="1112" y="1685" on="1"/>
        <pt x="1113" y="444" on="1"/>
        <pt x="950" y="451" on="1"/>
      </contour>
      <contour>
        <pt x="1594" y="781" on="1"/>
        <pt x="1761" y="673" on="1"/>
        <pt x="1152" y="-62" on="0"/>
        <pt x="121" y="-257" on="1"/>
        <pt x="72" y="-184" on="0"/>
        <pt x="32" y="-101" on="1"/>
        <pt x="1059" y="87" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          20 22 22 5 17 16 17
          NPUSHW[ ]	/* 12 values pushed */
          351 18 8 -16 8 347 7 15 356 16 0 355
          PUSHB[ ]	/* 7 values pushed */
          1 7 16 5 11 16 11
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 6 values pushed */
          18 1 10 10 25 3
          PUSHW[ ]	/* 3 values pushed */
          -16 3 352
          NPUSHB[ ]	/* 20 values pushed */
          64 5 18 0 17 16 17 48 17 3 11 3 17 17 5 3 3 22 13 22
          PUSHW[ ]	/* 4 values pushed */
          -16 20 22 318
          NPUSHB[ ]	/* 47 values pushed */
          89 10 11 79 16 1 16 16 20 1 1 0 7 8 80 8 1 11 0 8 8 0 11 3 13
          47 20 159 20 2 20 64 12 21 72 20 0 13 1 80 13 176 13 240 13 3 13
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          33 37 72 13
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          28 31 72 13
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED4E" xMin="21" yMin="-267" xMax="2024" yMax="1545">
      <contour>
        <pt x="34" y="814" on="1"/>
        <pt x="542" y="808" on="1"/>
        <pt x="561" y="1401" on="1"/>
        <pt x="116" y="1408" on="1"/>
        <pt x="114" y="1545" on="1"/>
        <pt x="1903" y="1543" on="1"/>
        <pt x="1907" y="1410" on="1"/>
        <pt x="1531" y="1410" on="1"/>
        <pt x="1513" y="800" on="1"/>
        <pt x="1994" y="824" on="1"/>
        <pt x="2024" y="663" on="1"/>
        <pt x="1512" y="656" on="1"/>
        <pt x="1519" y="-257" on="1"/>
        <pt x="1352" y="-246" on="1"/>
        <pt x="1361" y="657" on="1"/>
        <pt x="729" y="676" on="1"/>
        <pt x="720" y="282" on="0"/>
        <pt x="608" y="128" on="1"/>
        <pt x="535" y="-86" on="0"/>
        <pt x="181" y="-267" on="1"/>
        <pt x="110" y="-209" on="0"/>
        <pt x="62" y="-135" on="1"/>
        <pt x="377" y="36" on="0"/>
        <pt x="453" y="174" on="1"/>
        <pt x="561" y="318" on="0"/>
        <pt x="565" y="643" on="1"/>
        <pt x="21" y="659" on="1"/>
      </contour>
      <contour>
        <pt x="743" y="827" on="1"/>
        <pt x="1360" y="820" on="1"/>
        <pt x="1333" y="1415" on="1"/>
        <pt x="725" y="1412" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          8 12
          PUSHW[ ]	/* 1 value pushed */
          355
          NPUSHB[ ]	/* 16 values pushed */
          13 6 6 10 10 28 13 13 32 1 3 3 26 26 15 27
          PUSHW[ ]	/* 1 value pushed */
          355
          NPUSHB[ ]	/* 12 values pushed */
          1 64 19 21 21 25 1 15 11 26 0 26
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 8 values pushed */
          89 27 8 0 0 21 4 21
          PUSHW[ ]	/* 4 values pushed */
          -16 19 21 314
          NPUSHB[ ]	/* 37 values pushed */
          89 13 13 91 19 1 235 19 251 19 2 143 19 1 2 15 19 31 19 47 19 127 19 4 19
          3 19 64 11 15 72 19 30 7 3 4 3
          PUSHW[ ]	/* 1 value pushed */
          318
          NPUSHB[ ]	/* 22 values pushed */
          89 127 4 191 4 255 4 3 47 4 63 4 79 4 111 4 175 4 239 4 6 4
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED50" xMin="95" yMin="-286" xMax="1857" yMax="1699">
      <contour>
        <pt x="95" y="-23" on="1"/>
        <pt x="1705" y="-6" on="1"/>
        <pt x="1684" y="340" on="1"/>
        <pt x="223" y="324" on="1"/>
        <pt x="215" y="472" on="1"/>
        <pt x="1698" y="480" on="1"/>
        <pt x="1713" y="804" on="1"/>
        <pt x="186" y="830" on="1"/>
        <pt x="165" y="942" on="1"/>
        <pt x="924" y="958" on="1"/>
        <pt x="950" y="1699" on="1"/>
        <pt x="1103" y="1680" on="1"/>
        <pt x="1103" y="944" on="1"/>
        <pt x="1857" y="933" on="1"/>
        <pt x="1842" y="-286" on="1"/>
        <pt x="1703" y="-259" on="1"/>
        <pt x="1687" y="-136" on="1"/>
        <pt x="104" y="-137" on="1"/>
      </contour>
      <contour>
        <pt x="1830" y="1489" on="1"/>
        <pt x="1607" y="1265" on="0"/>
        <pt x="1386" y="1071" on="1"/>
        <pt x="1286" y="1147" on="1"/>
        <pt x="1500" y="1356" on="0"/>
        <pt x="1694" y="1580" on="1"/>
      </contour>
      <contour>
        <pt x="236" y="1515" on="1"/>
        <pt x="353" y="1595" on="1"/>
        <pt x="550" y="1376" on="0"/>
        <pt x="729" y="1190" on="1"/>
        <pt x="618" y="1066" on="1"/>
        <pt x="439" y="1269" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          28 16 28
          PUSHW[ ]	/* 1 value pushed */
          349
          PUSHB[ ]	/* 5 values pushed */
          27 27 25 18 14
          PUSHW[ ]	/* 1 value pushed */
          355
          PUSHB[ ]	/* 5 values pushed */
          15 5 1 15 20
          PUSHW[ ]	/* 6 values pushed */
          -16 20 346 21 12 355
          NPUSHB[ ]	/* 12 values pushed */
          9 15 21 9 9 21 15 3 24 23 16 23
          PUSHW[ ]	/* 1 value pushed */
          349
          PUSHB[ ]	/* 4 values pushed */
          18 18 31 25
          PUSHW[ ]	/* 3 values pushed */
          -16 25 344
          NPUSHB[ ]	/* 59 values pushed */
          24 64 7 7 17 3 3 17 17 24 27 28 28 21 20 24 25 18 23 16 20 32 20 2 15
          20 1 12 20 25 23 23 25 20 3 8 112 10 1 0 10 96 10 160 10 176 10 192 10 224
          10 240 10 7 14 3 10 4 3
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 8 values pushed */
          89 4 4 0 12 8 8 7
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 16 values pushed */
          89 15 8 31 8 47 8 3 11 3 8 15 15 17 0 17
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 7 values pushed */
          89 0 64 11 14 72 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED57" xMin="-3" yMin="-287" xMax="1903" yMax="1719">
      <contour>
        <pt x="874" y="1663" on="1"/>
        <pt x="1041" y="1719" on="1"/>
        <pt x="1090" y="1610" on="0"/>
        <pt x="1166" y="1463" on="1"/>
        <pt x="1903" y="1490" on="1"/>
        <pt x="1896" y="803" on="1"/>
        <pt x="1744" y="791" on="1"/>
        <pt x="1740" y="881" on="1"/>
        <pt x="407" y="888" on="1"/>
        <pt x="393" y="879" on="1"/>
        <pt x="403" y="71" on="0"/>
        <pt x="150" y="-276" on="1"/>
        <pt x="84" y="-223" on="0"/>
        <pt x="-3" y="-166" on="1"/>
        <pt x="239" y="133" on="0"/>
        <pt x="235" y="855" on="1"/>
        <pt x="236" y="1456" on="1"/>
        <pt x="1012" y="1454" on="1"/>
        <pt x="954" y="1573" on="0"/>
      </contour>
      <contour>
        <pt x="1883" y="588" on="1"/>
        <pt x="1879" y="-278" on="1"/>
        <pt x="1709" y="-287" on="1"/>
        <pt x="1737" y="-142" on="1"/>
        <pt x="695" y="-159" on="1"/>
        <pt x="718" y="-270" on="1"/>
        <pt x="544" y="-258" on="1"/>
        <pt x="544" y="582" on="1"/>
      </contour>
      <contour>
        <pt x="1704" y="425" on="1"/>
        <pt x="716" y="443" on="1"/>
        <pt x="707" y="6" on="1"/>
        <pt x="1715" y="-5" on="1"/>
      </contour>
      <contour>
        <pt x="404" y="1320" on="1"/>
        <pt x="431" y="1022" on="1"/>
        <pt x="1761" y="1006" on="1"/>
        <pt x="1725" y="1343" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          29 24
          PUSHW[ ]	/* 4 values pushed */
          353 25 17 359
          PUSHB[ ]	/* 5 values pushed */
          3 16 3 3 1
          PUSHW[ ]	/* 3 values pushed */
          -16 1 350
          PUSHB[ ]	/* 3 values pushed */
          0 30 20
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 3 values pushed */
          21 33 5
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 13 values pushed */
          6 25 0 21 6 6 21 0 25 4 36 9 32
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 22 values pushed */
          15 64 11 13 13 15 21 15 25 1 40 3 25 64 24 27 72 25 25 23 29 23
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 26 28
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 7 values pushed */
          89 6 6 8 26 32 8
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 45 values pushed */
          89 0 29 208 29 2 224 29 240 29 2 191 29 207 29 2 15 26 1 11 29 26 32 32 26
          29 3 13 16 0 160 1 1 0 1 16 1 2 14 3 1 1 16 16 31
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 3 16
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 13 values pushed */
          29 40 72 191 16 1 0 16 1 16 3 16 13
          PUSHW[ ]	/* 4 values pushed */
          -16 11 13 312
          NPUSHB[ ]	/* 29 values pushed */
          89 251 11 1 11 64 33 38 72 47 11 1 2 31 11 1 175 11 191 11 207 11 3 11 64
          11 15 72 11
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED59" xMin="97" yMin="-247" xMax="1926" yMax="1722">
      <contour>
        <pt x="100" y="1381" on="1"/>
        <pt x="307" y="1389" on="1"/>
        <pt x="387" y="1537" on="0"/>
        <pt x="447" y="1722" on="1"/>
        <pt x="621" y="1667" on="1"/>
        <pt x="558" y="1509" on="0"/>
        <pt x="501" y="1380" on="1"/>
        <pt x="902" y="1390" on="1"/>
        <pt x="901" y="-203" on="1"/>
        <pt x="738" y="-220" on="1"/>
        <pt x="722" y="-79" on="1"/>
        <pt x="280" y="-65" on="1"/>
        <pt x="290" y="-219" on="1"/>
        <pt x="97" y="-220" on="1"/>
      </contour>
      <contour>
        <pt x="931" y="952" on="1"/>
        <pt x="1117" y="1271" on="0"/>
        <pt x="1213" y="1708" on="1"/>
        <pt x="1410" y="1677" on="1"/>
        <pt x="1366" y="1518" on="0"/>
        <pt x="1304" y="1387" on="1"/>
        <pt x="1926" y="1387" on="1"/>
        <pt x="1900" y="345" on="0"/>
        <pt x="1887" y="101" on="1"/>
        <pt x="1876" y="-247" on="0"/>
        <pt x="1566" y="-242" on="1"/>
        <pt x="1401" y="-227" on="0"/>
        <pt x="1199" y="-238" on="1"/>
        <pt x="1191" y="-131" on="0"/>
        <pt x="1173" y="-43" on="1"/>
        <pt x="1174" y="-55" on="1"/>
        <pt x="1370" y="-56" on="0"/>
        <pt x="1535" y="-61" on="1"/>
        <pt x="1739" y="-54" on="0"/>
        <pt x="1729" y="126" on="1"/>
        <pt x="1761" y="421" on="0"/>
        <pt x="1784" y="1227" on="1"/>
        <pt x="1218" y="1239" on="1"/>
        <pt x="1130" y="1014" on="0"/>
        <pt x="1070" y="894" on="1"/>
        <pt x="1005" y="907" on="0"/>
      </contour>
      <contour>
        <pt x="285" y="70" on="1"/>
        <pt x="730" y="85" on="1"/>
        <pt x="723" y="576" on="1"/>
        <pt x="293" y="581" on="1"/>
      </contour>
      <contour>
        <pt x="741" y="1201" on="1"/>
        <pt x="290" y="1224" on="1"/>
        <pt x="286" y="751" on="1"/>
        <pt x="734" y="729" on="1"/>
      </contour>
      <contour>
        <pt x="1088" y="837" on="1"/>
        <pt x="1208" y="895" on="1"/>
        <pt x="1428" y="646" on="0"/>
        <pt x="1565" y="459" on="1"/>
        <pt x="1416" y="374" on="1"/>
        <pt x="1275" y="586" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          26 34 1 240 21 1 3
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 3 values pushed */
          4 4 6
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 5 values pushed */
          1 28 28 33 8
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 8 values pushed */
          9 47 41 9 19 36 17 38
          NPUSHW[ ]	/* 17 values pushed */
          -16 38 350 14 49 -16 49 346 48 20 355 35 22 355 33 1 -16
          NPUSHB[ ]	/* 16 values pushed */
          1 9 14 48 33 33 48 14 9 1 5 13 55 52 16 52
          PUSHW[ ]	/* 4 values pushed */
          352 51 16 356
          NPUSHB[ ]	/* 9 values pushed */
          17 51 17 51 17 23 46 40 12
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 25 values pushed */
          64 13 51 52 48 49 0 49 64 49 2 15 3 52 49 52 49 36 14 38 38 28 45 26 28
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 12 values pushed */
          89 26 26 25 31 9 9 13 13 25 31 25
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 3 values pushed */
          89 0 45
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 5 values pushed */
          89 6 0 46 43
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 3 values pushed */
          89 40 11
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 36 values pushed */
          89 11 46 1 12 68 40 84 40 100 40 3 0 46 40 40 46 0 3 19 159 31 1 2 15
          31 31 31 207 31 3 15 3 31 19 36
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 12 values pushed */
          89 17 16 16 4 244 3 1 36 3 1 3
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 15 values pushed */
          16 21 72 3 3 240 19 1 2 19 64 17 21 72 19
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDRP[10110]	/* MoveDirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED61" xMin="13" yMin="-287" xMax="2028" yMax="1711">
      <contour>
        <pt x="643" y="-36" on="1"/>
        <pt x="1286" y="-37" on="1"/>
        <pt x="1259" y="498" on="1"/>
        <pt x="761" y="494" on="1"/>
        <pt x="776" y="626" on="1"/>
        <pt x="1288" y="633" on="1"/>
        <pt x="1268" y="1101" on="1"/>
        <pt x="938" y="1103" on="1"/>
        <pt x="872" y="923" on="0"/>
        <pt x="790" y="747" on="1"/>
        <pt x="686" y="802" on="0"/>
        <pt x="664" y="809" on="1"/>
        <pt x="832" y="1179" on="0"/>
        <pt x="929" y="1551" on="1"/>
        <pt x="1093" y="1509" on="1"/>
        <pt x="1044" y="1394" on="0"/>
        <pt x="984" y="1240" on="1"/>
        <pt x="1286" y="1254" on="1"/>
        <pt x="1281" y="1709" on="1"/>
        <pt x="1450" y="1672" on="1"/>
        <pt x="1436" y="1233" on="1"/>
        <pt x="1964" y="1254" on="1"/>
        <pt x="1959" y="1122" on="1"/>
        <pt x="1432" y="1110" on="1"/>
        <pt x="1452" y="634" on="1"/>
        <pt x="1906" y="615" on="1"/>
        <pt x="1915" y="498" on="1"/>
        <pt x="1433" y="488" on="1"/>
        <pt x="1451" y="-49" on="1"/>
        <pt x="2028" y="-35" on="1"/>
        <pt x="2010" y="-209" on="1"/>
        <pt x="644" y="-171" on="1"/>
      </contour>
      <contour>
        <pt x="300" y="1711" on="1"/>
        <pt x="469" y="1700" on="1"/>
        <pt x="465" y="1310" on="1"/>
        <pt x="568" y="1371" on="1"/>
        <pt x="640" y="1203" on="0"/>
        <pt x="752" y="1043" on="1"/>
        <pt x="602" y="962" on="1"/>
        <pt x="528" y="1116" on="0"/>
        <pt x="486" y="1216" on="1"/>
        <pt x="451" y="-267" on="1"/>
        <pt x="333" y="-287" on="1"/>
      </contour>
      <contour>
        <pt x="113" y="1250" on="1"/>
        <pt x="264" y="1226" on="1"/>
        <pt x="235" y="971" on="0"/>
        <pt x="164" y="692" on="1"/>
        <pt x="112" y="733" on="0"/>
        <pt x="13" y="740" on="1"/>
        <pt x="86" y="971" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          2 7 1 4 16 1 22 26 3 31 22 26 30 16 7 14 9 30 13
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 3 values pushed */
          14 3 9
          PUSHW[ ]	/* 3 values pushed */
          -16 9 349
          PUSHB[ ]	/* 4 values pushed */
          11 38 16 38
          PUSHW[ ]	/* 1 value pushed */
          347
          PUSHB[ ]	/* 4 values pushed */
          37 31 34 41
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 10 values pushed */
          42 14 37 46 30 20 24 17 5 28
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 12 values pushed */
          11 42 48 15 1 1 12 1 1 51 48 43
          PUSHW[ ]	/* 1 value pushed */
          348
          PUSHB[ ]	/* 3 values pushed */
          44 44 46
          PUSHW[ ]	/* 1 value pushed */
          350
          NPUSHB[ ]	/* 42 values pushed */
          48 44 43 43 35 48 46 38 38 11 11 9 46 9 46 9 4 40 37 16 37 35 64 14 13
          13 35 32 18 18 0 32 1 16 3 32 32 35 27 3 4 3
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 7 values pushed */
          89 24 4 23 7 16 7
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 28 values pushed */
          89 20 16 15 4 1 15 16 1 11 3 4 16 4 16 0 34 35 42 64 12 15 72 42 42
          31 0 31
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 8 values pushed */
          89 28 0 64 21 47 72 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED68" xMin="43" yMin="-252" xMax="2014" yMax="1641">
      <contour>
        <pt x="1335" y="528" on="1"/>
        <pt x="1608" y="123" on="0"/>
        <pt x="1819" y="-179" on="1"/>
        <pt x="1664" y="-252" on="1"/>
        <pt x="1599" y="-196" on="0"/>
        <pt x="1529" y="-70" on="1"/>
        <pt x="880" y="-132" on="0"/>
        <pt x="453" y="-127" on="1"/>
        <pt x="388" y="-141" on="0"/>
        <pt x="266" y="-175" on="1"/>
        <pt x="208" y="-27" on="1"/>
        <pt x="297" y="9" on="0"/>
        <pt x="351" y="86" on="1"/>
        <pt x="607" y="386" on="0"/>
        <pt x="875" y="902" on="1"/>
        <pt x="1023" y="840" on="1"/>
        <pt x="802" y="387" on="0"/>
        <pt x="506" y="11" on="1"/>
        <pt x="909" y="49" on="0"/>
        <pt x="1460" y="55" on="1"/>
        <pt x="1327" y="222" on="0"/>
        <pt x="1179" y="426" on="1"/>
      </contour>
      <contour>
        <pt x="1140" y="1603" on="1"/>
        <pt x="1316" y="1641" on="1"/>
        <pt x="1480" y="1104" on="0"/>
        <pt x="2014" y="805" on="1"/>
        <pt x="1983" y="774" on="0"/>
        <pt x="1882" y="654" on="1"/>
        <pt x="1339" y="1033" on="0"/>
      </contour>
      <contour>
        <pt x="43" y="760" on="1"/>
        <pt x="476" y="1109" on="0"/>
        <pt x="693" y="1613" on="1"/>
        <pt x="839" y="1531" on="1"/>
        <pt x="571" y="994" on="0"/>
        <pt x="154" y="641" on="1"/>
        <pt x="103" y="714" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 2 values pushed */
          17 -16
          NPUSHB[ ]	/* 14 values pushed */
          17 9 9 10 10 29 27 25 25 2 5 19 3 0
          NPUSHW[ ]	/* 9 values pushed */
          -16 0 348 21 23 352 22 14 356
          PUSHB[ ]	/* 7 values pushed */
          15 21 22 31 3 16 3
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 9 values pushed */
          15 32 2 2 37 34 29 29 31
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 58 values pushed */
          64 32 29 15 34 63 34 79 34 95 34 127 34 175 34 6 11 34 34 10 23 32 31 31 23
          21 0 15 14 31 0 1 0 14 0 14 17 22 22 15 23 47 23 63 23 3 15 23 111 23
          175 23 223 23 4 13 3 23
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 7 values pushed */
          36 39 72 23 23 25 25
          PUSHW[ ]	/* 4 values pushed */
          -16 27 25 317
          PUSHB[ ]	/* 8 values pushed */
          89 15 27 1 29 3 27 10
          PUSHW[ ]	/* 4 values pushed */
          -16 9 10 320
          NPUSHB[ ]	/* 20 values pushed */
          89 2 3 64 12 15 72 3 3 9 9 5 64 11 15 72 5 7 17 7
          PUSHW[ ]	/* 1 value pushed */
          320
          NPUSHB[ ]	/* 15 values pushed */
          89 47 19 63 19 95 19 111 19 4 78 19 1 19 17
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED6A" xMin="40" yMin="-154" xMax="2015" yMax="1689">
      <contour>
        <pt x="379" y="19" on="1"/>
        <pt x="1084" y="-11" on="1"/>
        <pt x="1115" y="650" on="1"/>
        <pt x="616" y="645" on="1"/>
        <pt x="449" y="284" on="0"/>
        <pt x="123" y="-95" on="1"/>
        <pt x="82" y="-4" on="0"/>
        <pt x="40" y="28" on="1"/>
        <pt x="445" y="564" on="0"/>
        <pt x="617" y="1247" on="1"/>
        <pt x="112" y="1260" on="1"/>
        <pt x="113" y="1393" on="1"/>
        <pt x="689" y="1399" on="1"/>
        <pt x="711" y="1528" on="0"/>
        <pt x="738" y="1689" on="1"/>
        <pt x="899" y="1673" on="1"/>
        <pt x="892" y="1529" on="0"/>
        <pt x="856" y="1399" on="1"/>
        <pt x="2015" y="1402" on="1"/>
        <pt x="2005" y="1253" on="1"/>
        <pt x="794" y="1224" on="1"/>
        <pt x="775" y="1013" on="0"/>
        <pt x="682" y="791" on="1"/>
        <pt x="1855" y="793" on="1"/>
        <pt x="1871" y="657" on="1"/>
        <pt x="1280" y="665" on="1"/>
        <pt x="1284" y="5" on="1"/>
        <pt x="2013" y="6" on="1"/>
        <pt x="2012" y="-154" on="1"/>
        <pt x="372" y="-154" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          29 29 1 22 3 20 5 28 24 10 28 24 19 10 7 19 19 26
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 5 values pushed */
          1 1 31 9 14
          PUSHW[ ]	/* 1 value pushed */
          356
          NPUSHB[ ]	/* 9 values pushed */
          15 15 20 5 7 7 12 17 9
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 6 values pushed */
          64 20 25 3 22 3
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 17 values pushed */
          89 22 22 0 11 20 10 0 14 1 20 3 14 14 10 11 10
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 20 values pushed */
          89 17 0 11 32 11 48 11 96 11 112 11 176 11 192 11 7 14 3 11
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 5 values pushed */
          28 40 72 11 7
          PUSHW[ ]	/* 4 values pushed */
          -16 5 7 313
          PUSHB[ ]	/* 7 values pushed */
          89 5 5 29 0 0 29
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 3 values pushed */
          89 26 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED73" xMin="24" yMin="-172" xMax="2008" yMax="1575">
      <contour>
        <pt x="26" y="-31" on="1"/>
        <pt x="486" y="-11" on="1"/>
        <pt x="641" y="775" on="1"/>
        <pt x="160" y="773" on="1"/>
        <pt x="180" y="905" on="1"/>
        <pt x="642" y="911" on="1"/>
        <pt x="702" y="1412" on="1"/>
        <pt x="114" y="1427" on="1"/>
        <pt x="112" y="1551" on="1"/>
        <pt x="1916" y="1575" on="1"/>
        <pt x="1930" y="1395" on="1"/>
        <pt x="878" y="1428" on="1"/>
        <pt x="794" y="924" on="1"/>
        <pt x="1713" y="918" on="1"/>
        <pt x="1712" y="-22" on="1"/>
        <pt x="2008" y="-24" on="1"/>
        <pt x="2006" y="-165" on="1"/>
        <pt x="24" y="-172" on="1"/>
      </contour>
      <contour>
        <pt x="1514" y="776" on="1"/>
        <pt x="781" y="757" on="1"/>
        <pt x="665" y="-23" on="1"/>
        <pt x="1512" y="4" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          3 3 2 17 10 7 10 16 12 19 19 11 20 2 5 5 1 7 17 16 17 6
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 7 values pushed */
          11 16 11 11 20 16 14
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 5 values pushed */
          21 21 23 17 20
          PUSHW[ ]	/* 4 values pushed */
          356 64 1 -16
          PUSHB[ ]	/* 7 values pushed */
          1 19 3 12 4 4 3
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 7 values pushed */
          89 4 14 20 0 0 17
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 8 values pushed */
          89 4 8 0 11 7 8 7
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 19 values pushed */
          89 143 8 1 127 8 191 8 2 47 8 63 8 79 8 111 8 4 8
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED7C" xMin="131" yMin="-210" xMax="2003" yMax="1713">
      <contour>
        <pt x="131" y="1423" on="1"/>
        <pt x="877" y="1420" on="1"/>
        <pt x="875" y="1713" on="1"/>
        <pt x="1019" y="1705" on="1"/>
        <pt x="1035" y="1430" on="1"/>
        <pt x="1772" y="1441" on="1"/>
        <pt x="1775" y="306" on="1"/>
        <pt x="1015" y="310" on="1"/>
        <pt x="1032" y="92" on="1"/>
        <pt x="1039" y="-38" on="0"/>
        <pt x="1163" y="-41" on="1"/>
        <pt x="1638" y="-29" on="1"/>
        <pt x="1767" y="-59" on="0"/>
        <pt x="1798" y="58" on="1"/>
        <pt x="1845" y="158" on="0"/>
        <pt x="1844" y="342" on="1"/>
        <pt x="1915" y="324" on="0"/>
        <pt x="2003" y="259" on="1"/>
        <pt x="1974" y="104" on="0"/>
        <pt x="1962" y="-22" on="1"/>
        <pt x="1921" y="-203" on="0"/>
        <pt x="1698" y="-210" on="1"/>
        <pt x="1159" y="-174" on="1"/>
        <pt x="860" y="-181" on="0"/>
        <pt x="853" y="64" on="1"/>
        <pt x="857" y="317" on="1"/>
        <pt x="293" y="298" on="1"/>
        <pt x="312" y="176" on="1"/>
        <pt x="149" y="187" on="1"/>
      </contour>
      <contour>
        <pt x="1625" y="466" on="1"/>
        <pt x="1614" y="826" on="1"/>
        <pt x="1016" y="812" on="1"/>
        <pt x="1037" y="478" on="1"/>
      </contour>
      <contour>
        <pt x="293" y="450" on="1"/>
        <pt x="854" y="450" on="1"/>
        <pt x="861" y="807" on="1"/>
        <pt x="277" y="793" on="1"/>
      </contour>
      <contour>
        <pt x="1608" y="1271" on="1"/>
        <pt x="1046" y="1284" on="1"/>
        <pt x="1027" y="957" on="1"/>
        <pt x="1627" y="938" on="1"/>
      </contour>
      <contour>
        <pt x="288" y="959" on="1"/>
        <pt x="872" y="954" on="1"/>
        <pt x="875" y="1293" on="1"/>
        <pt x="296" y="1274" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 2 values pushed */
          17 355
          PUSHB[ ]	/* 3 values pushed */
          15 40 6
          PUSHW[ ]	/* 1 value pushed */
          355
          PUSHB[ ]	/* 5 values pushed */
          29 39 32 4 8
          PUSHW[ ]	/* 1 value pushed */
          355
          NPUSHB[ ]	/* 16 values pushed */
          24 42 34 1 24 15 29 24 24 29 15 3 46 41 33 27
          PUSHW[ ]	/* 1 value pushed */
          355
          PUSHB[ ]	/* 8 values pushed */
          64 28 28 28 7 26 33 26
          PUSHW[ ]	/* 1 value pushed */
          315
          PUSHB[ ]	/* 7 values pushed */
          89 32 33 31 36 41 36
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 60 values pushed */
          89 39 41 64 33 1 208 33 1 207 33 1 128 33 144 33 2 127 33 1 80 33 1 15 41
          1 15 41 1 11 33 41 33 41 10 0 17 16 15 1 0 15 16 15 32 15 96 15 128 15
          160 15 6 14 3 15 15 10 10 22
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 11 values pushed */
          89 15 10 1 27 3 10 38 44 0 44
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 35 values pushed */
          89 4 48 2 176 2 2 2 2 63 0 1 47 0 127 0 175 0 191 0 255 0 5 175 0
          1 80 0 96 0 2 63 0 1 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED7D" xMin="32" yMin="-270" xMax="1968" yMax="1710">
      <contour>
        <pt x="650" y="1338" on="1"/>
        <pt x="1222" y="1360" on="1"/>
        <pt x="1229" y="1683" on="1"/>
        <pt x="1397" y="1710" on="1"/>
        <pt x="1367" y="1365" on="1"/>
        <pt x="1948" y="1335" on="1"/>
        <pt x="1968" y="-236" on="1"/>
        <pt x="1795" y="-270" on="1"/>
        <pt x="1795" y="-127" on="1"/>
        <pt x="806" y="-150" on="1"/>
        <pt x="796" y="-238" on="1"/>
        <pt x="631" y="-245" on="1"/>
      </contour>
      <contour>
        <pt x="1361" y="14" on="1"/>
        <pt x="1809" y="27" on="1"/>
        <pt x="1794" y="560" on="1"/>
        <pt x="1372" y="545" on="1"/>
      </contour>
      <contour>
        <pt x="796" y="32" on="1"/>
        <pt x="1226" y="13" on="1"/>
        <pt x="1238" y="551" on="1"/>
        <pt x="814" y="560" on="1"/>
      </contour>
      <contour>
        <pt x="1809" y="1224" on="1"/>
        <pt x="1386" y="1215" on="1"/>
        <pt x="1360" y="692" on="1"/>
        <pt x="1810" y="720" on="1"/>
      </contour>
      <contour>
        <pt x="812" y="703" on="1"/>
        <pt x="1225" y="689" on="1"/>
        <pt x="1237" y="1217" on="1"/>
        <pt x="801" y="1194" on="1"/>
      </contour>
      <contour>
        <pt x="325" y="543" on="1"/>
        <pt x="393" y="497" on="0"/>
        <pt x="488" y="477" on="1"/>
        <pt x="344" y="101" on="0"/>
        <pt x="242" y="-266" on="1"/>
        <pt x="87" y="-170" on="1"/>
        <pt x="199" y="179" on="0"/>
      </contour>
      <contour>
        <pt x="104" y="1150" on="1"/>
        <pt x="324" y="1006" on="0"/>
        <pt x="456" y="860" on="1"/>
        <pt x="380" y="761" on="0"/>
        <pt x="339" y="731" on="1"/>
        <pt x="180" y="870" on="0"/>
        <pt x="32" y="1019" on="1"/>
      </contour>
      <contour>
        <pt x="200" y="1647" on="1"/>
        <pt x="421" y="1525" on="0"/>
        <pt x="548" y="1380" on="1"/>
        <pt x="492" y="1308" on="0"/>
        <pt x="443" y="1259" on="1"/>
        <pt x="310" y="1379" on="0"/>
        <pt x="110" y="1565" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          46 44 44 33 42 48 48 11 33 35 41 41 33 4 22 1 25 12
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 4 values pushed */
          17 24 16 10
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 5 values pushed */
          11 39 37 37 28
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 6 values pushed */
          30 30 32 23 13 6
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 7 values pushed */
          17 11 33 7 7 50 32
          PUSHW[ ]	/* 1 value pushed */
          356
          NPUSHB[ ]	/* 34 values pushed */
          64 33 30 15 39 111 39 127 39 159 39 4 15 46 111 46 159 46 3 13 3 28 39 46 46
          39 28 3 9 42 15 19 24 19
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 7 values pushed */
          89 22 24 21 27 0 27
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 56 values pushed */
          89 4 0 127 24 1 175 35 207 35 2 128 35 1 24 35 0 0 35 24 3 16 42 2 2
          15 42 31 42 159 42 3 42 33 15 32 1 32 32 9 15 11 1 11 11 9 15 7 1 10
          3 7 7 9 16 9
          PUSHW[ ]	/* 1 value pushed */
          315
          PUSHB[ ]	/* 8 values pushed */
          89 12 16 64 11 18 72 16
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED84" xMin="21" yMin="-204" xMax="2009" yMax="1699">
      <contour>
        <pt x="624" y="1317" on="1"/>
        <pt x="1479" y="1322" on="1"/>
        <pt x="1473" y="1679" on="1"/>
        <pt x="1664" y="1699" on="1"/>
        <pt x="1630" y="1331" on="1"/>
        <pt x="1981" y="1296" on="1"/>
        <pt x="2001" y="1155" on="1"/>
        <pt x="1633" y="1162" on="1"/>
        <pt x="1639" y="358" on="1"/>
        <pt x="1642" y="63" on="0"/>
        <pt x="1417" y="79" on="1"/>
        <pt x="1255" y="78" on="0"/>
        <pt x="1096" y="78" on="1"/>
        <pt x="1094" y="174" on="0"/>
        <pt x="1085" y="261" on="1"/>
        <pt x="1220" y="257" on="0"/>
        <pt x="1358" y="263" on="1"/>
        <pt x="1469" y="231" on="0"/>
        <pt x="1469" y="404" on="1"/>
        <pt x="1470" y="1151" on="1"/>
        <pt x="625" y="1159" on="1"/>
      </contour>
      <contour>
        <pt x="870" y="-53" on="1"/>
        <pt x="1425" y="-63" on="1"/>
        <pt x="2009" y="-31" on="1"/>
        <pt x="1970" y="-110" on="0"/>
        <pt x="1966" y="-201" on="1"/>
        <pt x="1374" y="-204" on="1"/>
        <pt x="871" y="-204" on="1"/>
        <pt x="494" y="-202" on="0"/>
        <pt x="337" y="24" on="1"/>
        <pt x="282" y="-14" on="0"/>
        <pt x="130" y="-197" on="1"/>
        <pt x="21" y="-51" on="1"/>
        <pt x="195" y="99" on="0"/>
        <pt x="284" y="171" on="1"/>
        <pt x="292" y="866" on="1"/>
        <pt x="55" y="851" on="1"/>
        <pt x="60" y="991" on="1"/>
        <pt x="432" y="1004" on="1"/>
        <pt x="448" y="124" on="1"/>
        <pt x="587" y="-62" on="0"/>
      </contour>
      <contour>
        <pt x="692" y="930" on="1"/>
        <pt x="820" y="1030" on="1"/>
        <pt x="1052" y="735" on="0"/>
        <pt x="1148" y="593" on="1"/>
        <pt x="1037" y="476" on="1"/>
        <pt x="878" y="719" on="0"/>
      </contour>
      <contour>
        <pt x="246" y="1694" on="1"/>
        <pt x="369" y="1539" on="0"/>
        <pt x="519" y="1306" on="1"/>
        <pt x="445" y="1280" on="0"/>
        <pt x="386" y="1234" on="1"/>
        <pt x="255" y="1426" on="0"/>
        <pt x="134" y="1602" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          6 14 20 36 6 23 20 41 49 36 53 31 32 32 53 23 14 45 16 45
          PUSHW[ ]	/* 6 values pushed */
          350 44 42 -16 42 346
          PUSHB[ ]	/* 4 values pushed */
          41 51 16 51
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 3 values pushed */
          49 29 39
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 8 values pushed */
          34 44 49 47 23 4 1 8
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 7 values pushed */
          41 34 53 18 18 55 47
          PUSHW[ ]	/* 3 values pushed */
          -16 47 346
          NPUSHB[ ]	/* 24 values pushed */
          64 53 44 15 45 1 11 3 45 45 26 20 39 34 37 32 29 31 31 26 12 10 16 10
          PUSHW[ ]	/* 1 value pushed */
          319
          NPUSHB[ ]	/* 10 values pushed */
          89 14 16 53 47 47 2 37 37 36
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 27 values pushed */
          89 143 16 1 15 16 191 16 207 16 223 16 4 11 0 37 1 13 3 16 37 16 37 0 26
          26 22
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 7 values pushed */
          89 0 26 1 35 3 26
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 16 values pushed */
          22 25 72 26 49 51 51 20 0 41 42 42 7 20 0 20
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 13 values pushed */
          89 80 2 96 2 2 2 2 4 79 0 1 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED86" xMin="6" yMin="-236" xMax="2006" yMax="1629">
      <contour>
        <pt x="611" y="1580" on="1"/>
        <pt x="804" y="1582" on="1"/>
        <pt x="757" y="948" on="0"/>
        <pt x="645" y="541" on="1"/>
        <pt x="467" y="75" on="0"/>
        <pt x="145" y="-236" on="1"/>
        <pt x="101" y="-157" on="0"/>
        <pt x="6" y="-80" on="1"/>
        <pt x="335" y="195" on="0"/>
        <pt x="478" y="621" on="1"/>
        <pt x="606" y="1027" on="0"/>
      </contour>
      <contour>
        <pt x="1206" y="1629" on="1"/>
        <pt x="1376" y="1603" on="1"/>
        <pt x="1427" y="308" on="0"/>
        <pt x="2006" y="-71" on="1"/>
        <pt x="1952" y="-137" on="0"/>
        <pt x="1861" y="-227" on="1"/>
        <pt x="1262" y="219" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          16 14 14 12
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 8 values pushed */
          11 11 19 0 5 7 7 1
          PUSHW[ ]	/* 1 value pushed */
          358
          PUSHB[ ]	/* 3 values pushed */
          64 0 14
          PUSHW[ ]	/* 4 values pushed */
          -16 16 14 319
          NPUSHB[ ]	/* 35 values pushed */
          89 47 16 63 16 2 16 0 0 63 11 79 11 143 11 3 15 11 31 11 175 11 191 11 255
          11 5 12 0 11 1 16 3 11 7
          PUSHW[ ]	/* 4 values pushed */
          -16 5 7 314
          NPUSHB[ ]	/* 18 values pushed */
          89 111 5 127 5 2 79 5 95 5 111 5 223 5 239 5 5 5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED8D" xMin="16" yMin="-275" xMax="2026" yMax="1690">
      <contour>
        <pt x="818" y="1607" on="1"/>
        <pt x="1843" y="1603" on="1"/>
        <pt x="1844" y="815" on="1"/>
        <pt x="1679" y="809" on="1"/>
        <pt x="1707" y="871" on="1"/>
        <pt x="949" y="888" on="1"/>
        <pt x="965" y="832" on="1"/>
        <pt x="827" y="799" on="1"/>
      </contour>
      <contour>
        <pt x="632" y="413" on="1"/>
        <pt x="1574" y="421" on="1"/>
        <pt x="1558" y="588" on="1"/>
        <pt x="687" y="576" on="1"/>
        <pt x="696" y="703" on="1"/>
        <pt x="1962" y="737" on="1"/>
        <pt x="1972" y="595" on="1"/>
        <pt x="1723" y="579" on="1"/>
        <pt x="1723" y="426" on="1"/>
        <pt x="2010" y="412" on="1"/>
        <pt x="2026" y="304" on="1"/>
        <pt x="1741" y="279" on="1"/>
        <pt x="1709" y="-6" on="1"/>
        <pt x="1722" y="-219" on="0"/>
        <pt x="1498" y="-220" on="1"/>
        <pt x="1381" y="-255" on="0"/>
        <pt x="1187" y="-236" on="1"/>
        <pt x="1183" y="-165" on="0"/>
        <pt x="1176" y="-91" on="1"/>
        <pt x="1303" y="-82" on="0"/>
        <pt x="1446" y="-107" on="1"/>
        <pt x="1575" y="-81" on="0"/>
        <pt x="1556" y="57" on="1"/>
        <pt x="1573" y="285" on="1"/>
        <pt x="598" y="275" on="1"/>
      </contour>
      <contour>
        <pt x="16" y="537" on="1"/>
        <pt x="262" y="780" on="0"/>
        <pt x="490" y="1179" on="1"/>
        <pt x="632" y="1102" on="1"/>
        <pt x="560" y="965" on="0"/>
        <pt x="467" y="821" on="1"/>
        <pt x="464" y="-275" on="1"/>
        <pt x="306" y="-253" on="1"/>
        <pt x="301" y="607" on="1"/>
        <pt x="197" y="492" on="0"/>
        <pt x="104" y="382" on="1"/>
        <pt x="57" y="457" on="0"/>
      </contour>
      <contour>
        <pt x="954" y="1008" on="1"/>
        <pt x="1687" y="1014" on="1"/>
        <pt x="1701" y="1174" on="1"/>
        <pt x="946" y="1177" on="1"/>
      </contour>
      <contour>
        <pt x="1679" y="1474" on="1"/>
        <pt x="943" y="1469" on="1"/>
        <pt x="964" y="1316" on="1"/>
        <pt x="1688" y="1321" on="1"/>
      </contour>
      <contour>
        <pt x="41" y="1127" on="1"/>
        <pt x="317" y="1370" on="0"/>
        <pt x="510" y="1690" on="1"/>
        <pt x="655" y="1605" on="1"/>
        <pt x="409" y="1269" on="0"/>
        <pt x="132" y="1004" on="1"/>
        <pt x="63" y="1082" on="0"/>
      </contour>
      <contour>
        <pt x="807" y="198" on="1"/>
        <pt x="907" y="294" on="1"/>
        <pt x="1032" y="164" on="0"/>
        <pt x="1133" y="55" on="1"/>
        <pt x="1000" y="-53" on="1"/>
        <pt x="922" y="56" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          14 26 11 32 14 18 2 11 32 60 39 18 16 9 20
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 5 values pushed */
          30 26 64 16 64
          PUSHW[ ]	/* 1 value pushed */
          347
          PUSHB[ ]	/* 4 values pushed */
          63 51 45 6
          PUSHW[ ]	/* 6 values pushed */
          351 7 61 -16 61 345
          PUSHB[ ]	/* 7 values pushed */
          60 58 53 53 55 16 55
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 4 values pushed */
          56 35 16 35
          PUSHW[ ]	/* 1 value pushed */
          350
          NPUSHB[ ]	/* 10 values pushed */
          36 36 56 63 3 39 18 52 46 2
          PUSHW[ ]	/* 1 value pushed */
          351
          NPUSHB[ ]	/* 13 values pushed */
          60 7 30 3 40 3 3 67 40 43 33 33 39
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 8 values pushed */
          64 40 41 38 36 43 43 33
          PUSHW[ ]	/* 7 values pushed */
          318 89 53 -16 58 53 314
          NPUSHB[ ]	/* 24 values pushed */
          89 43 58 43 58 22 50 63 15 64 191 64 2 11 4 64 64 32 40 40 24 22 28 22
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 26 values pushed */
          89 60 31 61 1 3 4 61 36 61 68 61 84 61 212 61 5 11 0 61 176 61 2 14 4
          61
          PUSHW[ ]	/* 1 value pushed */
          -32
          NPUSHB[ ]	/* 9 values pushed */
          17 20 72 61 61 19 32 8 32
          PUSHW[ ]	/* 1 value pushed */
          312
          NPUSHB[ ]	/* 17 values pushed */
          89 16 8 36 0 35 1 11 3 35 35 50 12 15 11 12 11
          PUSHW[ ]	/* 1 value pushed */
          312
          NPUSHB[ ]	/* 13 values pushed */
          89 3 3 15 7 1 16 3 7 7 5 45 5
          PUSHW[ ]	/* 1 value pushed */
          312
          PUSHB[ ]	/* 3 values pushed */
          89 51 48
          PUSHW[ ]	/* 1 value pushed */
          312
          NPUSHB[ ]	/* 114 values pushed */
          89 0 8 16 8 2 16 8 112 8 128 8 3 191 12 223 12 2 15 12 207 12 2 12 64
          30 33 72 16 12 128 12 2 63 45 79 45 95 45 127 45 191 45 207 45 223 45 7 111 45
          159 45 207 45 223 45 239 45 5 0 45 1 95 51 111 51 127 51 207 51 223 51 5 127 51
          159 51 239 51 255 51 4 3 8 12 45 51 51 45 12 8 4 28 0 0 26 1 11 4 26
          26 28 64 36 40 72 28 64 12 16 72 28 56 55
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 8 values pushed */
          11 15 72 55 55 0 0 50
          PUSHW[ ]	/* 1 value pushed */
          312
          NPUSHB[ ]	/* 37 values pushed */
          89 63 0 79 0 2 0 0 48 0 64 0 80 0 128 0 144 0 160 0 192 0 208 0 224
          0 10 112 0 176 0 192 0 240 0 4 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED96" xMin="32" yMin="-163" xMax="2004" yMax="1684">
      <contour>
        <pt x="32" y="6" on="1"/>
        <pt x="839" y="-4" on="1"/>
        <pt x="839" y="1684" on="1"/>
        <pt x="1019" y="1655" on="1"/>
        <pt x="1010" y="1077" on="1"/>
        <pt x="1830" y="1048" on="1"/>
        <pt x="1845" y="905" on="1"/>
        <pt x="1007" y="890" on="1"/>
        <pt x="998" y="23" on="1"/>
        <pt x="1997" y="-3" on="1"/>
        <pt x="2004" y="-148" on="1"/>
        <pt x="34" y="-163" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          6 6 10 11 10 10 13 11 4 8
          PUSHW[ ]	/* 1 value pushed */
          358
          NPUSHB[ ]	/* 30 values pushed */
          64 1 1 13 12 15 2 175 2 2 12 48 2 144 2 2 0 2 16 2 32 2 96 2 176
          2 5 15 3 2
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 8 values pushed */
          28 32 72 2 2 7 4 7
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 4 values pushed */
          89 4 0 11
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 3 values pushed */
          89 8 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[1]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED97" xMin="54" yMin="-285" xMax="2020" yMax="1558">
      <contour>
        <pt x="76" y="909" on="1"/>
        <pt x="856" y="907" on="1"/>
        <pt x="880" y="1123" on="0"/>
        <pt x="909" y="1372" on="1"/>
        <pt x="232" y="1389" on="1"/>
        <pt x="197" y="1558" on="1"/>
        <pt x="1833" y="1534" on="1"/>
        <pt x="1832" y="1367" on="1"/>
        <pt x="1066" y="1399" on="1"/>
        <pt x="1064" y="1129" on="0"/>
        <pt x="1027" y="904" on="1"/>
        <pt x="1978" y="901" on="1"/>
        <pt x="1984" y="754" on="1"/>
        <pt x="983" y="752" on="1"/>
        <pt x="840" y="91" on="0"/>
        <pt x="147" y="-285" on="1"/>
        <pt x="91" y="-222" on="0"/>
        <pt x="54" y="-125" on="1"/>
        <pt x="629" y="145" on="0"/>
        <pt x="817" y="745" on="1"/>
        <pt x="72" y="769" on="1"/>
      </contour>
      <contour>
        <pt x="1071" y="640" on="1"/>
        <pt x="1264" y="607" on="1"/>
        <pt x="1263" y="102" on="1"/>
        <pt x="1242" y="-69" on="0"/>
        <pt x="1397" y="-58" on="1"/>
        <pt x="1658" y="-82" on="1"/>
        <pt x="1791" y="-72" on="0"/>
        <pt x="1809" y="55" on="1"/>
        <pt x="1855" y="172" on="0"/>
        <pt x="1842" y="351" on="1"/>
        <pt x="1932" y="341" on="0"/>
        <pt x="2020" y="295" on="1"/>
        <pt x="1981" y="106" on="0"/>
        <pt x="1997" y="-13" on="1"/>
        <pt x="1941" y="-225" on="0"/>
        <pt x="1707" y="-218" on="1"/>
        <pt x="1339" y="-190" on="1"/>
        <pt x="1083" y="-222" on="0"/>
        <pt x="1080" y="83" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          4 4 3 17 7 20 20 17 12 23
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 4 values pushed */
          39 12 7 32
          PUSHW[ ]	/* 1 value pushed */
          356
          NPUSHB[ ]	/* 12 values pushed */
          39 3 30 30 41 3 15 17 17 1 10 19
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 3 values pushed */
          13 13 8
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 8 values pushed */
          64 3 32 30 30 25 25 37
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 7 values pushed */
          89 21 21 13 20 0 20
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 10 values pushed */
          89 10 0 25 0 25 0 17 5 17
          PUSHW[ ]	/* 4 values pushed */
          -16 15 17 314
          NPUSHB[ ]	/* 11 values pushed */
          89 15 64 11 16 72 15 8 4 5 4
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 26 values pushed */
          89 47 5 111 5 127 5 175 5 191 5 5 47 5 63 5 79 5 111 5 175 5 239 5 6
          5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniED9E" xMin="38" yMin="-243" xMax="2039" yMax="1712">
      <contour>
        <pt x="87" y="1263" on="1"/>
        <pt x="647" y="1291" on="1"/>
        <pt x="680" y="1480" on="0"/>
        <pt x="656" y="1712" on="1"/>
        <pt x="830" y="1688" on="1"/>
        <pt x="849" y="1464" on="0"/>
        <pt x="852" y="1276" on="1"/>
        <pt x="1449" y="1269" on="1"/>
        <pt x="1465" y="81" on="1"/>
        <pt x="1475" y="-52" on="0"/>
        <pt x="1573" y="-51" on="1"/>
        <pt x="1674" y="-54" on="1"/>
        <pt x="1815" y="-44" on="0"/>
        <pt x="1839" y="80" on="1"/>
        <pt x="1822" y="194" on="0"/>
        <pt x="1846" y="407" on="1"/>
        <pt x="1917" y="375" on="0"/>
        <pt x="2039" y="329" on="1"/>
        <pt x="2012" y="164" on="0"/>
        <pt x="1996" y="10" on="1"/>
        <pt x="1953" y="-196" on="0"/>
        <pt x="1681" y="-202" on="1"/>
        <pt x="1560" y="-231" on="1"/>
        <pt x="1290" y="-195" on="0"/>
        <pt x="1315" y="65" on="1"/>
        <pt x="1317" y="1146" on="1"/>
        <pt x="815" y="1125" on="1"/>
        <pt x="811" y="699" on="0"/>
        <pt x="755" y="500" on="1"/>
        <pt x="617" y="36" on="0"/>
        <pt x="140" y="-243" on="1"/>
        <pt x="103" y="-187" on="0"/>
        <pt x="38" y="-124" on="1"/>
        <pt x="459" y="129" on="0"/>
        <pt x="606" y="560" on="1"/>
        <pt x="653" y="712" on="0"/>
        <pt x="642" y="1122" on="1"/>
        <pt x="77" y="1133" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          37 37 32 8
          PUSHW[ ]	/* 4 values pushed */
          356 24 17 356
          PUSHB[ ]	/* 7 values pushed */
          24 1 15 15 39 1 4
          PUSHW[ ]	/* 1 value pushed */
          356
          NPUSHB[ ]	/* 9 values pushed */
          3 3 1 30 32 32 26 36 6
          PUSHW[ ]	/* 1 value pushed */
          356
          NPUSHB[ ]	/* 26 values pushed */
          64 1 64 3 160 3 240 3 3 0 3 80 3 96 3 160 3 176 3 192 3 6 18 3 3
          32
          PUSHW[ ]	/* 4 values pushed */
          -16 30 32 312
          NPUSHB[ ]	/* 36 values pushed */
          89 143 30 159 30 175 30 3 15 30 1 21 30 64 29 33 72 30 64 12 18 72 0 30 16
          30 2 35 3 30 17 15 15 22 22 10
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 25 values pushed */
          89 22 64 44 47 72 22 64 25 34 72 22 64 15 21 72 22 3 0 26 37 6 0 0 37
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 24 values pushed */
          89 159 0 239 0 2 32 0 48 0 80 0 144 0 4 0 0 112 0 2 80 0 1 0
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          34 38 72 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01110]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDA0" xMin="27" yMin="-283" xMax="2028" yMax="1719">
      <contour>
        <pt x="1008" y="1713" on="1"/>
        <pt x="1203" y="1719" on="1"/>
        <pt x="1175" y="1464" on="1"/>
        <pt x="1959" y="1474" on="1"/>
        <pt x="1912" y="997" on="1"/>
        <pt x="1828" y="1004" on="0"/>
        <pt x="1738" y="1007" on="1"/>
        <pt x="1766" y="1309" on="1"/>
        <pt x="1195" y="1302" on="1"/>
        <pt x="1194" y="887" on="1"/>
        <pt x="1777" y="903" on="1"/>
        <pt x="1808" y="758" on="1"/>
        <pt x="1617" y="377" on="0"/>
        <pt x="1311" y="121" on="1"/>
        <pt x="1616" y="-24" on="0"/>
        <pt x="2028" y="-111" on="1"/>
        <pt x="1973" y="-200" on="0"/>
        <pt x="1920" y="-281" on="1"/>
        <pt x="1450" y="-155" on="0"/>
        <pt x="1154" y="12" on="1"/>
        <pt x="804" y="-162" on="0"/>
        <pt x="425" y="-283" on="1"/>
        <pt x="379" y="-229" on="0"/>
        <pt x="329" y="-116" on="1"/>
        <pt x="666" y="-40" on="0"/>
        <pt x="994" y="136" on="1"/>
        <pt x="709" y="382" on="0"/>
        <pt x="563" y="764" on="1"/>
        <pt x="396" y="738" on="1"/>
        <pt x="418" y="80" on="0"/>
        <pt x="153" y="-259" on="1"/>
        <pt x="69" y="-189" on="0"/>
        <pt x="27" y="-123" on="1"/>
        <pt x="265" y="163" on="0"/>
        <pt x="233" y="801" on="1"/>
        <pt x="237" y="1475" on="1"/>
        <pt x="1008" y="1450" on="1"/>
      </contour>
      <contour>
        <pt x="1611" y="766" on="1"/>
        <pt x="723" y="750" on="1"/>
        <pt x="847" y="422" on="0"/>
        <pt x="1167" y="229" on="1"/>
        <pt x="1434" y="427" on="0"/>
      </contour>
      <contour>
        <pt x="433" y="899" on="1"/>
        <pt x="1026" y="908" on="1"/>
        <pt x="1027" y="1337" on="1"/>
        <pt x="432" y="1319" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 27 values pushed */
          13 40 40 15 38 25 19 19 17 27 17 15 15 21 23 23 3 34 30 32 32 34 37 11 2
          36 9
          NPUSHW[ ]	/* 9 values pushed */
          355 43 38 354 27 -16 27 4 355
          PUSHB[ ]	/* 6 values pushed */
          6 6 43 27 34 7
          PUSHW[ ]	/* 1 value pushed */
          357
          PUSHB[ ]	/* 8 values pushed */
          11 3 16 3 3 47 28 42
          PUSHW[ ]	/* 1 value pushed */
          355
          NPUSHB[ ]	/* 11 values pushed */
          64 34 4 6 4 6 42 8 45 35 45
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 42 values pushed */
          89 40 13 13 40 15 18 72 13 13 29 13 45 13 3 13 15 38 38 28 19 25 25 40 15
          18 72 13 25 29 25 45 25 3 11 4 25 17 11 28 42 28
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 21 values pushed */
          89 9 42 42 15 2 35 0 0 159 35 1 0 35 16 35 2 14 3 35 23
          PUSHW[ ]	/* 4 values pushed */
          -16 21 23 317
          PUSHB[ ]	/* 5 values pushed */
          89 21 21 17 32
          PUSHW[ ]	/* 4 values pushed */
          -16 30 32 314
          PUSHB[ ]	/* 6 values pushed */
          89 30 30 15 17 15
          PUSHW[ ]	/* 4 values pushed */
          -16 17 15 322
          PUSHB[ ]	/* 7 values pushed */
          89 17 64 12 15 72 17
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDA9" xMin="37" yMin="-270" xMax="1997" yMax="1723">
      <contour>
        <pt x="865" y="1205" on="1"/>
        <pt x="1882" y="1205" on="1"/>
        <pt x="1862" y="500" on="1"/>
        <pt x="1731" y="483" on="1"/>
        <pt x="1733" y="538" on="1"/>
        <pt x="1007" y="550" on="1"/>
        <pt x="1003" y="483" on="1"/>
        <pt x="867" y="498" on="1"/>
      </contour>
      <contour>
        <pt x="43" y="840" on="1"/>
        <pt x="361" y="832" on="1"/>
        <pt x="347" y="1252" on="1"/>
        <pt x="251" y="1267" on="1"/>
        <pt x="230" y="1096" on="0"/>
        <pt x="174" y="998" on="1"/>
        <pt x="83" y="1044" on="0"/>
        <pt x="39" y="1037" on="1"/>
        <pt x="131" y="1349" on="0"/>
        <pt x="252" y="1723" on="1"/>
        <pt x="368" y="1668" on="1"/>
        <pt x="361" y="1524" on="0"/>
        <pt x="288" y="1385" on="1"/>
        <pt x="758" y="1403" on="1"/>
        <pt x="776" y="1255" on="1"/>
        <pt x="523" y="1248" on="1"/>
        <pt x="495" y="820" on="1"/>
        <pt x="780" y="829" on="1"/>
        <pt x="795" y="690" on="1"/>
        <pt x="493" y="685" on="1"/>
        <pt x="512" y="580" on="0"/>
        <pt x="495" y="466" on="1"/>
        <pt x="594" y="531" on="1"/>
        <pt x="721" y="332" on="0"/>
        <pt x="826" y="105" on="1"/>
        <pt x="679" y="16" on="1"/>
        <pt x="592" y="220" on="0"/>
        <pt x="491" y="401" on="1"/>
        <pt x="394" y="-26" on="0"/>
        <pt x="110" y="-270" on="1"/>
        <pt x="73" y="-223" on="0"/>
        <pt x="45" y="-132" on="1"/>
        <pt x="346" y="166" on="0"/>
        <pt x="346" y="702" on="1"/>
        <pt x="37" y="707" on="1"/>
      </contour>
      <contour>
        <pt x="1711" y="1083" on="1"/>
        <pt x="1032" y="1072" on="1"/>
        <pt x="1017" y="689" on="1"/>
        <pt x="1725" y="689" on="1"/>
      </contour>
      <contour>
        <pt x="709" y="-51" on="1"/>
        <pt x="1439" y="-37" on="1"/>
        <pt x="1582" y="225" on="0"/>
        <pt x="1658" y="438" on="1"/>
        <pt x="1825" y="387" on="1"/>
        <pt x="1720" y="141" on="0"/>
        <pt x="1583" y="-35" on="1"/>
        <pt x="1992" y="-30" on="1"/>
        <pt x="1995" y="-187" on="1"/>
        <pt x="730" y="-194" on="1"/>
      </contour>
      <contour>
        <pt x="776" y="1622" on="1"/>
        <pt x="1997" y="1616" on="1"/>
        <pt x="1982" y="1444" on="1"/>
        <pt x="779" y="1466" on="1"/>
      </contour>
      <contour>
        <pt x="948" y="379" on="1"/>
        <pt x="1074" y="448" on="1"/>
        <pt x="1177" y="240" on="0"/>
        <pt x="1269" y="88" on="1"/>
        <pt x="1141" y="7" on="1"/>
        <pt x="1009" y="201" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 30 values pushed */
          29 35 35 27 37 59 26 60 22 56 42 59 55 22 60 26 3 7 24 37 39 39 33 15 20
          11 18 13 55 50
          PUSHW[ ]	/* 6 values pushed */
          355 51 53 355 48 -16
          PUSHB[ ]	/* 4 values pushed */
          48 65 16 65
          PUSHW[ ]	/* 6 values pushed */
          352 64 62 -16 62 349
          PUSHB[ ]	/* 3 values pushed */
          61 45 6
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 5 values pushed */
          7 56 33 16 33
          PUSHW[ ]	/* 4 values pushed */
          351 32 17 351
          PUSHB[ ]	/* 5 values pushed */
          18 18 27 41 24
          PUSHW[ ]	/* 1 value pushed */
          351
          NPUSHB[ ]	/* 9 values pushed */
          9 32 64 51 3 13 55 46 2
          PUSHW[ ]	/* 1 value pushed */
          351
          NPUSHB[ ]	/* 11 values pushed */
          9 7 61 48 4 15 3 3 68 42 13
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 4 values pushed */
          64 15 18 17
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 16 values pushed */
          11 15 72 17 17 57 64 65 65 47 32 33 33 47 47 56
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 25 values pushed */
          89 53 47 51 50 61 62 0 62 1 11 3 50 62 50 62 5 47 3 3 7 7 5 45 5
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 11 values pushed */
          89 35 29 29 30 30 47 27 42 8 42
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 5 values pushed */
          89 24 8 0 44
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 9 values pushed */
          89 15 13 13 8 23 11 20 11
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 37 values pushed */
          89 191 47 1 63 47 79 47 239 47 3 47 64 30 34 72 45 64 27 37 72 45 64 22 25
          72 32 8 1 0 0 16 0 2 13 3 20
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 18 values pushed */
          12 15 72 47 45 8 0 20 20 0 8 45 47 5 39 57 57 60
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 35 values pushed */
          89 15 57 31 57 2 12 16 57 32 57 80 57 96 57 112 57 5 0 57 64 57 128 57 144
          57 192 57 208 57 6 16 3 57 39
          PUSHW[ ]	/* 4 values pushed */
          -16 37 39 314
          NPUSHB[ ]	/* 22 values pushed */
          89 63 37 79 37 2 191 37 207 37 2 37 64 35 39 72 37 64 12 15 72 37
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01110]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDB2" xMin="0" yMin="-282" xMax="1984" yMax="1692">
      <contour>
        <pt x="724" y="-20" on="1"/>
        <pt x="1775" y="-6" on="1"/>
        <pt x="1769" y="335" on="1"/>
        <pt x="793" y="340" on="1"/>
        <pt x="797" y="492" on="1"/>
        <pt x="1782" y="481" on="1"/>
        <pt x="1803" y="809" on="1"/>
        <pt x="768" y="817" on="1"/>
        <pt x="747" y="966" on="1"/>
        <pt x="1259" y="940" on="1"/>
        <pt x="1254" y="1688" on="1"/>
        <pt x="1406" y="1674" on="1"/>
        <pt x="1408" y="975" on="1"/>
        <pt x="1944" y="964" on="1"/>
        <pt x="1941" y="-282" on="1"/>
        <pt x="1788" y="-271" on="1"/>
        <pt x="1768" y="-169" on="1"/>
        <pt x="721" y="-166" on="1"/>
      </contour>
      <contour>
        <pt x="0" y="405" on="1"/>
        <pt x="209" y="726" on="0"/>
        <pt x="322" y="1157" on="1"/>
        <pt x="11" y="1155" on="1"/>
        <pt x="17" y="1290" on="1"/>
        <pt x="317" y="1295" on="1"/>
        <pt x="341" y="1673" on="1"/>
        <pt x="491" y="1692" on="1"/>
        <pt x="487" y="1298" on="1"/>
        <pt x="781" y="1274" on="1"/>
        <pt x="747" y="1131" on="1"/>
        <pt x="496" y="1147" on="1"/>
        <pt x="485" y="842" on="1"/>
        <pt x="537" y="918" on="1"/>
        <pt x="692" y="744" on="0"/>
        <pt x="846" y="618" on="1"/>
        <pt x="710" y="486" on="1"/>
        <pt x="608" y="619" on="0"/>
        <pt x="473" y="771" on="1"/>
        <pt x="479" y="-274" on="1"/>
        <pt x="344" y="-273" on="1"/>
        <pt x="312" y="757" on="1"/>
        <pt x="216" y="460" on="0"/>
        <pt x="62" y="230" on="1"/>
        <pt x="55" y="314" on="0"/>
      </contour>
      <contour>
        <pt x="1595" y="1155" on="1"/>
        <pt x="1715" y="1352" on="0"/>
        <pt x="1873" y="1600" on="1"/>
        <pt x="1984" y="1494" on="1"/>
        <pt x="1848" y="1237" on="0"/>
        <pt x="1700" y="1062" on="1"/>
      </contour>
      <contour>
        <pt x="740" y="1485" on="1"/>
        <pt x="854" y="1570" on="1"/>
        <pt x="988" y="1369" on="0"/>
        <pt x="1131" y="1178" on="1"/>
        <pt x="995" y="1055" on="1"/>
        <pt x="859" y="1284" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          3 7 28 17 21 21 18 5 1 14
          NPUSHW[ ]	/* 9 values pushed */
          352 15 48 -16 48 347 43 12 352
          PUSHB[ ]	/* 4 values pushed */
          9 53 16 53
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 3 values pushed */
          52 28 50
          PUSHW[ ]	/* 3 values pushed */
          -16 50 347
          PUSHB[ ]	/* 6 values pushed */
          49 3 7 34 16 34
          PUSHW[ ]	/* 1 value pushed */
          346
          NPUSHB[ ]	/* 10 values pushed */
          33 49 9 43 15 4 38 45 16 45
          PUSHW[ ]	/* 1 value pushed */
          351
          NPUSHB[ ]	/* 14 values pushed */
          52 33 46 46 56 17 41 18 18 26 30 23 20 37
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 9 values pushed */
          64 38 52 53 53 8 21 41 18
          PUSHW[ ]	/* 1 value pushed */
          321
          PUSHB[ ]	/* 8 values pushed */
          89 41 41 17 29 21 22 21
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 39 values pushed */
          89 49 0 50 16 50 48 50 3 50 50 22 10 43 48 46 45 0 45 1 11 48 45 48 45
          8 10 24 24 0 10 1 14 3 10 10 22 4 3
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 8 values pushed */
          89 33 34 34 39 4 31 39
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 8 values pushed */
          89 36 30 30 7 8 8 7
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 27 values pushed */
          89 12 8 15 4 1 11 3 31 16 4 31 8 8 31 4 3 0 26 22 38 38 15 15 17
          0 17
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 7 values pushed */
          89 0 64 11 15 72 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDB3" xMin="57" yMin="-219" xMax="1997" yMax="1703">
      <contour>
        <pt x="57" y="925" on="1"/>
        <pt x="755" y="1013" on="1"/>
        <pt x="735" y="1679" on="1"/>
        <pt x="902" y="1703" on="1"/>
        <pt x="932" y="1014" on="1"/>
        <pt x="1997" y="1144" on="1"/>
        <pt x="1983" y="972" on="1"/>
        <pt x="932" y="866" on="1"/>
        <pt x="923" y="164" on="1"/>
        <pt x="923" y="-37" on="0"/>
        <pt x="1104" y="-55" on="1"/>
        <pt x="1504" y="-56" on="1"/>
        <pt x="1735" y="-40" on="0"/>
        <pt x="1758" y="73" on="1"/>
        <pt x="1764" y="217" on="0"/>
        <pt x="1797" y="415" on="1"/>
        <pt x="1860" y="358" on="0"/>
        <pt x="1975" y="339" on="1"/>
        <pt x="1942" y="137" on="0"/>
        <pt x="1916" y="10" on="1"/>
        <pt x="1841" y="-219" on="0"/>
        <pt x="1585" y="-196" on="1"/>
        <pt x="1079" y="-209" on="1"/>
        <pt x="721" y="-200" on="0"/>
        <pt x="723" y="99" on="1"/>
        <pt x="736" y="844" on="1"/>
        <pt x="82" y="784" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          6 0 6 15
          PUSHW[ ]	/* 1 value pushed */
          357
          PUSHB[ ]	/* 7 values pushed */
          17 17 28 0 4 1 8
          PUSHW[ ]	/* 1 value pushed */
          358
          NPUSHB[ ]	/* 9 values pushed */
          64 24 4 1 1 0 5 26 0
          PUSHW[ ]	/* 1 value pushed */
          319
          NPUSHB[ ]	/* 11 values pushed */
          89 25 7 7 6 26 26 22 6 10 22
          PUSHW[ ]	/* 1 value pushed */
          320
          NPUSHB[ ]	/* 38 values pushed */
          89 17 15 15 10 16 2 32 2 80 2 112 2 4 0 2 48 2 64 2 80 2 128 2 144
          2 192 2 224 2 8 16 3 2 2 6 5 6
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 7 values pushed */
          89 80 5 1 5 16 5
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDB9" xMin="31" yMin="-264" xMax="1995" yMax="1693">
      <contour>
        <pt x="82" y="1409" on="1"/>
        <pt x="793" y="1413" on="1"/>
        <pt x="850" y="1554" on="0"/>
        <pt x="930" y="1693" on="1"/>
        <pt x="1101" y="1650" on="1"/>
        <pt x="1028" y="1503" on="0"/>
        <pt x="952" y="1414" on="1"/>
        <pt x="1994" y="1394" on="1"/>
        <pt x="1995" y="1237" on="1"/>
        <pt x="904" y="1225" on="1"/>
        <pt x="770" y="1036" on="0"/>
        <pt x="643" y="814" on="1"/>
        <pt x="1806" y="814" on="1"/>
        <pt x="1829" y="-250" on="1"/>
        <pt x="1655" y="-264" on="1"/>
        <pt x="1663" y="-82" on="1"/>
        <pt x="623" y="-86" on="1"/>
        <pt x="652" y="-241" on="1"/>
        <pt x="495" y="-241" on="1"/>
        <pt x="479" y="574" on="1"/>
        <pt x="341" y="370" on="0"/>
        <pt x="167" y="195" on="1"/>
        <pt x="133" y="262" on="0"/>
        <pt x="31" y="308" on="1"/>
        <pt x="433" y="740" on="0"/>
        <pt x="694" y="1225" on="1"/>
        <pt x="61" y="1237" on="1"/>
      </contour>
      <contour>
        <pt x="1659" y="689" on="1"/>
        <pt x="642" y="658" on="1"/>
        <pt x="650" y="63" on="1"/>
        <pt x="1665" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          26 8 3
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 4 values pushed */
          4 1 6 25
          PUSHW[ ]	/* 1 value pushed */
          358
          PUSHB[ ]	/* 4 values pushed */
          9 11 29 17
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 7 values pushed */
          18 4 9 21 8 30 13
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 7 values pushed */
          18 23 14 14 32 26 21
          PUSHW[ ]	/* 3 values pushed */
          -16 21 347
          NPUSHB[ ]	/* 32 values pushed */
          64 23 15 29 1 23 21 21 14 26 18 18 14 64 30 40 72 14 64 22 27 72 14 14 16
          15 16 1 11 3 29 16
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 5 values pushed */
          89 19 28 11 28
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 10 values pushed */
          89 11 11 0 29 64 12 15 72 29
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 8 values pushed */
          16 40 72 29 9 26 0 26
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 20 values pushed */
          89 4 3 3 6 48 0 64 0 2 32 0 80 0 128 0 176 0 4 0
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          33 39 72 0
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          23 26 72 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDBA" xMin="30" yMin="-208" xMax="2023" yMax="1640">
      <contour>
        <pt x="30" y="-105" on="1"/>
        <pt x="968" y="-91" on="1"/>
        <pt x="964" y="22" on="1"/>
        <pt x="138" y="36" on="1"/>
        <pt x="158" y="125" on="1"/>
        <pt x="964" y="128" on="1"/>
        <pt x="943" y="251" on="1"/>
        <pt x="460" y="236" on="1"/>
        <pt x="458" y="172" on="1"/>
        <pt x="323" y="206" on="1"/>
        <pt x="357" y="788" on="1"/>
        <pt x="1717" y="801" on="1"/>
        <pt x="1706" y="185" on="1"/>
        <pt x="1569" y="180" on="1"/>
        <pt x="1562" y="243" on="1"/>
        <pt x="1075" y="245" on="1"/>
        <pt x="1089" y="140" on="1"/>
        <pt x="1896" y="122" on="1"/>
        <pt x="1900" y="25" on="1"/>
        <pt x="1081" y="5" on="1"/>
        <pt x="1083" y="-78" on="1"/>
        <pt x="2023" y="-81" on="1"/>
        <pt x="2002" y="-208" on="1"/>
        <pt x="42" y="-204" on="1"/>
      </contour>
      <contour>
        <pt x="347" y="1640" on="1"/>
        <pt x="1684" y="1623" on="1"/>
        <pt x="1697" y="1040" on="1"/>
        <pt x="1568" y="1056" on="1"/>
        <pt x="1559" y="1112" on="1"/>
        <pt x="492" y="1088" on="1"/>
        <pt x="481" y="1032" on="1"/>
        <pt x="351" y="1045" on="1"/>
      </contour>
      <contour>
        <pt x="70" y="1019" on="1"/>
        <pt x="1997" y="1019" on="1"/>
        <pt x="1998" y="907" on="1"/>
        <pt x="63" y="904" on="1"/>
      </contour>
      <contour>
        <pt x="495" y="1215" on="1"/>
        <pt x="1571" y="1190" on="1"/>
        <pt x="1558" y="1335" on="1"/>
        <pt x="487" y="1305" on="1"/>
      </contour>
      <contour>
        <pt x="1563" y="1499" on="1"/>
        <pt x="506" y="1527" on="1"/>
        <pt x="496" y="1408" on="1"/>
        <pt x="1578" y="1413" on="1"/>
      </contour>
      <contour>
        <pt x="1107" y="351" on="1"/>
        <pt x="1589" y="365" on="1"/>
        <pt x="1581" y="485" on="1"/>
        <pt x="1083" y="473" on="1"/>
      </contour>
      <contour>
        <pt x="489" y="338" on="1"/>
        <pt x="970" y="336" on="1"/>
        <pt x="935" y="476" on="1"/>
        <pt x="458" y="474" on="1"/>
      </contour>
      <contour>
        <pt x="1585" y="694" on="1"/>
        <pt x="1075" y="698" on="1"/>
        <pt x="1105" y="584" on="1"/>
        <pt x="1573" y="591" on="1"/>
      </contour>
      <contour>
        <pt x="496" y="575" on="1"/>
        <pt x="940" y="574" on="1"/>
        <pt x="962" y="694" on="1"/>
        <pt x="488" y="710" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          42 36 30
          PUSHW[ ]	/* 1 value pushed */
          349
          PUSHB[ ]	/* 5 values pushed */
          31 54 44 16 20
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 8 values pushed */
          1 57 49 5 1 43 37 26
          PUSHW[ ]	/* 1 value pushed */
          349
          NPUSHB[ ]	/* 9 values pushed */
          27 18 18 22 34 34 22 22 12
          PUSHW[ ]	/* 1 value pushed */
          349
          NPUSHB[ ]	/* 25 values pushed */
          13 55 45 13 31 1 27 13 13 27 1 31 4 61 3 3 9 23 35 35 23 23 56 48 8
          PUSHW[ ]	/* 1 value pushed */
          349
          PUSHB[ ]	/* 6 values pushed */
          64 9 19 3 4 3
          PUSHW[ ]	/* 1 value pushed */
          307
          NPUSHB[ ]	/* 11 values pushed */
          89 16 9 13 9 13 4 15 7 48 7
          PUSHW[ ]	/* 1 value pushed */
          307
          PUSHB[ ]	/* 6 values pushed */
          89 44 48 47 51 51
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 4 values pushed */
          47 53 72 51
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 5 values pushed */
          29 32 72 56 51
          PUSHW[ ]	/* 1 value pushed */
          305
          NPUSHB[ ]	/* 12 values pushed */
          89 54 56 53 59 15 59 1 14 3 10 59
          PUSHW[ ]	/* 1 value pushed */
          307
          PUSHB[ ]	/* 3 values pushed */
          89 32 35
          PUSHW[ ]	/* 1 value pushed */
          308
          NPUSHB[ ]	/* 19 values pushed */
          89 27 27 31 64 28 32 72 31 64 15 22 72 31 31 29 32 36 29
          PUSHW[ ]	/* 4 values pushed */
          307 89 39 -64
          PUSHB[ ]	/* 4 values pushed */
          47 53 72 39
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 5 values pushed */
          28 32 72 42 39
          PUSHW[ ]	/* 1 value pushed */
          305
          NPUSHB[ ]	/* 137 values pushed */
          89 11 4 27 4 43 4 3 59 48 123 48 2 187 48 235 48 251 48 3 68 48 84 48 2
          59 48 1 20 48 36 48 2 91 56 1 187 56 219 56 235 56 3 56 64 31 34 72 20 56
          1 107 56 123 56 2 56 64 23 26 72 68 56 84 56 2 43 56 59 56 2 15 56 1 212
          10 1 20 10 36 10 2 11 10 1 27 10 43 10 59 10 107 10 123 10 235 10 6 84 32
          212 32 2 20 32 1 100 32 116 32 2 64 32 80 32 2 4 32 1 212 36 1 107 36 123
          36 187 36 3 203 36 219 36 235 36 3 36
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 34 values pushed */
          15 18 72 59 36 1 36 36 1 0 36 1 2 31 42 47 42 79 42 207 42 4 15 42 1
          255 42 1 42 64 35 38 72 42
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 30 values pushed */
          13 16 72 31 42 1 0 42 1 11 3 4 48 56 10 32 36 42 42 36 32 10 56 48 4
          7 0 24 24 41
          PUSHW[ ]	/* 1 value pushed */
          307
          NPUSHB[ ]	/* 26 values pushed */
          89 128 24 176 24 192 24 208 24 4 79 24 1 48 24 1 15 24 31 24 2 13 3 24 0
          23
          PUSHW[ ]	/* 1 value pushed */
          308
          NPUSHB[ ]	/* 18 values pushed */
          89 20 255 0 1 191 0 207 0 223 0 3 0 64 12 18 72 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDC3" xMin="147" yMin="-261" xMax="2046" yMax="1706">
      <contour>
        <pt x="2046" y="39" on="1"/>
        <pt x="1966" y="-37" on="0"/>
        <pt x="1898" y="-114" on="1"/>
        <pt x="1613" y="154" on="0"/>
        <pt x="1415" y="547" on="1"/>
        <pt x="1413" y="-258" on="1"/>
        <pt x="1238" y="-261" on="1"/>
        <pt x="1264" y="582" on="1"/>
        <pt x="1005" y="170" on="0"/>
        <pt x="660" y="-109" on="1"/>
        <pt x="610" y="-52" on="0"/>
        <pt x="562" y="10" on="1"/>
        <pt x="942" y="311" on="0"/>
        <pt x="1215" y="721" on="1"/>
        <pt x="708" y="730" on="1"/>
        <pt x="725" y="878" on="1"/>
        <pt x="1263" y="885" on="1"/>
        <pt x="1265" y="1250" on="1"/>
        <pt x="819" y="1259" on="1"/>
        <pt x="825" y="1395" on="1"/>
        <pt x="1244" y="1376" on="1"/>
        <pt x="1243" y="1701" on="1"/>
        <pt x="1398" y="1706" on="1"/>
        <pt x="1389" y="1381" on="1"/>
        <pt x="1891" y="1386" on="1"/>
        <pt x="1897" y="1260" on="1"/>
        <pt x="1415" y="1252" on="1"/>
        <pt x="1410" y="864" on="1"/>
        <pt x="1977" y="885" on="1"/>
        <pt x="1965" y="731" on="1"/>
        <pt x="1459" y="727" on="1"/>
        <pt x="1687" y="284" on="0"/>
      </contour>
      <contour>
        <pt x="147" y="1472" on="1"/>
        <pt x="666" y="1470" on="1"/>
        <pt x="655" y="263" on="1"/>
        <pt x="281" y="253" on="1"/>
        <pt x="303" y="95" on="1"/>
        <pt x="149" y="115" on="1"/>
      </contour>
      <contour>
        <pt x="542" y="389" on="1"/>
        <pt x="511" y="1320" on="1"/>
        <pt x="295" y="1343" on="1"/>
        <pt x="270" y="389" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          25 18 14 25 29 2 0 0 29 30 13 13 18 6 29 14 9 11 11 34
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 8 values pushed */
          38 27 23 29 3 20 16 5
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 7 values pushed */
          38 37 6 6 43 41 36
          PUSHW[ ]	/* 1 value pushed */
          351
          PUSHB[ ]	/* 7 values pushed */
          64 37 37 37 35 41 35
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 11 values pushed */
          89 30 7 16 7 4 16 4 14 15 14
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 7 values pushed */
          89 27 15 26 18 19 18
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 19 values pushed */
          89 23 19 0 15 1 12 3 41 15 19 19 15 41 3 0 32 32 40
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 25 values pushed */
          89 16 21 32 21 176 21 3 21 21 15 32 1 13 32 32 80 32 2 0 32 1 16 3 32
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 5 values pushed */
          25 30 72 32 11
          PUSHW[ ]	/* 4 values pushed */
          -16 9 11 313
          PUSHB[ ]	/* 5 values pushed */
          89 9 9 2 0
          PUSHW[ ]	/* 4 values pushed */
          -16 2 0 313
          NPUSHB[ ]	/* 21 values pushed */
          89 175 6 191 6 207 6 3 6 64 31 38 72 6 6 2 64 11 15 72 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDCC" xMin="21" yMin="-305" xMax="2020" yMax="1692">
      <contour>
        <pt x="1283" y="415" on="1"/>
        <pt x="1437" y="427" on="1"/>
        <pt x="1258" y="524" on="0"/>
        <pt x="1179" y="650" on="1"/>
        <pt x="880" y="668" on="1"/>
        <pt x="830" y="521" on="0"/>
        <pt x="619" y="416" on="1"/>
        <pt x="764" y="433" on="1"/>
        <pt x="780" y="107" on="0"/>
        <pt x="653" y="-9" on="1"/>
        <pt x="582" y="-151" on="0"/>
        <pt x="277" y="-305" on="1"/>
        <pt x="247" y="-225" on="0"/>
        <pt x="185" y="-150" on="1"/>
        <pt x="480" y="-41" on="0"/>
        <pt x="535" y="85" on="1"/>
        <pt x="600" y="169" on="0"/>
        <pt x="608" y="394" on="1"/>
        <pt x="432" y="297" on="0"/>
        <pt x="133" y="218" on="1"/>
        <pt x="93" y="267" on="0"/>
        <pt x="21" y="326" on="1"/>
        <pt x="512" y="463" on="0"/>
        <pt x="705" y="652" on="1"/>
        <pt x="56" y="650" on="1"/>
        <pt x="57" y="803" on="1"/>
        <pt x="808" y="785" on="1"/>
        <pt x="830" y="862" on="0"/>
        <pt x="890" y="990" on="1"/>
        <pt x="223" y="989" on="1"/>
        <pt x="255" y="1117" on="1"/>
        <pt x="887" y="1125" on="1"/>
        <pt x="896" y="1214" on="0"/>
        <pt x="921" y="1318" on="1"/>
        <pt x="163" y="1281" on="1"/>
        <pt x="185" y="1437" on="1"/>
        <pt x="699" y="1420" on="1"/>
        <pt x="600" y="1517" on="0"/>
        <pt x="510" y="1604" on="1"/>
        <pt x="630" y="1690" on="1"/>
        <pt x="735" y="1611" on="0"/>
        <pt x="837" y="1496" on="1"/>
        <pt x="759" y="1434" on="1"/>
        <pt x="1188" y="1432" on="1"/>
        <pt x="1272" y="1557" on="0"/>
        <pt x="1398" y="1692" on="1"/>
        <pt x="1542" y="1639" on="1"/>
        <pt x="1461" y="1507" on="0"/>
        <pt x="1375" y="1427" on="1"/>
        <pt x="1858" y="1435" on="1"/>
        <pt x="1870" y="1293" on="1"/>
        <pt x="1057" y="1305" on="1"/>
        <pt x="1076" y="1196" on="0"/>
        <pt x="1047" y="1108" on="1"/>
        <pt x="1778" y="1108" on="1"/>
        <pt x="1764" y="974" on="1"/>
        <pt x="1045" y="984" on="1"/>
        <pt x="1017" y="885" on="0"/>
        <pt x="980" y="789" on="1"/>
        <pt x="1952" y="795" on="1"/>
        <pt x="1990" y="667" on="1"/>
        <pt x="1384" y="637" on="1"/>
        <pt x="1585" y="462" on="0"/>
        <pt x="2020" y="398" on="1"/>
        <pt x="1977" y="300" on="0"/>
        <pt x="1929" y="223" on="1"/>
        <pt x="1613" y="272" on="0"/>
        <pt x="1410" y="420" on="1"/>
        <pt x="1411" y="-272" on="1"/>
        <pt x="1272" y="-256" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          38 39 39 35 45 0 6 6 13 0 11 24 69 21
          PUSHW[ ]	/* 4 values pushed */
          -16 19 21 314
          PUSHB[ ]	/* 5 values pushed */
          89 19 19 65 63
          PUSHW[ ]	/* 4 values pushed */
          -16 65 63 319
          NPUSHB[ ]	/* 16 values pushed */
          89 65 67 17 16 2 4 61 67 17 4 24 58 25 25 24
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 8 values pushed */
          89 25 56 29 53 30 30 29
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 9 values pushed */
          89 30 25 30 13 35 69 11 13
          PUSHW[ ]	/* 4 values pushed */
          -16 11 13 313
          NPUSHB[ ]	/* 15 values pushed */
          89 65 34 11 46 45 45 35 51 34 48 42 35 35 34
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 34 values pushed */
          89 35 41 29 34 41 31 42 29 23 34 38 21 50 55 24 65 63 63 50 46 55 60 61 42
          36 36 31 39 24 19 21 60 28
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 4 values pushed */
          56 16 56 53
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 3 values pushed */
          31 31 58
          PUSHW[ ]	/* 3 values pushed */
          357 26 -16
          PUSHB[ ]	/* 5 values pushed */
          26 60 45 16 45
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 4 values pushed */
          46 46 68 48
          PUSHW[ ]	/* 3 values pushed */
          358 43 -16
          PUSHB[ ]	/* 4 values pushed */
          43 43 69 61
          PUSHW[ ]	/* 3 values pushed */
          361 3 -16
          PUSHB[ ]	/* 7 values pushed */
          3 3 69 56 7 1 68
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 7 values pushed */
          26 17 69 69 71 17 23
          PUSHW[ ]	/* 1 value pushed */
          362
          NPUSHB[ ]	/* 9 values pushed */
          4 16 4 4 7 19 21 21 39
          PUSHW[ ]	/* 3 values pushed */
          -16 39 343
          PUSHB[ ]	/* 8 values pushed */
          38 38 17 11 13 13 6 7
          PUSHW[ ]	/* 2 values pushed */
          353 17
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          SLOOP[ ]	/* SetLoopVariable */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDCD" xMin="36" yMin="-274" xMax="2033" yMax="1709">
      <contour>
        <pt x="36" y="520" on="1"/>
        <pt x="315" y="541" on="1"/>
        <pt x="329" y="1489" on="1"/>
        <pt x="768" y="1506" on="1"/>
        <pt x="828" y="1591" on="0"/>
        <pt x="844" y="1709" on="1"/>
        <pt x="1042" y="1656" on="1"/>
        <pt x="1004" y="1577" on="0"/>
        <pt x="956" y="1496" on="1"/>
        <pt x="1683" y="1479" on="1"/>
        <pt x="1665" y="634" on="1"/>
        <pt x="1790" y="723" on="0"/>
        <pt x="1905" y="833" on="1"/>
        <pt x="2033" y="716" on="1"/>
        <pt x="1858" y="582" on="0"/>
        <pt x="1652" y="443" on="1"/>
        <pt x="1676" y="49" on="1"/>
        <pt x="1684" y="-227" on="0"/>
        <pt x="1386" y="-225" on="1"/>
        <pt x="1243" y="-245" on="0"/>
        <pt x="1056" y="-239" on="1"/>
        <pt x="1066" y="-155" on="0"/>
        <pt x="1035" y="-74" on="1"/>
        <pt x="1199" y="-81" on="0"/>
        <pt x="1367" y="-93" on="1"/>
        <pt x="1520" y="-78" on="0"/>
        <pt x="1514" y="82" on="1"/>
        <pt x="1518" y="372" on="1"/>
        <pt x="918" y="-53" on="0"/>
        <pt x="120" y="-274" on="1"/>
        <pt x="108" y="-194" on="0"/>
        <pt x="48" y="-130" on="1"/>
        <pt x="735" y="51" on="0"/>
        <pt x="1306" y="402" on="1"/>
        <pt x="53" y="390" on="1"/>
      </contour>
      <contour>
        <pt x="485" y="525" on="1"/>
        <pt x="1501" y="536" on="1"/>
        <pt x="1509" y="714" on="1"/>
        <pt x="484" y="712" on="1"/>
      </contour>
      <contour>
        <pt x="1503" y="1347" on="1"/>
        <pt x="497" y="1339" on="1"/>
        <pt x="483" y="1186" on="1"/>
        <pt x="1502" y="1184" on="1"/>
      </contour>
      <contour>
        <pt x="472" y="861" on="1"/>
        <pt x="1527" y="834" on="1"/>
        <pt x="1515" y="1037" on="1"/>
        <pt x="492" y="1048" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          22 22 26 29 34 34 31 5
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 3 values pushed */
          6 6 8
          PUSHW[ ]	/* 3 values pushed */
          355 3 -16
          NPUSHB[ ]	/* 13 values pushed */
          3 12 13 13 33 16 10 33 36 44 42 4 16
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 12 values pushed */
          3 1 26 26 48 1 29 31 31 41 43 35
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 3 values pushed */
          64 1 31
          PUSHW[ ]	/* 4 values pushed */
          -16 29 31 316
          PUSHB[ ]	/* 8 values pushed */
          89 29 29 18 22 24 18 24
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 3 values pushed */
          89 15 10
          PUSHW[ ]	/* 1 value pushed */
          322
          PUSHB[ ]	/* 8 values pushed */
          89 15 15 0 27 34 0 34
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 19 values pushed */
          89 35 0 13 0 12 48 12 128 12 3 14 3 12 12 38 43 43 38
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 3 values pushed */
          89 41 46
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 51 values pushed */
          89 47 0 1 0 0 16 0 2 64 0 144 0 2 239 43 1 0 41 1 0 43 41 41 43
          0 3 2 20 15 18 31 18 47 18 3 13 18 6 0 5 16 5 2 14 3 5 5 2 2
          40
          PUSHW[ ]	/* 1 value pushed */
          313
          NPUSHB[ ]	/* 34 values pushed */
          89 8 47 2 63 2 95 2 111 2 4 127 2 175 2 191 2 239 2 255 2 5 47 2 79
          2 143 2 159 2 175 2 5 2
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDD4" xMin="40" yMin="-253" xMax="2024" yMax="1702">
      <contour>
        <pt x="744" y="1401" on="1"/>
        <pt x="741" y="1563" on="1"/>
        <pt x="1984" y="1582" on="1"/>
        <pt x="2005" y="1417" on="1"/>
        <pt x="1437" y="1405" on="1"/>
        <pt x="1385" y="1186" on="0"/>
        <pt x="1291" y="979" on="1"/>
        <pt x="1411" y="960" on="1"/>
        <pt x="1428" y="-249" on="1"/>
        <pt x="1242" y="-253" on="1"/>
        <pt x="1240" y="891" on="1"/>
        <pt x="1027" y="440" on="0"/>
        <pt x="738" y="85" on="1"/>
        <pt x="718" y="127" on="0"/>
        <pt x="602" y="209" on="1"/>
        <pt x="1035" y="725" on="0"/>
        <pt x="1289" y="1408" on="1"/>
      </contour>
      <contour>
        <pt x="40" y="340" on="1"/>
        <pt x="190" y="354" on="0"/>
        <pt x="342" y="436" on="1"/>
        <pt x="336" y="1041" on="1"/>
        <pt x="44" y="1050" on="1"/>
        <pt x="51" y="1217" on="1"/>
        <pt x="321" y="1186" on="1"/>
        <pt x="346" y="1696" on="1"/>
        <pt x="497" y="1702" on="1"/>
        <pt x="500" y="1183" on="1"/>
        <pt x="753" y="1201" on="1"/>
        <pt x="769" y="1037" on="1"/>
        <pt x="481" y="1074" on="1"/>
        <pt x="488" y="482" on="1"/>
        <pt x="622" y="505" on="0"/>
        <pt x="739" y="554" on="1"/>
        <pt x="745" y="457" on="0"/>
        <pt x="744" y="426" on="1"/>
        <pt x="420" y="289" on="0"/>
        <pt x="67" y="168" on="1"/>
      </contour>
      <contour>
        <pt x="1566" y="914" on="1"/>
        <pt x="1826" y="605" on="0"/>
        <pt x="2024" y="238" on="1"/>
        <pt x="1897" y="126" on="1"/>
        <pt x="1683" y="504" on="0"/>
        <pt x="1459" y="853" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 13 values pushed */
          28 0 34 21 0 16 28 9 30 21 17 3 37
          PUSHW[ ]	/* 6 values pushed */
          -16 37 347 42 16 355
          PUSHB[ ]	/* 6 values pushed */
          4 16 4 4 6 8
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 3 values pushed */
          9 34 12
          PUSHW[ ]	/* 3 values pushed */
          -16 12 346
          NPUSHB[ ]	/* 10 values pushed */
          14 14 9 42 3 19 3 40 16 40
          PUSHW[ ]	/* 1 value pushed */
          351
          NPUSHB[ ]	/* 9 values pushed */
          39 39 44 36 17 17 26 23 30
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 46 values pushed */
          64 19 39 40 40 9 0 14 0 12 48 12 2 12 12 12 34 15 9 31 9 127 9 175 9
          191 9 239 9 6 20 9 64 13 18 72 0 9 1 22 3 9 9 17 32 34
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 11 values pushed */
          89 42 37 37 10 10 6 29 21 22 21
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 37 values pushed */
          89 26 22 19 30 15 32 31 32 2 11 32 64 14 20 72 15 6 1 34 3 6 64 16 20
          72 32 6 22 22 6 32 3 17 1 36 17
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 6 values pushed */
          89 36 4 0 1 0
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 7 values pushed */
          89 32 24 48 24 2 24
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 18 values pushed */
          11 15 72 24 24 127 1 1 47 1 63 1 79 1 111 1 4 1
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDDF" xMin="3" yMin="-268" xMax="1927" yMax="1710">
      <contour>
        <pt x="1189" y="1450" on="1"/>
        <pt x="1927" y="1448" on="1"/>
        <pt x="1912" y="-226" on="1"/>
        <pt x="1788" y="-218" on="1"/>
        <pt x="1754" y="-7" on="1"/>
        <pt x="1325" y="-2" on="1"/>
        <pt x="1331" y="-204" on="1"/>
        <pt x="1153" y="-198" on="1"/>
      </contour>
      <contour>
        <pt x="70" y="1353" on="1"/>
        <pt x="358" y="1355" on="1"/>
        <pt x="367" y="1507" on="0"/>
        <pt x="365" y="1710" on="1"/>
        <pt x="511" y="1690" on="1"/>
        <pt x="520" y="1507" on="0"/>
        <pt x="528" y="1348" on="1"/>
        <pt x="975" y="1330" on="1"/>
        <pt x="984" y="575" on="0"/>
        <pt x="930" y="113" on="1"/>
        <pt x="941" y="-222" on="0"/>
        <pt x="681" y="-218" on="1"/>
        <pt x="616" y="-210" on="0"/>
        <pt x="444" y="-190" on="1"/>
        <pt x="449" y="-126" on="0"/>
        <pt x="421" y="-33" on="1"/>
        <pt x="557" y="-43" on="0"/>
        <pt x="625" y="-60" on="1"/>
        <pt x="793" y="-77" on="0"/>
        <pt x="791" y="155" on="1"/>
        <pt x="815" y="608" on="0"/>
        <pt x="804" y="1203" on="1"/>
        <pt x="517" y="1201" on="1"/>
        <pt x="488" y="1051" on="0"/>
        <pt x="487" y="906" on="1"/>
        <pt x="489" y="125" on="0"/>
        <pt x="113" y="-268" on="1"/>
        <pt x="65" y="-204" on="0"/>
        <pt x="3" y="-140" on="1"/>
        <pt x="320" y="218" on="0"/>
        <pt x="329" y="958" on="1"/>
        <pt x="354" y="1048" on="0"/>
        <pt x="367" y="1194" on="1"/>
        <pt x="85" y="1187" on="1"/>
      </contour>
      <contour>
        <pt x="1761" y="1285" on="1"/>
        <pt x="1349" y="1267" on="1"/>
        <pt x="1323" y="113" on="1"/>
        <pt x="1790" y="120" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          45 2
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 3 values pushed */
          3 44 6
          PUSHW[ ]	/* 4 values pushed */
          354 7 18 355
          NPUSHB[ ]	/* 19 values pushed */
          26 3 7 26 26 7 3 3 47 38 41 41 34 36 36 38 23 23 33
          PUSHW[ ]	/* 4 values pushed */
          352 40 14 355
          NPUSHB[ ]	/* 18 values pushed */
          64 9 38 15 3 1 15 7 1 16 3 3 7 3 7 5 34 36
          PUSHW[ ]	/* 4 values pushed */
          -16 34 36 313
          NPUSHB[ ]	/* 12 values pushed */
          89 34 64 20 27 72 34 34 21 19 25 19
          PUSHW[ ]	/* 1 value pushed */
          318
          PUSHB[ ]	/* 3 values pushed */
          89 44 5
          PUSHW[ ]	/* 1 value pushed */
          315
          PUSHB[ ]	/* 5 values pushed */
          89 30 41 8 41
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 22 values pushed */
          89 14 8 44 8 44 8 25 0 23 23 223 25 1 15 25 1 27 3 25 0 43
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 36 values pushed */
          89 48 11 176 11 192 11 240 11 4 11 11 240 0 1 0 0 32 0 48 0 96 0 4 175
          0 1 80 0 96 0 2 63 0 1 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDE6" xMin="16" yMin="-168" xMax="1997" yMax="1736">
      <contour>
        <pt x="91" y="-15" on="1"/>
        <pt x="939" y="-23" on="1"/>
        <pt x="941" y="509" on="1"/>
        <pt x="329" y="499" on="1"/>
        <pt x="328" y="653" on="1"/>
        <pt x="1748" y="676" on="1"/>
        <pt x="1717" y="507" on="1"/>
        <pt x="1090" y="522" on="1"/>
        <pt x="1100" y="-11" on="1"/>
        <pt x="1938" y="-8" on="1"/>
        <pt x="1941" y="-168" on="1"/>
        <pt x="88" y="-168" on="1"/>
      </contour>
      <contour>
        <pt x="108" y="1434" on="1"/>
        <pt x="993" y="1444" on="1"/>
        <pt x="958" y="1522" on="0"/>
        <pt x="873" y="1642" on="1"/>
        <pt x="1012" y="1736" on="1"/>
        <pt x="1093" y="1584" on="0"/>
        <pt x="1169" y="1504" on="1"/>
        <pt x="1071" y="1442" on="1"/>
        <pt x="1938" y="1450" on="1"/>
        <pt x="1938" y="1077" on="1"/>
        <pt x="1756" y="1071" on="1"/>
        <pt x="1754" y="1310" on="1"/>
        <pt x="277" y="1295" on="1"/>
        <pt x="284" y="1080" on="1"/>
        <pt x="106" y="1075" on="1"/>
      </contour>
      <contour>
        <pt x="777" y="1184" on="1"/>
        <pt x="875" y="1073" on="1"/>
        <pt x="492" y="769" on="0"/>
        <pt x="131" y="603" on="1"/>
        <pt x="95" y="683" on="0"/>
        <pt x="16" y="734" on="1"/>
        <pt x="414" y="921" on="0"/>
      </contour>
      <contour>
        <pt x="1271" y="1195" on="1"/>
        <pt x="1684" y="956" on="0"/>
        <pt x="1997" y="717" on="1"/>
        <pt x="1885" y="604" on="1"/>
        <pt x="1585" y="834" on="0"/>
        <pt x="1194" y="1091" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          3 3 1 30 6 18 11 6 37 18 34 39 39 22 28 10 8
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 5 values pushed */
          1 19 13 13 16
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 4 values pushed */
          15 27 16 27
          PUSHW[ ]	/* 1 value pushed */
          346
          PUSHB[ ]	/* 8 values pushed */
          28 28 25 10 37 36 36 21
          PUSHW[ ]	/* 1 value pushed */
          355
          NPUSHB[ ]	/* 12 values pushed */
          1 15 26 22 22 41 11 26 30 32 32 25
          PUSHW[ ]	/* 1 value pushed */
          355
          NPUSHB[ ]	/* 60 values pushed */
          64 26 15 37 31 37 95 37 143 37 4 37 64 35 40 72 37 64 27 30 72 15 30 31 30
          95 30 143 30 4 17 3 30 64 35 40 72 30 64 27 30 72 37 30 37 30 24 11 34 34
          27 27 24 22 22 26 26 24 12 24
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 24 values pushed */
          89 15 127 16 1 16 16 144 16 2 0 16 160 16 2 12 3 16 16 12 7 3 4 3
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 13 values pushed */
          89 48 4 144 4 176 4 192 4 224 4 5 4
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 41 values pushed */
          31 39 72 4 4 0 19 47 12 63 12 207 12 3 15 12 127 12 191 12 239 12 255 12 5
          12 12 64 34 38 72 0 12 16 12 2 14 3 12 0 11
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 3 values pushed */
          89 8 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDE8" xMin="54" yMin="-265" xMax="2015" yMax="1539">
      <contour>
        <pt x="54" y="1536" on="1"/>
        <pt x="2015" y="1539" on="1"/>
        <pt x="2014" y="1367" on="1"/>
        <pt x="1013" y="1391" on="1"/>
        <pt x="1042" y="937" on="1"/>
        <pt x="1120" y="1052" on="1"/>
        <pt x="1585" y="807" on="0"/>
        <pt x="1898" y="588" on="1"/>
        <pt x="1765" y="429" on="1"/>
        <pt x="1472" y="674" on="0"/>
        <pt x="1027" y="903" on="1"/>
        <pt x="1039" y="-260" on="1"/>
        <pt x="843" y="-265" on="1"/>
        <pt x="859" y="1367" on="1"/>
        <pt x="68" y="1358" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          8 7 7 2 14 2 2 16 14 4 11
          PUSHW[ ]	/* 1 value pushed */
          358
          NPUSHB[ ]	/* 66 values pushed */
          64 12 12 16 15 63 12 79 12 159 12 3 15 12 175 12 207 12 223 12 4 21 2 95 12
          111 12 127 12 3 15 12 47 12 63 12 79 12 111 12 159 12 175 12 207 12 223 12 9 26
          3 12 64 42 45 72 12 64 11 20 72 12 4 10 5 10
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 9 values pushed */
          89 5 16 5 5 0 12 7 7
          PUSHW[ ]	/* 4 values pushed */
          -16 8 7 318
          PUSHB[ ]	/* 6 values pushed */
          89 8 3 14 0 14
          PUSHW[ ]	/* 1 value pushed */
          319
          NPUSHB[ ]	/* 41 values pushed */
          89 47 0 63 0 111 0 127 0 143 0 5 47 0 111 0 127 0 175 0 191 0 239 0 255
          0 7 47 0 63 0 79 0 111 0 175 0 239 0 6 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[1]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDEF" xMin="25" yMin="-295" xMax="2004" yMax="1690">
      <contour>
        <pt x="25" y="-117" on="1"/>
        <pt x="754" y="9" on="0"/>
        <pt x="980" y="298" on="1"/>
        <pt x="67" y="310" on="1"/>
        <pt x="65" y="446" on="1"/>
        <pt x="1046" y="473" on="1"/>
        <pt x="1122" y="666" on="0"/>
        <pt x="1135" y="1202" on="1"/>
        <pt x="1272" y="1185" on="1"/>
        <pt x="1305" y="686" on="0"/>
        <pt x="1217" y="475" on="1"/>
        <pt x="1988" y="453" on="1"/>
        <pt x="2004" y="293" on="1"/>
        <pt x="1176" y="329" on="1"/>
        <pt x="1161" y="263" on="0"/>
        <pt x="1140" y="231" on="1"/>
        <pt x="1570" y="78" on="0"/>
        <pt x="1993" y="-136" on="1"/>
        <pt x="1893" y="-274" on="1"/>
        <pt x="1462" y="-67" on="0"/>
        <pt x="1055" y="116" on="1"/>
        <pt x="783" y="-130" on="0"/>
        <pt x="123" y="-295" on="1"/>
        <pt x="78" y="-210" on="0"/>
      </contour>
      <contour>
        <pt x="116" y="1403" on="1"/>
        <pt x="1030" y="1433" on="1"/>
        <pt x="989" y="1485" on="0"/>
        <pt x="905" y="1629" on="1"/>
        <pt x="1015" y="1690" on="1"/>
        <pt x="1115" y="1603" on="0"/>
        <pt x="1196" y="1468" on="1"/>
        <pt x="1066" y="1419" on="1"/>
        <pt x="1941" y="1395" on="1"/>
        <pt x="1920" y="1059" on="1"/>
        <pt x="1762" y="1038" on="1"/>
        <pt x="1762" y="1251" on="1"/>
        <pt x="260" y="1253" on="1"/>
        <pt x="284" y="1048" on="1"/>
        <pt x="111" y="1064" on="1"/>
      </contour>
      <contour>
        <pt x="337" y="876" on="1"/>
        <pt x="589" y="760" on="0"/>
        <pt x="782" y="650" on="1"/>
        <pt x="709" y="507" on="1"/>
        <pt x="492" y="639" on="0"/>
        <pt x="269" y="731" on="1"/>
      </contour>
      <contour>
        <pt x="517" y="1200" on="1"/>
        <pt x="762" y="1063" on="0"/>
        <pt x="942" y="944" on="1"/>
        <pt x="879" y="823" on="1"/>
        <pt x="667" y="949" on="0"/>
        <pt x="453" y="1081" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          42 41 31 25 25 28
          PUSHW[ ]	/* 3 values pushed */
          -16 28 351
          NPUSHB[ ]	/* 16 values pushed */
          27 20 15 15 2 48 47 45 50 47 50 47 50 5 37 8
          PUSHW[ ]	/* 1 value pushed */
          356
          PUSHB[ ]	/* 6 values pushed */
          7 30 7 30 7 10
          PUSHW[ ]	/* 1 value pushed */
          357
          PUSHB[ ]	/* 8 values pushed */
          5 18 17 17 38 12 12 33
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 19 values pushed */
          34 2 27 5 41 27 5 34 34 5 27 41 4 38 52 39 44 44 37
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 10 values pushed */
          38 64 22 0 0 38 3 3 38 47
          PUSHW[ ]	/* 4 values pushed */
          -16 48 47 313
          NPUSHB[ ]	/* 33 values pushed */
          89 175 48 1 48 48 1 15 48 1 11 48 27 48 28 144 28 2 0 28 96 28 112 28 192
          28 208 28 5 14 3 28 41
          PUSHW[ ]	/* 4 values pushed */
          -16 42 41 314
          NPUSHB[ ]	/* 13 values pushed */
          89 15 42 1 15 4 42 39 64 44 16 39 44
          PUSHW[ ]	/* 1 value pushed */
          312
          NPUSHB[ ]	/* 9 values pushed */
          89 39 39 4 45 50 16 45 50
          PUSHW[ ]	/* 1 value pushed */
          310
          NPUSHB[ ]	/* 23 values pushed */
          89 16 7 1 7 7 45 36 38 38 0 34 16 34 2 11 3 34 34 36 4 24 36
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 10 values pushed */
          89 20 15 15 22 13 13 3 4 3
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 45 values pushed */
          89 10 4 4 0 31 207 24 1 15 24 31 24 63 24 79 24 111 24 127 24 175 24 7 63
          24 111 24 127 24 175 24 223 24 5 32 24 1 15 24 1 12 3 24 17
          PUSHW[ ]	/* 4 values pushed */
          -16 18 17 316
          PUSHB[ ]	/* 6 values pushed */
          89 18 18 0 22 0
          PUSHW[ ]	/* 4 values pushed */
          -16 22 0 318
          NPUSHB[ ]	/* 29 values pushed */
          89 255 22 1 59 22 139 22 155 22 3 47 22 1 2 31 22 1 22 64 18 21 72 22 64
          11 15 72 22
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDS[ ]	/* SetDeltaShiftInGState */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDF0" xMin="41" yMin="-279" xMax="2020" yMax="1709">
      <contour>
        <pt x="803" y="1602" on="1"/>
        <pt x="1848" y="1589" on="1"/>
        <pt x="1856" y="609" on="1"/>
        <pt x="1668" y="588" on="1"/>
        <pt x="1705" y="656" on="1"/>
        <pt x="1302" y="655" on="1"/>
        <pt x="1376" y="463" on="0"/>
        <pt x="1475" y="330" on="1"/>
        <pt x="1652" y="439" on="0"/>
        <pt x="1842" y="557" on="1"/>
        <pt x="1934" y="422" on="1"/>
        <pt x="1753" y="346" on="0"/>
        <pt x="1553" y="232" on="1"/>
        <pt x="1759" y="44" on="0"/>
        <pt x="2020" y="-102" on="1"/>
        <pt x="1976" y="-167" on="0"/>
        <pt x="1916" y="-252" on="1"/>
        <pt x="1342" y="96" on="0"/>
        <pt x="1148" y="665" on="1"/>
        <pt x="950" y="651" on="1"/>
        <pt x="974" y="-18" on="1"/>
        <pt x="1091" y="45" on="0"/>
        <pt x="1333" y="134" on="1"/>
        <pt x="1353" y="85" on="0"/>
        <pt x="1363" y="4" on="1"/>
        <pt x="1196" y="-49" on="0"/>
        <pt x="964" y="-206" on="1"/>
        <pt x="891" y="-231" on="0"/>
        <pt x="870" y="-272" on="1"/>
        <pt x="743" y="-156" on="1"/>
        <pt x="824" y="-80" on="0"/>
        <pt x="818" y="32" on="1"/>
      </contour>
      <contour>
        <pt x="44" y="491" on="1"/>
        <pt x="364" y="790" on="0"/>
        <pt x="564" y="1178" on="1"/>
        <pt x="731" y="1094" on="1"/>
        <pt x="613" y="933" on="0"/>
        <pt x="512" y="796" on="1"/>
        <pt x="513" y="-279" on="1"/>
        <pt x="339" y="-265" on="1"/>
        <pt x="348" y="604" on="1"/>
        <pt x="225" y="455" on="0"/>
        <pt x="105" y="337" on="1"/>
        <pt x="64" y="420" on="0"/>
      </contour>
      <contour>
        <pt x="1700" y="1431" on="1"/>
        <pt x="951" y="1463" on="1"/>
        <pt x="956" y="1182" on="1"/>
        <pt x="1695" y="1204" on="1"/>
      </contour>
      <contour>
        <pt x="41" y="1113" on="1"/>
        <pt x="365" y="1351" on="0"/>
        <pt x="541" y="1709" on="1"/>
        <pt x="705" y="1611" on="1"/>
        <pt x="474" y="1256" on="0"/>
        <pt x="114" y="991" on="1"/>
        <pt x="69" y="1070" on="0"/>
      </contour>
      <contour>
        <pt x="973" y="804" on="1"/>
        <pt x="1692" y="799" on="1"/>
        <pt x="1688" y="1054" on="1"/>
        <pt x="959" y="1045" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          12 7 7 5 16 14 14 22 24 24 2 20 28 29 29 31 38 5
          PUSHW[ ]	/* 3 values pushed */
          352 18 -16
          PUSHB[ ]	/* 4 values pushed */
          18 46 55 20
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 4 values pushed */
          31 34 16 34
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 7 values pushed */
          35 53 48 48 50 16 50
          PUSHW[ ]	/* 1 value pushed */
          350
          NPUSHB[ ]	/* 10 values pushed */
          51 35 51 38 9 10 10 47 56 2
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 11 values pushed */
          18 31 39 3 3 60 39 42 32 32 38
          PUSHW[ ]	/* 1 value pushed */
          353
          NPUSHB[ ]	/* 18 values pushed */
          64 39 7 12 12 14 5 40 37 42 35 3 3 9 19 39 22 24
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 4 values pushed */
          89 22 42 32
          PUSHW[ ]	/* 1 value pushed */
          317
          PUSHB[ ]	/* 6 values pushed */
          89 42 10 16 9 10
          PUSHW[ ]	/* 1 value pushed */
          311
          PUSHB[ ]	/* 6 values pushed */
          89 9 5 19 55 19
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 3 values pushed */
          89 55 48
          PUSHW[ ]	/* 4 values pushed */
          -16 53 48 315
          PUSHB[ ]	/* 3 values pushed */
          89 53 35
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 6 values pushed */
          12 15 72 35 58 34
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 7 values pushed */
          12 15 72 34 46 46 58
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 4 values pushed */
          89 45 55 46
          PUSHW[ ]	/* 1 value pushed */
          313
          PUSHB[ ]	/* 3 values pushed */
          120 48 14
          PUSHW[ ]	/* 4 values pushed */
          -16 16 14 315
          NPUSHB[ ]	/* 17 values pushed */
          89 16 16 28 46 55 9 22 4 0 39 20 64 42 53 45 28
          PUSHW[ ]	/* 1 value pushed */
          -16
          PUSHB[ ]	/* 8 values pushed */
          28 64 11 15 72 28 51 50
          PUSHW[ ]	/* 1 value pushed */
          -64
          PUSHB[ ]	/* 8 values pushed */
          11 15 72 50 50 0 0 45
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 15 values pushed */
          89 63 0 79 0 2 48 0 1 176 0 240 0 2 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[01101]	/* MoveDirectRelPt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDF9" xMin="13" yMin="-262" xMax="2019" yMax="1703">
      <contour>
        <pt x="581" y="-254" on="1"/>
        <pt x="427" y="-262" on="1"/>
        <pt x="450" y="786" on="1"/>
        <pt x="282" y="624" on="0"/>
        <pt x="111" y="455" on="1"/>
        <pt x="59" y="535" on="0"/>
        <pt x="13" y="594" on="1"/>
        <pt x="404" y="916" on="0"/>
        <pt x="612" y="1318" on="1"/>
        <pt x="80" y="1296" on="1"/>
        <pt x="64" y="1471" on="1"/>
        <pt x="688" y="1466" on="1"/>
        <pt x="772" y="1574" on="0"/>
        <pt x="778" y="1703" on="1"/>
        <pt x="971" y="1694" on="1"/>
        <pt x="928" y="1554" on="0"/>
        <pt x="871" y="1473" on="1"/>
        <pt x="2019" y="1476" on="1"/>
        <pt x="2018" y="1307" on="1"/>
        <pt x="819" y="1299" on="1"/>
        <pt x="748" y="1188" on="0"/>
        <pt x="664" y="1077" on="1"/>
        <pt x="1765" y="1082" on="1"/>
        <pt x="1742" y="7" on="1"/>
        <pt x="1779" y="-239" on="0"/>
        <pt x="1530" y="-239" on="1"/>
        <pt x="1433" y="-219" on="0"/>
        <pt x="1183" y="-241" on="1"/>
        <pt x="1178" y="-150" on="0"/>
        <pt x="1171" y="-56" on="1"/>
        <pt x="1366" y="-70" on="0"/>
        <pt x="1447" y="-73" on="1"/>
        <pt x="1610" y="-79" on="0"/>
        <pt x="1612" y="50" on="1"/>
        <pt x="1588" y="187" on="1"/>
        <pt x="604" y="199" on="1"/>
      </contour>
      <contour>
        <pt x="598" y="328" on="1"/>
        <pt x="1602" y="313" on="1"/>
        <pt x="1604" y="584" on="1"/>
        <pt x="596" y="580" on="1"/>
      </contour>
      <contour>
        <pt x="1620" y="951" on="1"/>
        <pt x="606" y="948" on="1"/>
        <pt x="601" y="711" on="1"/>
        <pt x="1583" y="710" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          29 9 29 33 0 9 6 18 13
          PUSHW[ ]	/* 1 value pushed */
          355
          PUSHB[ ]	/* 6 values pushed */
          14 14 21 11 16 8
          PUSHW[ ]	/* 1 value pushed */
          358
          PUSHB[ ]	/* 7 values pushed */
          19 19 0 18 43 37 23
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 10 values pushed */
          33 33 45 1 4 6 6 42 36 0
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 4 values pushed */
          64 1 31 25
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 10 values pushed */
          89 31 31 27 29 1 1 27 29 27
          PUSHW[ ]	/* 1 value pushed */
          319
          PUSHB[ ]	/* 3 values pushed */
          89 36 35
          PUSHW[ ]	/* 7 values pushed */
          314 89 6 -16 4 6 315
          PUSHB[ ]	/* 6 values pushed */
          89 4 4 39 42 39
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 6 values pushed */
          89 2 41 42 21 41
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 47 values pushed */
          89 15 36 31 36 2 13 15 42 95 42 2 31 42 79 42 175 42 255 42 4 36 42 21 21
          42 36 3 10 15 29 31 29 47 29 3 14 3 29 14 13 13 10 19 9 10 9
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 10 values pushed */
          89 16 48 10 80 10 96 10 3 10
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEDFB" xMin="55" yMin="-289" xMax="2042" yMax="1712">
      <contour>
        <pt x="674" y="164" on="1"/>
        <pt x="795" y="311" on="1"/>
        <pt x="954" y="196" on="0"/>
        <pt x="1203" y="68" on="1"/>
        <pt x="1445" y="320" on="0"/>
        <pt x="1615" y="519" on="1"/>
        <pt x="595" y="504" on="1"/>
        <pt x="580" y="678" on="1"/>
        <pt x="1841" y="677" on="1"/>
        <pt x="1851" y="516" on="1"/>
        <pt x="1596" y="242" on="0"/>
        <pt x="1354" y="10" on="1"/>
        <pt x="1495" y="-87" on="0"/>
        <pt x="1641" y="-172" on="1"/>
        <pt x="1541" y="-289" on="1"/>
        <pt x="1090" y="-36" on="0"/>
      </contour>
      <contour>
        <pt x="1355" y="1712" on="1"/>
        <pt x="1315" y="1665" on="1"/>
        <pt x="1615" y="1157" on="0"/>
        <pt x="2042" y="1003" on="1"/>
        <pt x="1984" y="920" on="0"/>
        <pt x="1907" y="825" on="1"/>
        <pt x="1479" y="1084" on="0"/>
        <pt x="1227" y="1530" on="1"/>
        <pt x="1018" y="1102" on="0"/>
        <pt x="565" y="804" on="1"/>
        <pt x="510" y="901" on="0"/>
        <pt x="448" y="980" on="1"/>
        <pt x="954" y="1220" on="0"/>
        <pt x="1182" y="1689" on="1"/>
      </contour>
      <contour>
        <pt x="295" y="731" on="1"/>
        <pt x="388" y="669" on="0"/>
        <pt x="479" y="644" on="1"/>
        <pt x="352" y="208" on="0"/>
        <pt x="221" y="-198" on="1"/>
        <pt x="59" y="-149" on="1"/>
        <pt x="222" y="311" on="0"/>
      </contour>
      <contour>
        <pt x="145" y="1568" on="1"/>
        <pt x="322" y="1417" on="0"/>
        <pt x="519" y="1237" on="1"/>
        <pt x="369" y="1119" on="1"/>
        <pt x="227" y="1308" on="0"/>
        <pt x="55" y="1454" on="1"/>
      </contour>
      <contour>
        <pt x="1018" y="1084" on="1"/>
        <pt x="1143" y="1168" on="1"/>
        <pt x="1314" y="1012" on="0"/>
        <pt x="1423" y="839" on="1"/>
        <pt x="1305" y="747" on="1"/>
        <pt x="1172" y="944" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 25 values pushed */
          6 11 3 3 13 1 6 0 25 21 19 19 14 13 13 9 34 1 0 0 5 34 47 16 47
          PUSHW[ ]	/* 1 value pushed */
          349
          PUSHB[ ]	/* 4 values pushed */
          46 23 17 29
          PUSHW[ ]	/* 1 value pushed */
          358
          PUSHB[ ]	/* 4 values pushed */
          16 16 16 44
          PUSHW[ ]	/* 3 values pushed */
          -16 44 346
          PUSHB[ ]	/* 4 values pushed */
          43 40 16 40
          PUSHW[ ]	/* 1 value pushed */
          350
          PUSHB[ ]	/* 5 values pushed */
          39 25 27 27 30
          PUSHW[ ]	/* 4 values pushed */
          355 32 34 356
          NPUSHB[ ]	/* 15 values pushed */
          35 43 35 5 42 5 32 39 16 46 4 9 9 50 37
          PUSHW[ ]	/* 3 values pushed */
          -16 37 345
          NPUSHB[ ]	/* 68 values pushed */
          64 42 43 32 44 64 44 2 44 44 7 29 39 40 42 37 15 37 1 40 37 40 37 27 29
          23 17 17 25 47 29 1 0 29 112 29 2 32 29 48 29 64 29 96 29 144 29 176 29 224
          29 7 0 29 48 29 160 29 192 29 208 29 240 29 6 11 3 29
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 12 values pushed */
          45 48 72 29 29 21 32 30 30 7 25 27
          PUSHW[ ]	/* 4 values pushed */
          -16 25 27 314
          NPUSHB[ ]	/* 15 values pushed */
          89 25 25 21 3 11 35 34 34 0 14 0 16 1 0
          PUSHW[ ]	/* 1 value pushed */
          312
          NPUSHB[ ]	/* 9 values pushed */
          89 46 47 47 7 9 6 7 6
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 21 values pushed */
          89 11 13 0 1 1 95 7 1 0 7 1 11 3 1 7 1 7 19 13 19
          PUSHW[ ]	/* 4 values pushed */
          -16 21 19 316
          PUSHB[ ]	/* 8 values pushed */
          89 0 21 1 16 3 21 13
          PUSHW[ ]	/* 4 values pushed */
          -16 14 13 314
          NPUSHB[ ]	/* 22 values pushed */
          89 14 64 38 43 72 14 64 24 34 72 14 64 18 21 72 14 64 11 15 72 14
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEE00" xMin="3" yMin="-204" xMax="2030" yMax="1700">
      <contour>
        <pt x="1288" y="1694" on="1"/>
        <pt x="1439" y="1678" on="1"/>
        <pt x="1437" y="1182" on="1"/>
        <pt x="1911" y="1331" on="1"/>
        <pt x="1896" y="937" on="0"/>
        <pt x="1870" y="666" on="1"/>
        <pt x="1896" y="410" on="0"/>
        <pt x="1667" y="401" on="1"/>
        <pt x="1601" y="396" on="0"/>
        <pt x="1493" y="392" on="1"/>
        <pt x="1464" y="498" on="0"/>
        <pt x="1482" y="594" on="1"/>
        <pt x="1569" y="568" on="0"/>
        <pt x="1617" y="567" on="1"/>
        <pt x="1722" y="556" on="0"/>
        <pt x="1755" y="702" on="1"/>
        <pt x="1748" y="879" on="0"/>
        <pt x="1743" y="1123" on="1"/>
        <pt x="1419" y="1030" on="1"/>
        <pt x="1419" y="165" on="1"/>
        <pt x="1286" y="174" on="1"/>
        <pt x="1280" y="989" on="1"/>
        <pt x="973" y="892" on="1"/>
        <pt x="957" y="109" on="1"/>
        <pt x="985" y="-62" on="0"/>
        <pt x="1129" y="-24" on="1"/>
        <pt x="1618" y="-31" on="1"/>
        <pt x="1820" y="-32" on="0"/>
        <pt x="1835" y="97" on="1"/>
        <pt x="1869" y="218" on="0"/>
        <pt x="1880" y="411" on="1"/>
        <pt x="1970" y="360" on="0"/>
        <pt x="2030" y="349" on="1"/>
        <pt x="2005" y="150" on="0"/>
        <pt x="1968" y="27" on="1"/>
        <pt x="1924" y="-204" on="0"/>
        <pt x="1686" y="-187" on="1"/>
        <pt x="1088" y="-190" on="1"/>
        <pt x="811" y="-200" on="0"/>
        <pt x="796" y="86" on="1"/>
        <pt x="812" y="837" on="1"/>
        <pt x="651" y="783" on="1"/>
        <pt x="635" y="935" on="1"/>
        <pt x="813" y="996" on="1"/>
        <pt x="815" y="1447" on="1"/>
        <pt x="982" y="1452" on="1"/>
        <pt x="987" y="1033" on="1"/>
        <pt x="1275" y="1126" on="1"/>
      </contour>
      <contour>
        <pt x="3" y="114" on="1"/>
        <pt x="156" y="155" on="0"/>
        <pt x="305" y="204" on="1"/>
        <pt x="306" y="997" on="1"/>
        <pt x="54" y="985" on="1"/>
        <pt x="27" y="1115" on="1"/>
        <pt x="306" y="1118" on="1"/>
        <pt x="299" y="1700" on="1"/>
        <pt x="452" y="1684" on="1"/>
        <pt x="440" y="1139" on="1"/>
        <pt x="684" y="1143" on="1"/>
        <pt x="697" y="991" on="1"/>
        <pt x="434" y="974" on="1"/>
        <pt x="432" y="245" on="1"/>
        <pt x="576" y="273" on="0"/>
        <pt x="716" y="319" on="1"/>
        <pt x="709" y="250" on="0"/>
        <pt x="725" y="195" on="1"/>
        <pt x="378" y="79" on="0"/>
        <pt x="55" y="-52" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          11 65 63 52 65 63 61 59 41 41 42 42 39 61 52 48 11 2 47 19
          PUSHW[ ]	/* 1 value pushed */
          353
          PUSHB[ ]	/* 4 values pushed */
          20 46 43 23
          PUSHW[ ]	/* 4 values pushed */
          353 39 30 355
          PUSHB[ ]	/* 3 values pushed */
          32 32 5
          PUSHW[ ]	/* 1 value pushed */
          352
          NPUSHB[ ]	/* 13 values pushed */
          20 39 50 15 15 69 50 67 48 48 57 54 61
          PUSHW[ ]	/* 1 value pushed */
          352
          PUSHB[ ]	/* 8 values pushed */
          64 50 50 61 48 63 67 48
          PUSHW[ ]	/* 1 value pushed */
          317
          NPUSHB[ ]	/* 11 values pushed */
          89 46 43 2 47 43 47 42 3 41 42
          PUSHW[ ]	/* 1 value pushed */
          316
          NPUSHB[ ]	/* 21 values pushed */
          89 20 20 25 40 40 22 21 18 22 18 41 17 67 41 67 41 37 17 25 37
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 7 values pushed */
          89 32 30 30 25 63 65
          PUSHW[ ]	/* 1 value pushed */
          316
          PUSHB[ ]	/* 5 values pushed */
          89 9 7 13 7
          PUSHW[ ]	/* 1 value pushed */
          317
          PUSHB[ ]	/* 7 values pushed */
          89 11 13 60 52 53 52
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 43 values pushed */
          89 44 44 0 57 53 63 13 53 53 13 63 3 3 25 64 24 40 72 25 55 55 4 0 52
          0 68 0 100 0 116 0 132 0 196 0 228 0 244 0 9 11 0
          PUSHW[ ]	/* 1 value pushed */
          -64
          NPUSHB[ ]	/* 20 values pushed */
          29 40 72 0 0 16 0 64 0 112 0 128 0 5 20 2 0 0 17 17
          PUSHW[ ]	/* 1 value pushed */
          -24
          PUSHB[ ]	/* 4 values pushed */
          11 15 72 17
          PUSHW[ ]	/* 1 value pushed */
          -40
          PUSHB[ ]	/* 5 values pushed */
          16 40 72 3 17
          PUSHW[ ]	/* 1 value pushed */
          325
          NPUSHB[ ]	/* 9 values pushed */
          89 47 3 79 3 2 3 16 3
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01110]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEE02" xMin="230" yMin="-274" xMax="1812" yMax="1694">
      <contour>
        <pt x="242" y="1437" on="1"/>
        <pt x="750" y="1446" on="1"/>
        <pt x="791" y="1525" on="0"/>
        <pt x="877" y="1694" on="1"/>
        <pt x="1024" y="1652" on="1"/>
        <pt x="991" y="1532" on="0"/>
        <pt x="942" y="1418" on="1"/>
        <pt x="1799" y="1431" on="1"/>
        <pt x="1812" y="-274" on="1"/>
        <pt x="1630" y="-274" on="1"/>
        <pt x="1657" y="-125" on="1"/>
        <pt x="391" y="-134" on="1"/>
        <pt x="409" y="-266" on="1"/>
        <pt x="230" y="-245" on="1"/>
      </contour>
      <contour>
        <pt x="393" y="-10" on="1"/>
        <pt x="1651" y="-2" on="1"/>
        <pt x="1643" y="335" on="1"/>
        <pt x="421" y="329" on="1"/>
      </contour>
      <contour>
        <pt x="395" y="469" on="1"/>
        <pt x="1654" y="474" on="1"/>
        <pt x="1625" y="812" on="1"/>
        <pt x="406" y="824" on="1"/>
      </contour>
      <contour>
        <pt x="1646" y="1270" on="1"/>
        <pt x="423" y="1289" on="1"/>
        <pt x="401" y="953" on="1"/>
        <pt x="1632" y="970" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 2 values pushed */
          3 356
          PUSHB[ ]	/* 3 values pushed */
          4 4 6
          PUSHW[ ]	/* 3 values pushed */
          355 1 -16
          PUSHB[ ]	/* 6 values pushed */
          1 15 19 25 3 8
          PUSHW[ ]	/* 1 value pushed */
          354
          NPUSHB[ ]	/* 10 values pushed */
          1 13 9 9 27 14 18 24 3 12
          PUSHW[ ]	/* 1 value pushed */
          354
          PUSHB[ ]	/* 4 values pushed */
          64 13 18 17
          PUSHW[ ]	/* 1 value pushed */
          314
          PUSHB[ ]	/* 3 values pushed */
          89 24 21
          PUSHW[ ]	/* 1 value pushed */
          314
          NPUSHB[ ]	/* 30 values pushed */
          89 159 18 175 18 2 15 18 207 18 2 11 15 24 1 12 3 18 24 18 24 14 0 13 13
          9 9 11 14 11
          PUSHW[ ]	/* 1 value pushed */
          315
          NPUSHB[ ]	/* 20 values pushed */
          89 14 64 11 15 72 14 4 0 3 32 3 2 12 3 3 3 0 0 23
          PUSHW[ ]	/* 1 value pushed */
          315
          PUSHB[ ]	/* 6 values pushed */
          89 6 63 0 1 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHP[1]	/* ShiftPointByLastPoint */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SDS[ ]	/* SetDeltaShiftInGState */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDB[ ]	/* SetDeltaBaseInGState */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIRP[01101]	/* MoveIndirectRelPt */
          SLOOP[ ]	/* SetLoopVariable */
          SHP[1]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          SHPIX[ ]	/* ShiftZoneByPixel */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniEE0A" xMin="44" yMin="-43" xMax="1996" yMax="1444">
      <contour>
        <pt x="216" y="1444" on="1"/>
        <pt x="1833" y="1443" on="1"/>
        <pt x="1859" y="1264" on="1"/>
        <pt x="198" y="1253" on="1"/>
      </contour>
      <contour>
        <pt x="44" y="154" on="1"/>
        <pt x="1969" y="151" on="1"/>
        <pt x="1996" y="-43" on="1"/>
        <pt x="77" y="-23" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          2 3 2 3 7 6 6 9 7 4 7
          PUSHW[ ]	/* 1 value pushed */
          320
          PUSHB[ ]	/* 4 values pushed */
          89 4 0 3
          PUSHW[ ]	/* 1 value pushed */
          320
          PUSHB[ ]	/* 8 values pushed */
          89 31 0 1 175 0 1 0
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

  </glyf>

  <name>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x403">
      Normal
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x405">
      obyčejné
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x406">
      Normal
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x407">
      Standard
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x408">
      Κανονικά
    </namerecord>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      © 2015  Microsoft Corporation. All Rights Reserved. Portions © 2015 Beijing Founder Electronics Co. Ltd. All Rights Reserved.
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      Microsoft YaHei
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      Microsoft YaHei Regular
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      Microsoft YaHei
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 6.21
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      MicrosoftYaHei
    </namerecord>
    <namerecord nameID="7" platformID="3" platEncID="1" langID="0x409">
      Microsoft YaHei is a trademark of the Microsoft group of companies.
    </namerecord>
    <namerecord nameID="8" platformID="3" platEncID="1" langID="0x409">
      Microsoft Corporation
    </namerecord>
    <namerecord nameID="9" platformID="3" platEncID="1" langID="0x409">
      Founder
    </namerecord>
    <namerecord nameID="10" platformID="3" platEncID="1" langID="0x409">
      The font glyphs are certified compliant with China standard GB18030-2000 with the font name Founder Lan Ting Hei.  Microsoft Licensed the font glyph from Beijing Founder  Electronics Co. Ltd.
本字库字形从北京北大方正电子有限公司授权。本字库字形 以字库名方正兰亭黑通过中国标准符合性检测，符合中国 GB18030-2000标准。
    </namerecord>
    <namerecord nameID="11" platformID="3" platEncID="1" langID="0x409">
      http://www.microsoft.com/typography
    </namerecord>
    <namerecord nameID="12" platformID="3" platEncID="1" langID="0x409">
      http://www.founder.com.cn/cn
    </namerecord>
    <namerecord nameID="13" platformID="3" platEncID="1" langID="0x409">
      You may use this font as permitted by the EULA for the product in which this font is included to display and print content. You may only (i) embed this font in content as permitted by the embedding restrictions included in this font; and (ii) temporarily download this font to a printer or other output device to help print content.
    </namerecord>
    <namerecord nameID="14" platformID="3" platEncID="1" langID="0x409">
      http://www.microsoft.com/typography/fonts
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x40a">
      Normal
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x40b">
      Normaali
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x40c">
      Normal
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x40e">
      Normál
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x410">
      Normale
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x413">
      Standaard
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x414">
      Normal
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x415">
      Normalny
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x416">
      Normal
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x419">
      Обычный
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x41b">
      Normálne
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x41d">
      Normal
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x41f">
      Normal
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x424">
      Navadno
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x42d">
      Arrunta
    </namerecord>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x804">
      © 2015 微软公司版权所有 © 2015 北京北大方正电子有限公司部分版权所有
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x804">
      微软雅黑
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x804">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x804">
      微软雅黑 Regular
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x804">
      微软雅黑
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x804">
      Version 6.21
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x804">
      MicrosoftYaHeiRegular
    </namerecord>
    <namerecord nameID="7" platformID="3" platEncID="1" langID="0x804">
      Microsoft YaHei is a trademark of the Microsoft group of companies.
    </namerecord>
    <namerecord nameID="8" platformID="3" platEncID="1" langID="0x804">
      Microsoft Corporation
    </namerecord>
    <namerecord nameID="9" platformID="3" platEncID="1" langID="0x804">
      北大方正电子有限公司
    </namerecord>
    <namerecord nameID="10" platformID="3" platEncID="1" langID="0x804">
      The font glyphs are certified compliant with China standard GB18030-2000 with the font name Founder Lan Ting Hei.  Microsoft Licensed the font glyph from Beijing Founder  Electronics Co. Ltd.
本字库字形从北京北大方正电子有限公司授权。本字库字形 以字库名方正兰亭黑通过中国标准符合性检测，符合中国 GB18030-2000标准。
    </namerecord>
    <namerecord nameID="11" platformID="3" platEncID="1" langID="0x804">
      http://www.microsoft.com/typography
    </namerecord>
    <namerecord nameID="12" platformID="3" platEncID="1" langID="0x804">
      http://www.founder.com.cn/cn
    </namerecord>
    <namerecord nameID="13" platformID="3" platEncID="1" langID="0x804">
      You may use this font as permitted by the EULA for the product in which this font is included to display and print content. You may only (i) embed this font in content as permitted by the embedding restrictions included in this font; and (ii) temporarily download this font to a printer or other output device to help print content.
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x80a">
      Normal
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x816">
      Normal
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0xc0a">
      Normal
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0xc0c">
      Normal
    </namerecord>
  </name>

  <post>
    <formatType value="3.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-178"/>
    <underlineThickness value="129"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="8" rangeGaspBehavior="14"/>
    <gaspRange rangeMaxPPEM="21" rangeGaspBehavior="7"/>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="11"/>
  </gasp>

  <GDEF>
    <Version value="0x00010000"/>
    <GlyphClassDef Format="1">
      <ClassDef glyph=".notdef" class="1"/>
    </GlyphClassDef>
    <LigCaretList>
      <Coverage Format="1">
      </Coverage>
      <!-- LigGlyphCount=0 -->
    </LigCaretList>
  </GDEF>

  <MERG raw="True">
    <hexdata>
      00000001 000a0000 000c0000 
    </hexdata>
  </MERG>

  <meta>
    <text tag="dlng">
      Hans
    </text>
    <text tag="slng">
      Hans
    </text>
  </meta>

</ttFont>
